Script started on 2021-09-30 10:11:32-04:00 [TERM="xterm-256color" TTY="/dev/pts/7" COLUMNS="80" LINES="24"]
\bash: /home/umrigar/cs220/bin.student.rc: No such file or directory
dorbach1@remote05:~/i220a/submit/lab4$ \[Ks[Ks[Kls
exercises  lab4.LOG
dorbach1@remote05:~/i220a/submit/lab4$ cd lab[K[K[Kexercises/
dorbach1@remote05:~/i220a/submit/lab4/exercises$ cd pointers/
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ ls
pointers.c
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ cd ..
dorbach1@remote05:~/i220a/submit/lab4/exercises$ ls
1  3  5  7	    bug-program  in-pointers  Makefile	void-pointers
2  4  6  bad-types  cast-types	 in-voids     pointers
dorbach1@remote05:~/i220a/submit/lab4/exercises$ cd pointers
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ vi pointers.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;24r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[24;1H"pointers.c" 18L, 458C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mchar[m *cp = chars;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(chars)/[31msizeof[m(chars[[95m0[m]); i++) {
    printf([95m"char pointer cp = %p, pointing at char %c\n"[m, cp, *cp);
    cp++;
  }

  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mint[m *ip = ints;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"int pointer ip = %p, pointing at int %d\n"[m, ip, *ip);
    ip++;
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                               [20;1H~                                                                               [21;1H~                                                                               [22;1H~                                                                               [23;1H~                                                                               [m[24;63H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[24;63H2,0-1[2;1H[?25h[27m[23m[29m[m[H[2J[?25l[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mchar[m *cp = chars;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(chars)/[31msizeof[m(chars[[95m0[m]); i++) {
    printf([95m"char pointer cp = %p, pointing at char %c\n"[m, cp, *cp);
    cp++;
  }

  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mint[m *ip = ints;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"int pointer ip = %p, pointing at int %d\n"[m, ip, *ip);
    ip++;
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                                                                                                                                             [43;1H~                                                                                                                                                                                             [44;1H~                                                                                                                                                                                             [45;1H~                                                                                                                                                                                             [46;1H~                                                                                                                                                                                             [47;1H~                                                                                                                                                                                             [48;1H~                                                                                                                                                                                             [m[49;173H2,0-1[9CAll[2;1H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  pointers.c   -o pointers
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ ./pointers
char pointer cp = 0x7ffd347e318f, pointing at char a
char pointer cp = 0x7ffd347e3190, pointing at char b
char pointer cp = 0x7ffd347e3191, pointing at char c
char pointer cp = 0x7ffd347e3192, pointing at char d
char pointer cp = 0x7ffd347e3193, pointing at char e
int pointer ip = 0x7ffd347e3170, pointing at int 1
int pointer ip = 0x7ffd347e3174, pointing at int 2
int pointer ip = 0x7ffd347e3178, pointing at int 3
int pointer ip = 0x7ffd347e317c, pointing at int 4
int pointer ip = 0x7ffd347e3180, pointing at int 5
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ ./pointers
char pointer cp = 0x7fff0da708ef, pointing at char a
char pointer cp = 0x7fff0da708f0, pointing at char b
char pointer cp = 0x7fff0da708f1, pointing at char c
char pointer cp = 0x7fff0da708f2, pointing at char d
char pointer cp = 0x7fff0da708f3, pointing at char e
int pointer ip = 0x7fff0da708d0, pointing at int 1
int pointer ip = 0x7fff0da708d4, pointing at int 2
int pointer ip = 0x7fff0da708d8, pointing at int 3
int pointer ip = 0x7fff0da708dc, pointing at int 4
int pointer ip = 0x7fff0da708e0, pointing at int 5
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ ./pointers
char pointer cp = 0x7fffda0f899f, pointing at char a
char pointer cp = 0x7fffda0f89a0, pointing at char b
char pointer cp = 0x7fffda0f89a1, pointing at char c
char pointer cp = 0x7fffda0f89a2, pointing at char d
char pointer cp = 0x7fffda0f89a3, pointing at char e
int pointer ip = 0x7fffda0f8980, pointing at int 1
int pointer ip = 0x7fffda0f8984, pointing at int 2
int pointer ip = 0x7fffda0f8988, pointing at int 3
int pointer ip = 0x7fffda0f898c, pointing at int 4
int pointer ip = 0x7fffda0f8990, pointing at int 5
dorbach1@remote05:~/i220a/submit/lab4/exercises/pointers$ cd ..
dorbach1@remote05:~/i220a/submit/lab4/exercises$ cd in-pointers/
dorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  in-pointers.c   -o in-pointers
dorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ ./in-pointee[Krs
Given the base address of an int[] array you need to
provide the address of a specified element.
An int occupies 4 bytes.

Please provide addresses in hex without any leading 0x
You will need 3 correct responses in succession in order
to complete this exercise.
base of ints[] is at 0x7ffd3fa425f0
enter pointer to ints[3]: 7ffd3fa425fc
ok
base of ints[] is at 0x7ffd3fa425f0
enter pointer to ints[1]: 7ffd3fa45 25f4
ok
base of ints[] is at 0x7ffd3fa425f0
enter pointer to ints[2]: 7ffd3fa425f8] 
ok
# ok = 3; # errors = 0
dorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ ./in-pointers
Given the base address of an int[] array you need to
provide the address of a specified element.
An int occupies 4 bytes.

Please provide addresses in hex without any leading 0x
You will need 3 correct responses in succession in order
to complete this exercise.
base of ints[] is at 0x7ffc281572e0
enter pointer to ints[3]: 111222   1222       777722227777
Segmentation fault
dorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ cd ../BadT[K[K[K[Kbad-types
dorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ cd ../in-pointers
dorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ vi in-pointers.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"in-pointers.c" 48L, 1281C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdbool.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m

[94mint[m main() {
  [94menum[m { N = [95m5[m };
  [94menum[m { MIN_OK_RUN = [95m3[m };

  [94mint[m ints[N];
  [94mint[m nOk = [95m0[m;
  [94mint[m nErr = [95m0[m;
  [94mint[m nRun = [95m0[m;
  printf([95m"Given the base address of an int[] array you need to\n"[14;10H"provide the address of a specified element.\n"[15;10H"An int occupies %zu bytes.\n\n"[16;10H"Please provide addresses in hex without any leading 0x\n"[17;10H"You will need %d correct responses in succession in order\n"[18;10H"to complete this exercise.\n"[m, [31msizeof[m([94mint[m), MIN_OK_RUN);
  [31mwhile[m (nRun < MIN_OK_RUN) {
    [94mint[m index = rand()%N;
    printf([95m"base of ints[] is at %p\n"[m, ints);
    printf([95m"enter pointer to ints[%d]: "[m, index);
    fflush([95mstdout[m);
    [94mint[m *p;
    [31mif[m (scanf([95m"%p"[m, &p) != [95m1[m) {[26;7Hprintf([95m"bad input: enter hex pointer value without leading 0x or 0X\n"[m);
    }
    [31melse[m {[29;7H[94mbool[m isOk = (p == &ints[index]);[30;7H[94mint[m val __attribute__((unused)) = *p;[31;7Hprintf([95m"%s\n"[m, isOk ? [95m"ok"[m : [95m"not ok"[m);[32;7H[31mif[m (isOk) {[33;9HnOk++;[34;9HnRun++;[35;7H}[36;7H[31melse[m {[37;9HnErr++;[38;9HnRun = [95m0[m;[39;7H}
    }
    [94mint[m c = getchar();
    [31mwhile[m (c != [95m'\n'[m && c != [95mEOF[m) { [91m//waste line[m[43;7Hc = getchar();
    }
  }
  printf([95m"# ok = %d; # errors = %d\n"[m, nOk, nErr);
  [31mreturn[m [95m0[m;
}[49;173H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4,0-1[4;1H[?25h[?25l[49;173H5,1  [5;1H[?25h[?25l[49;173H6[6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8,0-1[8;1H[?25h[?25l[49;173H9,1  [9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[49;174H1[11;1H[?25h[?25l[49;174H2[12;1H[?25h[?25l[49;174H3[13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l[49;174H9[19;1H[?25h[?25l[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8[38;1H[?25h[?25l[49;174H9[39;1H[?25h[?25l[49;173H40[40;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[5;12H[106m{[48;1H}[m[49;174H8[48;1H[?25h[?25l[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@remote05:~/i220a/submit/lab4/exercises/in-pointers$ vi in-pointers.ccd ../in-pointers[2Pbad-types
dorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ vi bad=ty[es[K[K[Kpes.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bad=types.c" [New File][2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[2;1H[94m~                                                                                                                                                                                             [3;1H~                                                                                                                                                                                             [4;1H~                                                                                                                                                                                             [5;1H~                                                                                                                                                                                             [6;1H~                                                                                                                                                                                             [7;1H~                                                                                                                                                                                             [8;1H~                                                                                                                                                                                             [9;1H~                                                                                                                                                                                             [10;1H~                                                                                                                                                                                             [11;1H~                                                                                                                                                                                             [12;1H~                                                                                                                                                                                             [13;1H~                                                                                                                                                                                             [14;1H~                                                                                                                                                                                             [15;1H~                                                                                                                                                                                             [16;1H~                                                                                                                                                                                             [17;1H~                                                                                                                                                                                             [18;1H~                                                                                                                                                                                             [19;1H~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                                                                                                                                             [43;1H~                                                                                                                                                                                             [44;1H~                                                                                                                                                                                             [45;1H~                                                                                                                                                                                             [46;1H~                                                                                                                                                                                             [47;1H~                                                                                                                                                                                             [48;1H~                                                                                                                                                                                             [m[49;173H0,0-1[9CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ vi bad-types.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bad-types.c" 18L, 521C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m cs[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mchar[m *cp = ints;  [91m//expect warning[m
  [94mint[m *ip = cs;     [91m//expect warning[m
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(cs)/[31msizeof[m(cs[[95m0[m]); i++) {
    printf([95m"char pointer cp = %p, pointing at char '%c' (0x%x)\n"[m,[10;12Hcp, *cp, *cp);
    cp++;
  }
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"int pointer ip = %p, pointing at int %d (0x%x)\n"[m, ip, *ip, *ip);
    ip++;
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                                                                                                                                             [43;1H~                                                                                                                                                                                             [44;1H~                                                                                                                                                                                             [45;1H~                                                                                                                                                                                             [46;1H~                                                                                                                                                                                             [47;1H~                                                                                                                                                                                             [48;1H~                                                                                                                                                                                             [m[49;173H1,1[11CAll[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l[23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bad-types.c   -o bad-types
[01m[Kbad-types.c:[m[K In function â€˜[01m[Kmain[m[Kâ€™:
[01m[Kbad-types.c:6:14:[m[K [01;35m[Kwarning: [m[Kinitialization of â€˜[01m[Kchar *[m[Kâ€™ from incompatible pointer type â€˜[01m[Kint *[m[Kâ€™ [[01;35m[K-Wincompatible-pointer-types[m[K]
   char *cp = [01;35m[Kints[m[K;  //expect warning
              [01;35m[K^~~~[m[K
[01m[Kbad-types.c:7:13:[m[K [01;35m[Kwarning: [m[Kinitialization of â€˜[01m[Kint *[m[Kâ€™ from incompatible pointer type â€˜[01m[Kchar *[m[Kâ€™ [[01;35m[K-Wincompatible-pointer-types[m[K]
   int *ip = [01;35m[Kcs[m[K;     //expect warning
             [01;35m[K^~[m[K
dorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ ./bad-types
char pointer cp = 0x7fff3696e1c0, pointing at char '' (0x1)
char pointer cp = 0x7fff3696e1c1, pointing at char ' ' (0x0)
char pointer cp = 0x7fff3696e1c2, pointing at char ' ' (0x0)
char pointer cp = 0x7fff3696e1c3, pointing at char ' ' (0x0)
char pointer cp = 0x7fff3696e1c4, pointing at char '' (0x2)
int pointer ip = 0x7fff3696e1e3, pointing at int 1684234849 (0x64636261)
int pointer ip = 0x7fff3696e1e7, pointing at int 357 (0x165)
int pointer ip = 0x7fff3696e1eb, pointing at int 1280 (0x500)
int pointer ip = 0x7fff3696e1ef, pointing at int -1763578112 (0x96e1ef00)
int pointer ip = 0x7fff3696e1f3, pointing at int 8388406 (0x7fff36)
dorbach1@remote05:~/i220a/submit/lab4/exercises/bad-types$ vi./bad-typesmake -f ../Makefile[5Pvi bad-types.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bad-types.c" 18L, 521C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m cs[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mchar[m *cp = ints;  [91m//expect warning[m
  [94mint[m *ip = cs;     [91m//expect warning[m
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(cs)/[31msizeof[m(cs[[95m0[m]); i++) {
    printf([95m"char pointer cp = %p, pointing at char '%c' (0x%x)\n"[m,[10;12Hcp, *cp, *cp);
    cp++;
  }
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"int pointer ip = %p, pointing at int %d (0x%x)\n"[m, ip, *ip, *ip);
    ip++;
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                      Script started on 2021-09-30 10:32:55-04:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="80" LINES="24"]
bash: /home/umrigar/cs220/bin.student.rc: No such file or directory
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4$ ls
exercises  lab4.LOG
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4$ cd x[K[Ke[K exercises/
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises$ [Kdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises$ cd csa[K[Kast-types/
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/cast-types$ b[Kvi cast-types.c 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"cast-types.c" 18L, 561C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mchar[m *cp = ([94mchar[m *)ints;
  [94mint[m *ip = ([94mint[m *)chars;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(chars)/[31msizeof[m(chars[[95m0[m]); i++) {
    printf([95m"char pointer cp = %p, pointing at int %d (0x%x)\n"[m,[10;12Hcp, *cp, *cp);
    cp = ([94mchar[m *)((([94mint[m *)cp) + [95m1[m);
  }
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"int pointer ip = %p, pointing at char '%c' (0x%x)\n"[m, ip, *ip, *ip);
    ip = ([94mint[m *)((([94mchar[m *)ip) + [95m1[m);
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                                                                                                                                             [43;1H~                                                                                                                                                                                             [44;1H~                                                                                                                                                                                             [45;1H~                                                                                                                                                                                             [46;1H~                                                                                                                                                                                             [47;1H~                                                                                                                                                                                             [48;1H~                                                                                                                                                                                             [m[49;173H1,1[11CAll]2;cast-types.c (~/projects/i220a/submit/lab4/exercises/cast-types) - VIM]1;cast-types.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/cast-types$ .[Kmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  cast-types.c   -o cast-types
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/cast-types$ ./cast-types
char pointer cp = 0x7ffe451872e0, pointing at int 1 (0x1)
char pointer cp = 0x7ffe451872e4, pointing at int 2 (0x2)
char pointer cp = 0x7ffe451872e8, pointing at int 3 (0x3)
char pointer cp = 0x7ffe451872ec, pointing at int 4 (0x4)
char pointer cp = 0x7ffe451872f0, pointing at int 5 (0x5)
int pointer ip = 0x7ffe45187303, pointing at char 'a' (0x64636261)
int pointer ip = 0x7ffe45187304, pointing at char 'b' (0x65646362)
int pointer ip = 0x7ffe45187305, pointing at char 'c' (0x2656463)
int pointer ip = 0x7ffe45187306, pointing at char 'd' (0x36564)
int pointer ip = 0x7ffe45187307, pointing at char 'e' (0x465)
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/cast-types$ ls
cast-types  cast-types.c
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/cast-types$ cd ../void-pointers/
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/void-pointers$ make void[K[K[K[K[K[K[K[K[Kbi [K[K[Kvi void-point[Kters.c 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"void-pointers.c" 17L, 485C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mint[m main() {
  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  [94mvoid[m *p = chars;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(chars)/[31msizeof[m(chars[[95m0[m]); i++) {
    printf([95m"void pointer p = %p, pointing at char %c\n"[m, p, *([94mchar[m *)p);
    p = ([94mchar[m *)p + [95m1[m;
  }
  p = ints;
  [31mfor[m ([94munsigned[m i = [95m0[m; i < [31msizeof[m(ints)/[31msizeof[m(ints[[95m0[m]); i++) {
    printf([95m"void pointer p = %p, pointing at int %d\n"[m, p, *([94mint[m *)p);
    p = ([94mint[m *)p + [95m1[m;
  }
  [31mreturn[m [95m0[m;
}
[94m~                                                                                                                                                                                             [19;1H~                                                                                                                                                                                             [20;1H~                                                                                                                                                                                             [21;1H~                                                                                                                                                                                             [22;1H~                                                                                                                                                                                             [23;1H~                                                                                                                                                                                             [24;1H~                                                                                                                                                                                             [25;1H~                                                                                                                                                                                             [26;1H~                                                                                                                                                                                             [27;1H~                                                                                                                                                                                             [28;1H~                                                                                                                                                                                             [29;1H~                                                                                                                                                                                             [30;1H~                                                                                                                                                                                             [31;1H~                                                                                                                                                                                             [32;1H~                                                                                                                                                                                             [33;1H~                                                                                                                                                                                             [34;1H~                                                                                                                                                                                             [35;1H~                                                                                                                                                                                             [36;1H~                                                                                                                                                                                             [37;1H~                                                                                                                                                                                             [38;1H~                                                                                                                                                                                             [39;1H~                                                                                                                                                                                             [40;1H~                                                                                                                                                                                             [41;1H~                                                                                                                                                                                             [42;1H~                                                                                                                                                                                             [43;1H~                                                                                                                                                                                             [44;1H~                                                                                                                                                                                             [45;1H~                                                                                                                                                                                             [46;1H~                                                                                                                                                                                             [47;1H~                                                                                                                                                                                             [48;1H~                                                                                                                                                                                             [m[49;173H1,1[11CAll]2;void-pointers.c (~/projects/i220a/submit/lab4/exercises/void-pointers) - VIM]1;void-pointers.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hQ[?25l[?25h[?25l[49;2H[K[49;2H[?25hq[?25l[?25h[?25l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/void-pointers$ make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  void-pointers.c   -o void-pointers
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/void-pointers$ ./void`[K-pointers 
void pointer p = 0x7ffd522c53eb, pointing at char a
void pointer p = 0x7ffd522c53ec, pointing at char b
void pointer p = 0x7ffd522c53ed, pointing at char c
void pointer p = 0x7ffd522c53ee, pointing at char d
void pointer p = 0x7ffd522c53ef, pointing at char e
void pointer p = 0x7ffd522c53d0, pointing at int 1
void pointer p = 0x7ffd522c53d4, pointing at int 2
void pointer p = 0x7ffd522c53d8, pointing at int 3
void pointer p = 0x7ffd522c53dc, pointing at int 4
void pointer p = 0x7ffd522c53e0, pointing at int 5
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/void-pointers$ cd ../in-voids/
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/in-voids$ vi in-`[Kvoids.c 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"in-voids.c" 48L, 1118C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mtypedef[m [94mstruct[m {
  [94mconst[m [94mchar[m *exp;
  [94mvoid[m *p;
} ExpPointer;

[94mint[m main() {

  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  ExpPointer questions[] = {
    { [95m"ints[2]"[m, &ints[[95m2[m] },
    { [95m"chars[3]"[m, &chars[[95m3[m] },
    { [95m"ints[4]"[m, &ints[[95m4[m] },
    { [95m"chars[1]"[m, &chars[[95m1[m] },
    { [95m"chars[4]"[m, &chars[[95m4[m] },
    { [95m"ints[1]"[m, &ints[[95m1[m] },
  };
  [31mfor[m ([94munsigned[m i = [95m0[m;[21;8H!feof([95mstdin[m) && i < [31msizeof[m(questions)/[31msizeof[m(questions[[95m0[m]);[22;8Hi++) {
    ExpPointer q = questions[i];
    [94mint[m isOk = [95m0[m;
    [31mdo[m {[26;7Hprintf([95m"chars[] is at %p; ints[] ints at %p\n"[m, chars, ints);[27;7Hprintf([95m"enter pointer to %s: "[m, q.exp);[28;7Hfflush([95mstdout[m);[29;7H[94mvoid[m *p;[30;7H[94mint[m nOk = scanf([95m"%p"[m, &p);[31;7H[31mif[m (nOk == [95m1[m) {[32;9HisOk = (p == q.p);[33;9Hprintf([95m"%s\n"[m, isOk ? [95m"ok"[m : [95m"not ok"[m);[34;7H}[35;7H[31melse[m [31mif[m (nOk == [95mEOF[m) {[36;9H[31mbreak[m;[37;7H}[38;7H[31melse[m {[39;9Hprintf([95m"bad input: enter hex pointer value\n"[m);[40;7H}[41;7H[94mint[m c = getchar();[42;7H[31mwhile[m (c != [95m'\n'[m && c != [95mEOF[m) { [91m//waste line[m[43;9Hc = getchar();[44;7H}
    } [31mwhile[m (!isOk);
  }
  [31mreturn[m [95m0[m;
}[49;173H1,1[11CAll]2;in-voids.c (~/projects/i220a/submit/lab4/exercises/in-voids) - VIM]1;in-voids.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hQ[?25l[?25hq[?25l[?25h[?25l[49;3H[K[49;3H[?25h[?25l[49;2H[K[49;2H[?25hq[?25l[?25h[?25l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/in-voids$ make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  in-voids.c   -o in-voids
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/in-voids$ ./in-voids
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to ints[2]: 7ffd608c4d48
ok
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to chars[3]: 7ffd608c4d5cd e  e
ok
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to ints[4]: 7ffd608c4d50
ok
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to chars[1]: 7ffd607c  8c4d5bc  c
ok
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to chars[4]: 7ffd608c4d5 f\ ^[[D5      ^[[D     ^[[1;5D        4d5f
ok
chars[] is at 0x7ffd608c4d5b; ints[] ints at 0x7ffd608c4d40
enter pointer to ints[1]: ^C
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/in-voids$ ./in-voids[K[K[K[K[K[K[K[K[K[Kvi voi[K[K[Kin-voids.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"in-voids.c" 48L, 1118C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<stdio.h>[m

[94mtypedef[m [94mstruct[m {
  [94mconst[m [94mchar[m *exp;
  [94mvoid[m *p;
} ExpPointer;

[94mint[m main() {

  [94mchar[m chars[] = { [95m'a'[m, [95m'b'[m, [95m'c'[m, [95m'd'[m, [95m'e'[m };
  [94mint[m ints[] = { [95m1[m, [95m2[m, [95m3[m, [95m4[m, [95m5[m };
  ExpPointer questions[] = {
    { [95m"ints[2]"[m, &ints[[95m2[m] },
    { [95m"chars[3]"[m, &chars[[95m3[m] },
    { [95m"ints[4]"[m, &ints[[95m4[m] },
    { [95m"chars[1]"[m, &chars[[95m1[m] },
    { [95m"chars[4]"[m, &chars[[95m4[m] },
    { [95m"ints[1]"[m, &ints[[95m1[m] },
  };
  [31mfor[m ([94munsigned[m i = [95m0[m;[21;8H!feof([95mstdin[m) && i < [31msizeof[m(questions)/[31msizeof[m(questions[[95m0[m]);[22;8Hi++) {
    ExpPointer q = questions[i];
    [94mint[m isOk = [95m0[m;
    [31mdo[m {[26;7Hprintf([95m"chars[] is at %p; ints[] ints at %p\n"[m, chars, ints);[27;7Hprintf([95m"enter pointer to %s: "[m, q.exp);[28;7Hfflush([95mstdout[m);[29;7H[94mvoid[m *p;[30;7H[94mint[m nOk = scanf([95m"%p"[m, &p);[31;7H[31mif[m (nOk == [95m1[m) {[32;9HisOk = (p == q.p);[33;9Hprintf([95m"%s\n"[m, isOk ? [95m"ok"[m : [95m"not ok"[m);[34;7H}[35;7H[31melse[m [31mif[m (nOk == [95mEOF[m) {[36;9H[31mbreak[m;[37;7H}[38;7H[31melse[m {[39;9Hprintf([95m"bad input: enter hex pointer value\n"[m);[40;7H}[41;7H[94mint[m c = getchar();[42;7H[31mwhile[m (c != [95m'\n'[m && c != [95mEOF[m) { [91m//waste line[m[43;9Hc = getchar();[44;7H}
    } [31mwhile[m (!isOk);
  }
  [31mreturn[m [95m0[m;
}[49;173H1,1[11CAll]2;in-voids.c (~/projects/i220a/submit/lab4/exercises/in-voids) - VIM]1;in-voids.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/in-voids$ cd ../b`[Kug-program/
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi [K[K[Kls
bug-program.c
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-pr[Krogram.c \[K\
> 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 78L, 2206C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));

  [91m//allocate storage for string pointed to by k[m
  [94mchar[m *s = malloc(strlen(k));

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {
    free(p); [91m//free KeyValue struct[m
  }
}[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[38;1H}[m[49;174H9[19;1H[?25h[?25l{[38;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2,0-1[22;1H[?25h[?25l[49;174H3,1  [23;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H5,0-1[25;1H[?25h[?25l[49;174H6,1  [26;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1,0-1[31;1H[?25h[?25l[49;174H2,1  [32;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6,0-1[36;1H[?25h[?25l[49;174H7,1  [37;1H[?25h[?25l[19;1H[106m{[38;1H}[m[49;174H8[38;1H[?25h[?25l[19;1H{[38;1H}[49;174H9,0-1[39;1H[?25h[?25l[49;173H40,1  [40;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l
[106m{[48;1H}[m[49;174H3[43;1H[?25h[?25l{[48;1H}[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[43;1H[106m{[48;1H}[m[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[42;1H{[47;1H}[49;1H[K[49;173H49,0-1[9C3%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H50,1[11C6%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H51,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H52,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H53,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H54,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H55,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H56,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H57,1[10C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H58,1[10C33%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H59,1[10C36%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H60,1[10C40%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H61,1[10C43%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H62,1[10C46%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H63,1[10C50%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H64,1[10C53%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H65,1[10C56%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H66,1[10C60%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H67,0-1[8C63%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H68,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H69,1[10C70%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H70,1[10C73%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H71,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H72,1[10C80%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H73,1[10C83%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H74,1[10C86%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H75,1[10C90%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H76,1[10C93%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H77,1[10C96%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[41;12H[106m{[48;1H}[m[49;173H[K[49;173H78,1[10CBot[48;1H[?25h[?25l[41;12H{[48;1H}[49;174H7[47;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H0[40;1H[?25h[?25l[49;173H69[39;1H[?25h[?25l[49;174H8[38;1H[?25h[?25l[49;174H7,0-1[37;1H[?25h[?25l[24;23H[106m{[36;1H}[m[49;174H6,1  [36;1H[?25h[?25l[24;23H{[36;1H}[49;174H5[35;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H0[30;1H[?25h[?25l[49;173H59[29;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H0[20;1H[?25h[?25l[49;173H49,0-1[19;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H8,1  [18;1H[?25h[?25l[13;1H{[18;1H}[49;174H7[17;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H8[18;1H[?25h[?25l[13;1H{[18;1H}[49;174H9,0-1[19;1H[?25h[?25l[49;173H50,1  [20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H60[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[24;23H[106m{[36;1H}[m[49;174H6[36;1H[?25h[?25l[24;23H{[36;1H}[49;174H7,0-1[37;1H[?25h[?25l[49;174H8,1  [38;1H[?25h[?25l[49;174H9[39;1H[?25h[?25l[49;173H70[40;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[41;12H[106m{[48;1H}[m[49;174H8[48;1H[?25h[?25l[41;12H{[48;1H}[49;174H7[47;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H0[40;1H[?25h[?25l[49;173H69[39;1H[?25h[?25l[49;174H8[38;1H[?25h[?25l[49;174H7,0-1[37;1H[?25h[?25l[24;23H[106m{[36;1H}[m[49;174H6,1  [36;1H[?25h[?25l[24;23H{[36;1H}[49;174H5[35;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H0[30;1H[?25h[?25l[49;173H59[29;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H0[20;1H[?25h[?25l[49;173H49,0-1[19;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H8,1  [18;1H[?25h[?25l[13;1H{[18;1H}[49;174H7[17;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H3[13;1H[?25h[?25l{[18;1H}[49;174H2[12;1H[?25h[?25l[49;174H1[11;1H[?25h[?25l[49;174H0[10;1H[?25h[?25l[49;173H39,0-1[9;1H[?25h[?25l[49;174H8,1  [8;1H[?25h[?25l[49;174H7[7;1H[?25h[?25l[49;174H6,0-1[6;1H[?25h[?25l[49;174H5,1  [5;1H[?25h[?25l[49;174H4[4;1H[?25h[?25l[49;174H3[3;1H[?25h[?25l[49;174H2[2;1H[?25h[?25l[49;174H1,0-1[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3Hstrcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s[m[49;173H[K[49;173H30,1[10C96%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H}[49;173H[K[49;173H29,1[10C93%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hexit([95m1[m);[49;173H[K[49;173H28,1[10C90%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hfprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));[49;173H[K[49;173H27,1[10C86%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m[49;173H[K[49;173H26,1[10C83%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H25,0-1[8C80%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mchar[m *s = malloc(strlen(k));[49;173H[K[49;173H24,1[10C76%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//allocate storage for string pointed to by k[m[49;173H[K[49;173H23,1[10C73%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H22,0-1[8C70%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3HKeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));[49;173H[K[49;173H21,1[10C66%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//allocate storage for new KeyValue struct[m[49;173H[K[49;173H20,1[10C63%[1;1H[?25h[?25l[20;48r[20;1H[L[1;49r[1;1H[106m{[m[1;3H[K[2;3H[91m//allocate storage for new KeyValue struct[m[2;45H[K[3;3HKeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));[4;3H[K[5;3H[91m//allocate storage for string pointed to by k[m
  [94mchar[m *s = malloc(strlen(k));[7;3H[K[8;3H[31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }[11;4H[K[12;3Hstrcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s[m[13;3H[K[14;3H[91m//initialize fields of *kv.[m[15;7Hkey = s;[15;15H[K[16;7Hvalue = v;[16;17H[K[17;3Hkv->succ = keyValues;[18;3H[K[19;1H  [31mreturn[m kv;
[106m}[m[49;173H[K[49;173H19,1[10C60%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1Hadd_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{[21;1H}[49;173H[K[49;173H18,1[10C56%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H17,1[10C53%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m */[m[49;173H[K[49;173H16,1[10C50%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m *  resulting chain.[m[49;173H[K[49;173H15,1[10C46%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m *  key-value (k, v) at head of chain keyValues and return the[m[49;173H[K[49;173H14,1[10C43%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m/** Given some chain keyValues of key-value struct's, add the[m[49;173H[K[49;173H13,1[10C40%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H12,0-1[8C36%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H} KeyValueNode;[49;173H[K[49;173H11,1[10C33%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m[49;173H[K[49;173H10,1[10C30%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mint[m value;[13C[91m/** integer value */[m[49;173H[K[49;173H9,1[11C26%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mconst[m [94mchar[m *key;[7C[91m/** string key */[m[49;173H[K[49;173H8,1[11C23%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mtypedef[m [94mstruct[m KeyValueStruct {[49;173H[K[49;173H7,1[11C20%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m/** A struct used to form a linear chain of key-value pairs. */[m[49;173H[K[49;173H6,1[11C16%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H5,0-1[9C13%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<string.h>[m[49;173H[K[49;173H4,1[11C10%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdlib.h>[m[49;173H[K[49;173H3,1[12C6%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdio.h>[m[49;173H[K[49;173H2,1[12C3%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<errno.h>[m[49;173H[K[49;173H1,1[11CTop[1;1H[?25h[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[49;173H9,1 [9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H0[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1,1  [11;1H[?25h[?25l[7;31H{[11;1H}[49;174H0[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1,1  [11;1H[?25h[?25l[7;31H{[11;1H}[49;174H0[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1,1  [11;1H[?25h[?25l[7;31H{[11;1H}[49;174H0[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[38;1H}[m[49;174H9[19;1H[?25h[?25l{[38;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2,0-1[22;1H[?25h[?25l[49;174H3,1  [23;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H5,0-1[25;1H[?25h[?25l[49;174H6,1  [26;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1,0-1[31;1H[?25h[?25l[49;174H2,1  [32;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6,0-1[36;1H[?25h[?25l[49;174H7,1  [37;1H[?25h[?25l[19;1H[106m{[38;1H}[m[49;174H8[38;1H[?25h[?25l[19;1H{[38;1H}[49;174H9,0-1[39;1H[?25h[?25l[49;173H40,1  [40;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l
[106m{[48;1H}[m[49;174H3[43;1H[?25h[?25l{[48;1H}[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[43;1H[106m{[48;1H}[m[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[42;1H{[47;1H}[49;173H[K[49;173H49,0-1[9C3%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H50,1[11C6%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H51,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H52,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H53,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H54,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H55,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H56,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H57,1[10C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H58,1[10C33%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H59,1[10C36%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H60,1[10C40%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H61,1[10C43%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H62,1[10C46%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H63,1[10C50%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H64,1[10C53%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H65,1[10C56%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H66,1[10C60%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H67,0-1[8C63%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H68,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H69,1[10C70%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H70,1[10C73%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H71,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H72,1[10C80%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H73,1[10C83%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H74,1[10C86%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H75,1[10C90%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H76,1[10C93%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H77,1[10C96%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[41;12H[106m{[48;1H}[m[49;173H[K[49;173H78,1[10CBot[48;1H[?25h[?25l[41;12H{[48;1H}[49;174H7[47;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H0[40;1H[?25h[?25l[49;173H69[39;1H[?25h[?25l[49;174H8[38;1H[?25h[?25l[49;174H7,0-1[37;1H[?25h[?25l[24;23H[106m{[36;1H}[m[49;174H6,1  [36;1H[?25h[?25l[24;23H{[36;1H}[49;174H5[35;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H0[30;1H[?25h[?25l[49;173H59[29;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H0[20;1H[?25h[?25l[49;173H49,0-1[19;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H8,1  [18;1H[?25h[?25l[13;1H{[18;1H}[49;174H7[17;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[13;1H[106m{[18;1H}[m[49;174H3[13;1H[?25h[?25l{[18;1H}[49;174H2[12;1H[?25h[?25l[49;174H1[11;1H[?25h[?25l[49;174H0[10;1H[?25h[?25l[49;173H39,0-1[9;1H[?25h[?25l[49;174H8,1  [8;1H[?25h[?25l[49;174H7[7;1H[?25h[?25l[49;174H6,0-1[6;1H[?25h[?25l[49;174H5,1  [5;1H[?25h[?25l[49;174H4[4;1H[?25h[?25l[49;174H3[3;1H[?25h[?25l[49;174H2[2;1H[?25h[?25l[49;174H1,0-1[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3Hstrcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s[m[49;173H[K[49;173H30,1[10C96%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H}[49;173H[K[49;173H29,1[10C93%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hexit([95m1[m);[49;173H[K[49;173H28,1[10C90%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hfprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));[49;173H[K[49;173H27,1[10C86%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m[49;173H[K[49;173H26,1[10C83%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H25,0-1[8C80%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mchar[m *s = malloc(strlen(k));[49;173H[K[49;173H24,1[10C76%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//allocate storage for string pointed to by k[m[49;173H[K[49;173H23,1[10C73%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H22,0-1[8C70%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3HKeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));[49;173H[K[49;173H21,1[10C66%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//allocate storage for new KeyValue struct[m[49;173H[K[49;173H20,1[10C63%[1;1H[?25h[?25l[20;48r[20;1H[L[1;49r[1;1H[106m{[m[1;3H[K[2;3H[91m//allocate storage for new KeyValue struct[m[2;45H[K[3;3HKeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));[4;3H[K[5;3H[91m//allocate storage for string pointed to by k[m
  [94mchar[m *s = malloc(strlen(k));[7;3H[K[8;3H[31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }[11;4H[K[12;3Hstrcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s[m[13;3H[K[14;3H[91m//initialize fields of *kv.[m[15;7Hkey = s;[15;15H[K[16;7Hvalue = v;[16;17H[K[17;3Hkv->succ = keyValues;[18;3H[K[19;1H  [31mreturn[m kv;
[106m}[m[49;173H[K[49;173H19,1[10C60%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1Hadd_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{[21;1H}[49;173H[K[49;173H18,1[10C56%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H17,1[10C53%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m */[m[49;173H[K[49;173H16,1[10C50%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m *  resulting chain.[m[49;173H[K[49;173H15,1[10C46%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m *  key-value (k, v) at head of chain keyValues and return the[m[49;173H[K[49;173H14,1[10C43%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m/** Given some chain keyValues of key-value struct's, add the[m[49;173H[K[49;173H13,1[10C40%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H12,0-1[8C36%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H} KeyValueNode;[49;173H[K[49;173H11,1[10C33%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m[49;173H[K[49;173H10,1[10C30%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mint[m value;[13C[91m/** integer value */[m[49;173H[K[49;173H9,1[11C26%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mconst[m [94mchar[m *key;[7C[91m/** string key */[m[49;173H[K[49;173H8,1[11C23%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mtypedef[m [94mstruct[m KeyValueStruct {[49;173H[K[49;173H7,1[11C20%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[91m/** A struct used to form a linear chain of key-value pairs. */[m[49;173H[K[49;173H6,1[11C16%[1;1H[?25h[?25l[49;173H7[2;1H[?25h[?25l[49;173H8[3;1H[?25h[?25l[49;173H9[4;1H[?25h[?25l[49;173H10,1[5;1H[?25h[?25l[2;31H[106m{[6;1H}[m[49;174H1[6;1H[?25h[?25l[2;31H{[6;1H}[49;174H2,0-1[7;1H[?25h[?25l[49;174H3,1  [8;1H[?25h[?25l[49;174H4[9;1H[?25h[?25l[49;174H5[10;1H[?25h[?25l[49;174H6[11;1H[?25h[?25l[49;174H7[12;1H[?25h[?25l[49;174H8[13;1H[?25h[?25l
[106m{[33;1H}[m[49;174H9[14;1H[?25h[?25l{[33;1H}[49;173H20[15;1H[?25h[?25l[49;174H1[16;1H[?25h[?25l[49;174H2,0-1[17;1H[?25h[?25l[49;174H3,1  [18;1H[?25h[?25l[49;174H4[19;1H[?25h[?25l[49;174H5,0-1[20;1H[?25h[?25l[49;174H6,1  [21;1H[?25h[?25l[49;174H7[22;1H[?25h[?25l[49;174H8[23;1H[?25h[?25l[49;174H9[24;1H[?25h[?25l[49;173H30[25;1H[?25h[?25l[49;174H1,0-1[26;1H[?25h[?25l[49;174H2,1  [27;1H[?25h[?25l[49;174H3[28;1H[?25h[?25l[49;174H4[29;1H[?25h[?25l[49;174H5[30;1H[?25h[?25l[49;174H6,0-1[31;1H[?25h[?25l[49;174H7,1  [32;1H[?25h[?25l[14;1H[106m{[33;1H}[m[49;174H8[33;1H[?25h[?25l[14;1H{[33;1H}[49;174H9,0-1[34;1H[?25h[?25l[49;173H40,1  [35;1H[?25h[?25l[49;174H1[36;1H[?25h[?25l[49;174H2[37;1H[?25h[?25l
[106m{[43;1H}[m[49;174H3[38;1H[?25h[?25l{[43;1H}[49;174H4[39;1H[?25h[?25l[49;174H5[40;1H[?25h[?25l[49;174H6[41;1H[?25h[?25l[49;174H7[42;1H[?25h[?25l[38;1H[106m{[43;1H}[m[49;174H8[43;1H[?25h[?25l[38;1H{[43;1H}[49;174H9,0-1[44;1H[?25h[?25l[49;173H50,1  [45;1H[?25h[?25l[49;174H1[46;1H[?25h[?25l[49;174H2[47;1H[?25h[?25l[49;174H3[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H54,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H55,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H56,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H57,1[10C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H58,1[10C33%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H59,1[10C36%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H60,1[10C40%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H61,1[10C43%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H62,1[10C46%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H63,1[10C50%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H64,1[10C53%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H65,1[10C56%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H66,1[10C60%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H67,0-1[8C63%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H68,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H69,1[10C70%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H70,1[10C73%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H71,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H72,1[10C80%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H73,1[10C83%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H74,1[10C86%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H75,1[10C90%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H76,1[10C93%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H77,1[10C96%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[41;12H[106m{[48;1H}[m[49;173H[K[49;173H78,1[10CBot[48;1H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hq[?25l[?25h[?25l[?2004l]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t[49;1H[K[49;1H[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ //[K[K../ [K[K[K[Kmake -f ../Makefi;e
make: ../Makefi: No such file or directory
make: *** No rule to make target '../Makefi'.  Stop.
bash: e: command not found
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefi;e[1Pele
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ bu[K[K./bi[Kug-program
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program-c[K[K.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 78L, 2206C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode *));

  [91m//allocate storage for string pointed to by k[m
  [94mchar[m *s = malloc(strlen(k));

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {
    free(p); [91m//free KeyValue struct[m
  }
}[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[38;1H}[m[49;174H9[19;1H[?25h[?25l{[38;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2,0-1[22;1H[?25h[?25l[49;174H3,1  [23;1H[?25h[?25l[49;174H4[24;1H[?25h[?25l[49;174H5,0-1[25;1H[?25h[?25l[49;174H6,1  [26;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1,0-1[31;1H[?25h[?25l[49;174H2,1  [32;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6,0-1[36;1H[?25h[?25l[49;174H7,1  [37;1H[?25h[?25l[19;1H[106m{[38;1H}[m[49;174H8[38;1H[?25h[?25l[19;1H{[38;1H}[49;174H9,0-1[39;1H[?25h[?25l[49;173H40,1  [40;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H2[42;1H[?25h[?25l
[106m{[48;1H}[m[49;174H3[43;1H[?25h[?25l{[48;1H}[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[43;1H[106m{[48;1H}[m[49;174H8[48;1H[?25h[?25l[43;1H{[48;1H}[49;174H7[47;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[43;1H[106m{[48;1H}[m[49;174H3[43;1H[?25h[?25l{[48;1H}[49;174H2[42;1H[?25h[?25l[49;174H1[41;1H[?25h[?25l[49;174H0[40;1H[?25h[?25l[49;173H39,0-1[39;1H[?25h[?25l[19;1H[106m{[38;1H}[m[49;174H8,1  [38;1H[?25h[?25l[19;1H{[38;1H}[49;174H7[37;1H[?25h[?25l[49;174H6,0-1[36;1H[?25h[?25l[49;174H5,1  [35;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H3[33;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H1,0-1[31;1H[?25h[?25l[49;174H0,1  [30;1H[?25h[?25l[49;173H29[29;1H[?25h[?25l[49;174H8[28;1H[?25h[?25l[49;174H7[27;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H5,0-1[25;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H3[23;1H[?25h[?25l[49;174H2,0-1[22;1H[?25h[?25l[49;174H1,1  [21;1H[?25h[?25l[49;174H0[20;1H[?25h[?25l[19;1H[106m{[38;1H}[m[49;173H19[19;1H[?25h[?25l{[38;1H}[49;173H20[20;1H[?25h[?25l[49;176H2[20;2H[?25h[?25l[49;176H3[20;3H[?25h[?25l[49;176H4[20;4H[?25h[?25l[49;176H5[20;5H[?25h[?25l[49;176H6[20;6H[?25h[?25l[49;176H7[20;7H[?25h[?25l[49;176H8[20;8H[?25h[?25l[49;176H9[20;9H[?25h[?25l[49;176H10[20;10H[?25h[?25l[49;177H1[20;11H[?25h[?25l[49;177H2[20;12H[?25h[?25l[49;177H3[20;13H[?25h[?25l[49;177H4[20;14H[?25h[?25l[49;177H5[20;15H[?25h[?25l[49;177H6[20;16H[?25h[?25l[49;177H7[20;17H[?25h[?25l[49;177H8[20;18H[?25h[?25l[49;177H9[20;19H[?25h[?25l[49;176H20[20;20H[?25h[?25l[49;177H1[20;21H[?25h[?25l[49;177H2[20;22H[?25h[?25l[49;177H3[20;23H[?25h[?25l[49;177H4[20;24H[?25h[?25l[49;174H1[21;24H[?25h[?25l[49;177H5[21;25H[?25h[?25l[49;177H6[21;26H[?25h[?25l[49;177H7[21;27H[?25h[?25lc[106m([22C)[m[49;177H8[21;28H[?25h[?25l([22C)[49;177H9[21;29H[?25h[?25l[49;176H30[21;30H[?25h[?25l[49;177H1[21;31H[?25h[?25l[49;177H2[21;32H[?25h[?25l[49;177H3[21;33H[?25h[?25l[49;177H4[21;34H[?25h[?25l[1C[106m([14C)[m[49;177H5[21;35H[?25h[?25l([14C)[49;177H6[21;36H[?25h[?25l[49;177H7[21;37H[?25h[?25l[49;177H8[21;38H[?25h[?25l[49;177H9[21;39H[?25h[?25l[49;176H40[21;40H[?25h[?25l[49;177H1[21;41H[?25h[?25l[49;177H2[21;42H[?25h[?25l[49;177H3[21;43H[?25h[?25l[49;177H4[21;44H[?25h[?25l[49;177H5[21;45H[?25h[?25l[49;177H6[21;46H[?25h[?25l[49;177H7[21;47H[?25h[?25l[49;177H8[21;48H[?25h[?25l[49;177H9[21;49H[?25h[?25l[21;35H[106m([14C)[m[49;176H50[21;50H[?25h[?25l[21;35H([14C)[49;176H49[21;49H[?25h[?25l[49;174H0,44[20;44H[?25h[?25l[49;174H1,49[21;49H[?25h[?25l[49;1H[1m-- INSERT --[m[49;13H[K[49;173H21,49[9CTop[21;49H[?25h[?25l[21;35H[106m([14C)[m[49;176H50[21;50H[?25h[?25l)[1C;[21;52H[K[21;49H[106m)[m)[49;176H49]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[21;49H[?25h[?25l[21;35H([13C)[49;174H0,45[20;45H[?25h[?25l[21;48r[21;1H[L[1;49r[49;173H[K[49;173H21,1[10CTop[21;1H[?25h[?25l[49;176H2[21;2H[?25h[?25l/[49;176H3[21;3H[?25h[?25l[91m//[m[49;176H4[21;4H[?25h[?25l/[21;3H[K[49;176H3[21;3H[?25h[?25l[21;2H[K[49;176H2[21;2H[?25h[?25l[49;176H3[21;3H[?25h[?25l/[49;176H4[21;4H[?25h[?25l[91m//[m[49;176H5[21;5H[?25h[?25l[91mB[m[49;176H6[21;6H[?25h[?25l[91mU[m[49;176H7[21;7H[?25h[?25l[91mG[m[49;176H8[21;8H[?25h[?25l[91m [m[49;176H9[21;9H[?25h[?25l[91m1[m[49;176H10[21;10H[?25h[?25l[91m [m[49;177H1[21;11H[?25h[?25l[91m:[m[49;177H2[21;12H[?25h[?25l[91m [m[49;177H3[21;13H[?25h[?25l[91mK[m[49;177H4[21;14H[?25h[?25l[21;13H[K[49;177H3[21;13H[?25h[?25l[91ms[m[49;177H4[21;14H[?25h[?25l[91mu[m[49;177H5[21;15H[?25h[?25l[91mz[m[49;177H6[21;16H[?25h[?25l[91me[m[49;177H7[21;17H[?25h[?25l[91mo[m[49;177H8[21;18H[?25h[?25l[91mf[m[49;177H9[21;19H[?25h[?25l[91m([m[49;176H20[21;20H[?25h[?25l[91m)[m[91m[106m()[m[49;177H1[21;21H[?25h[?25l[21;20H[K[21;19H[91m([m[49;177H0[21;20H[?25h[?25l[21;19H[K[49;176H19[21;19H[?25h[?25l[21;18H[K[49;177H8[21;18H[?25h[?25l[21;17H[K[49;177H7[21;17H[?25h[?25l[21;16H[K[49;177H6[21;16H[?25h[?25l[21;15H[K[49;177H5[21;15H[?25h[?25l[21;14H[K[49;177H4[21;14H[?25h[?25l[91mi[m[49;177H5[21;15H[?25h[?25l[91mz[m[49;177H6[21;16H[?25h[?25l[91me[m[49;177H7[21;17H[?25h[?25l[91mo[m[49;177H8[21;18H[?25h[?25l[91mf[m[49;177H9[21;19H[?25h[?25l[91m([m[49;176H20[21;20H[?25h[?25l[91m)[m[91m[106m()[m[49;177H1[21;21H[?25h[?25l[49;177H0[21;20H[?25h[?25l[91m[106mK[m[91m)K[m[91m[106m)[m[49;177H1[21;21H[?25h[?25l[91m[106me[m[91m)e[m[91m[106m)[m[49;177H2[21;22H[?25h[?25l[91m[106my[m[91m)y[m[91m[106m)[m[49;177H3[21;23H[?25h[?25l[91m[106mV[m[91m)V[m[91m[106m)[m[49;177H4[21;24H[?25h[?25l[91m[106ma[m[91m)a[m[91m[106m)[m[49;177H5[21;25H[?25h[?25l[91m[106ml[m[91m)l[m[91m[106m)[m[49;177H6[21;26H[?25h[?25l[91m[106my[m[91m)y[m[91m[106m)[m[49;177H7[21;27H[?25h[?25l[91m[106me[m[91m)e[m[91m[106m)[m[49;177H8[21;28H[?25h[?25l[91m)[m[21;28H[K[21;27H[91m[106m)[m[49;177H7[21;27H[?25h[?25l[91m)[m[21;27H[K[21;26H[91m[106m)[m[49;177H6[21;26H[?25h[?25l[91m[106me[m[91m)e[m[91m[106m)[m[49;177H7[21;27H[?25h[?25l[91m)[m[21;27H[K[21;26H[91m[106m)[m[49;177H6[21;26H[?25h[?25l[91m[106mu[m[91m)u[m[91m[106m)[m[49;177H7[21;27H[?25h[?25l[91m[106me[m[91m)e[m[91m[106m)[m[49;177H8[21;28H[?25h[?25l[91m[106mN[m[91m)N[m[91m[106m)[m[49;177H9[21;29H[?25h[?25l[91m[106mo[m[91m)o[m[91m[106m)[m[49;176H30[21;30H[?25h[?25l[91m[106md[m[91m)d[m[91m[106m)[m[49;177H1[21;31H[?25h[?25l[91m[106me[m[91m)e[m[91m[106m)[m[49;177H2[21;32H[?25h[?25l[91m[106m [m[91m) [m[91m[106m)[m[49;177H3[21;33H[?25h[?25l[91m[106m*[m[91m)*[m[91m[106m)[m[49;177H4[21;34H[?25h[?25l[91m[106m [m[91m) [m[91m[106m)[m[49;177H5[21;35H[?25h[?25l[49;177H6[21;36H[?25h[?25l[91m [21;19H([15C)[m[49;177H7[21;37H[?25h[?25l[91mg[m[49;177H8[21;38H[?25h[?25l[91mi[m[49;177H9[21;39H[?25h[?25l[91mv[m[49;176H40[21;40H[?25h[?25l[91me[m[49;177H1[21;41H[?25h[?25l[91ms[m[49;177H2[21;42H[?25h[?25l[91m [m[49;177H3[21;43H[?25h[?25l[91mt[m[49;177H4[21;44H[?25h[?25l[91mh[m[49;177H5[21;45H[?25h[?25l[91me[m[49;177H6[21;46H[?25h[?25l[91m [m[49;177H7[21;47H[?25h[?25l[91ms[m[49;177H8[21;48H[?25h[?25l[91mi[m[49;177H9[21;49H[?25h[?25l[91mz[m[49;176H50[21;50H[?25h[?25l[91me[m[49;177H1[21;51H[?25h[?25l[91m [m[49;177H2[21;52H[?25h[?25l[91mo[m[49;177H3[21;53H[?25h[?25l[91mf[m[49;177H4[21;54H[?25h[?25l[91ma[m[49;177H5[21;55H[?25h[?25l[91m [m[49;177H6[21;56H[?25h[?25l[21;55H[K[49;177H5[21;55H[?25h[?25l[21;54H[K[49;177H4[21;54H[?25h[?25l[91m [m[49;177H5[21;55H[?25h[?25l[91ma[m[49;177H6[21;56H[?25h[?25l[91m [m[49;177H7[21;57H[?25h[?25l[91mp[m[49;177H8[21;58H[?25h[?25l[91mo[m[49;177H9[21;59H[?25h[?25l[91mi[m[49;176H60[21;60H[?25h[?25l[91mn[m[49;177H1[21;61H[?25h[?25l[91mt[m[49;177H2[21;62H[?25h[?25l[91me[m[49;177H3[21;63H[?25h[?25l[91mr[m[49;177H4[21;64H[?25h[?25l[49;174H2,52[22;52H[?25h[?25l[49;174H3,1 [23;1H[?25h[?25l[49;174H4,48[24;48H[?25h[?25l[49;174H5,31[25;31H[?25h[?25l[25;19H[106m([9C)[m[49;177H0[25;30H[?25h[?25l[49;176H29[25;29H[?25h[?25l[106m [m); [106m)[m[49;176H30[25;30H[?25h[?25l[106m+[m);+[106m)[m[49;177H1[25;31H[?25h[?25l[106m [m); [106m)[m[49;177H2[25;32H[?25h[?25l[95m[106m1[m);[95m1[m[106m)[m[49;177H3[25;33H[?25h[?25l[25;19H([13C)[49;174H4[24;33H[?25h[?25l[49;177H4[24;34H[?25h[?25l[49;177H5[24;35H[?25h[?25l[49;177H6[24;36H[?25h[?25l[49;177H7[24;37H[?25h[?25l[49;177H8[24;38H[?25h[?25l[49;177H9[24;39H[?25h[?25l[49;176H40[24;40H[?25h[?25l[49;177H1[24;41H[?25h[?25l[49;177H2[24;42H[?25h[?25l[49;177H3[24;43H[?25h[?25l[49;177H4[24;44H[?25h[?25l[49;177H5[24;45H[?25h[?25l[49;177H6[24;46H[?25h[?25l[49;177H7[24;47H[?25h[?25l[49;177H8[24;48H[?25h[?25l[25;48r[25;1H[L[1;49r[49;173H[K[49;173H25,1[10CTop[25;1H[?25h[?25l[49;176H2-9[25;9H[?25h[?25l[49;176H1  [25;1H[?25h[?25l[49;176H2[25;2H[?25h[?25l[49;176H3[25;3H[?25h[?25l/[49;176H4[25;4H[?25h[?25l[91m//[m[49;176H5[25;5H[?25h[?25l[91mB[m[49;176H6[25;6H[?25h[?25l[91mU[m[49;176H7[25;7H[?25h[?25l[91mG[m[49;176H8[25;8H[?25h[?25l[91m [m[49;176H9[25;9H[?25h[?25l[91m2[m[49;176H10[25;10H[?25h[?25l[91m [m[49;177H1[25;11H[?25h[?25l[91m:[m[49;177H2[25;12H[?25h[?25l[91m [m[49;177H3[25;13H[?25h[?25l[91ms[m[49;177H4[25;14H[?25h[?25l[91mt[m[49;177H5[25;15H[?25h[?25l[91mr[m[49;177H6[25;16H[?25h[?25l[91ml[m[49;177H7[25;17H[?25h[?25l[91me[m[49;177H8[25;18H[?25h[?25l[91mn[m[49;177H9[25;19H[?25h[?25l[25;18H[K[49;177H8[25;18H[?25h[?25l[25;17H[K[49;177H7[25;17H[?25h[?25l[91mn[m[49;177H8[25;18H[?25h[?25l[91m([m[49;177H9[25;19H[?25h[?25l[91m)[m[91m[106m()[m[49;176H20[25;20H[?25h[?25l[49;176H19[25;19H[?25h[?25l[91m[106mk[m[91m)k[m[91m[106m)[m[49;176H20[25;20H[?25h[?25l[49;177H1[25;21H[?25h[?25l[91m (k)[m[49;177H2[25;22H[?25h[?25l[91md[m[49;177H3[25;23H[?25h[?25l[91mo[m[49;177H4[25;24H[?25h[?25l[91me[m[49;177H5[25;25H[?25h[?25l[91ms[m[49;177H6[25;26H[?25h[?25l[91m [m[49;177H7[25;27H[?25h[?25l[91mn[m[49;177H8[25;28H[?25h[?25l[91mo[m[49;177H9[25;29H[?25h[?25l[91mt[m[49;176H30[25;30H[?25h[?25l[91m [m[49;177H1[25;31H[?25h[?25l[25;30H[K[49;177H0[25;30H[?25h[?25l[25;29H[K[49;176H29[25;29H[?25h[?25l[25;28H[K[49;177H8[25;28H[?25h[?25l[25;27H[K[49;177H7[25;27H[?25h[?25l[25;26H[K[49;177H6[25;26H[?25h[?25l[25;25H[K[49;177H5[25;25H[?25h[?25l[25;24H[K[49;177H4[25;24H[?25h[?25l[25;23H[K[49;177H3[25;23H[?25h[?25l[25;22H[K[49;177H2[25;22H[?25h[?25l[91mi[m[49;177H3[25;23H[?25h[?25l[91ms[m[49;177H4[25;24H[?25h[?25l[91m [m[49;177H5[25;25H[?25h[?25l[91mn[m[49;177H6[25;26H[?25h[?25l[91mo[m[49;177H7[25;27H[?25h[?25l[91mt[m[49;177H8[25;28H[?25h[?25l[91m [m[49;177H9[25;29H[?25h[?25l[91me[m[49;176H30[25;30H[?25h[?25l[91mn[m[49;177H1[25;31H[?25h[?25l[91mo[m[49;177H2[25;32H[?25h[?25l[91mu[m[49;177H3[25;33H[?25h[?25l[91mg[m[49;177H4[25;34H[?25h[?25l[91mh[m[49;177H5[25;35H[?25h[?25l[91m [m[49;177H6[25;36H[?25h[?25l[91ms[m[49;177H7[25;37H[?25h[?25l[91mp[m[49;177H8[25;38H[?25h[?25l[91ma[m[49;177H9[25;39H[?25h[?25l[91mc[m[49;176H40[25;40H[?25h[?25l[91me[m[49;177H1[25;41H[?25h[?25l[91m [m[49;177H2[25;42H[?25h[?25l[91mf[m[49;177H3[25;43H[?25h[?25l[91mo[m[49;177H4[25;44H[?25h[?25l[25;43H[K[49;177H3[25;43H[?25h[?25l[25;42H[K[49;177H2[25;42H[?25h[?25l[91mt[m[49;177H3[25;43H[?25h[?25l[91mo[m[49;177H4[25;44H[?25h[?25l[91m [m[49;177H5[25;45H[?25h[?25l[91mf[m[49;177H6[25;46H[?25h[?25l[91mi[m[49;177H7[25;47H[?25h[?25l[91mt[m[49;177H8[25;48H[?25h[?25l[91m [m[49;177H9[25;49H[?25h[?25l[91ma[m[49;176H50[25;50H[?25h[?25l[91m [m[49;177H1[25;51H[?25h[?25l[91ms[m[49;177H2[25;52H[?25h[?25l[91mt[m[49;177H3[25;53H[?25h[?25l[91mr[m[49;177H4[25;54H[?25h[?25l[91mi[m[49;177H5[25;55H[?25h[?25l[91mn[m[49;177H6[25;56H[?25h[?25l[91mg[m[49;177H7[25;57H[?25h[?25l[91m [m[49;177H8[25;58H[?25h[?25l[91ma[m[49;177H9[25;59H[?25h[?25l[91ms[m[49;176H60[25;60H[?25h[?25l[91m [m[49;177H1[25;61H[?25h[?25l[91mi[m[49;177H2[25;62H[?25h[?25l[91mt[m[49;177H3[25;63H[?25h[?25l[91m [m[49;177H4[25;64H[?25h[?25l[91md[m[49;177H5[25;65H[?25h[?25l[91mo[m[49;177H6[25;66H[?25h[?25l[91me[m[49;177H7[25;67H[?25h[?25l[91ms[m[49;177H8[25;68H[?25h[?25l[91mn[m[49;177H9[25;69H[?25h[?25l[91m'[m[49;176H70[25;70H[?25h[?25l[91mt[m[49;177H1[25;71H[?25h[?25l[91m [m[49;177H2[25;72H[?25h[?25l[91mi[m[49;177H3[25;73H[?25h[?25l[91mn[m[49;177H4[25;74H[?25h[?25l[91mc[m[49;177H5[25;75H[?25h[?25l[91ml[m[49;177H6[25;76H[?25h[?25l[91mu[m[49;177H7[25;77H[?25h[?25l[91md[m[49;177H8[25;78H[?25h[?25l[91me[m[49;177H9[25;79H[?25h[?25l[91m [m[49;176H80[25;80H[?25h[?25l[91ma[m[49;177H1[25;81H[?25h[?25l[91m [m[49;177H2[25;82H[?25h[?25l[91mn[m[49;177H3[25;83H[?25h[?25l[91mu[m[49;177H4[25;84H[?25h[?25l[91ml[m[49;177H5[25;85H[?25h[?25l[91ml[m[49;177H6[25;86H[?25h[?25l[91m [m[49;177H7[25;87H[?25h[?25l[91mp[m[49;177H8[25;88H[?25h[?25l[25;87H[K[49;177H7[25;87H[?25h[?25l[25;86H[K[49;177H6[25;86H[?25h[?25l[25;85H[K[49;177H5[25;85H[?25h[?25l[25;84H[K[49;177H4[25;84H[?25h[?25l[25;83H[K[49;177H3[25;83H[?25h[?25l[25;82H[K[49;177H2[25;82H[?25h[?25l[25;81H[K[49;177H1[25;81H[?25h[?25l[25;80H[K[49;177H0[25;80H[?25h[?25l[91ms[m[49;177H1[25;81H[?25h[?25l[91mp[m[49;177H2[25;82H[?25h[?25l[91ma[m[49;177H3[25;83H[?25h[?25l[91mc[m[49;177H4[25;84H[?25h[?25l[91me[m[49;177H5[25;85H[?25h[?25l[91m [m[49;177H6[25;86H[?25h[?25l[91mf[m[49;177H7[25;87H[?25h[?25l[91mo[m[49;177H8[25;88H[?25h[?25l[91mr[m[49;177H9[25;89H[?25h[?25l[91mt[m[49;176H90[25;90H[?25h[?25l[91m [m[49;177H1[25;91H[?25h[?25l[91mh[m[49;177H2[25;92H[?25h[?25l[91me[m[49;177H3[25;93H[?25h[?25l[25;92H[K[49;177H2[25;92H[?25h[?25l[25;91H[K[49;177H1[25;91H[?25h[?25l[25;90H[K[49;177H0[25;90H[?25h[?25l[25;89H[K[49;176H89[25;89H[?25h[?25l[91m [m[49;176H90[25;90H[?25h[?25l[91mt[m[49;177H1[25;91H[?25h[?25l[91mh[m[49;177H2[25;92H[?25h[?25l[91me[m[49;177H3[25;93H[?25h[?25l[91m [m[49;177H4[25;94H[?25h[?25l[91mn[m[49;177H5[25;95H[?25h[?25l[91mu[m[49;177H6[25;96H[?25h[?25l[25;95H[K[49;177H5[25;95H[?25h[?25l[25;94H[K[49;177H4[25;94H[?25h[?25l[91mt[m[49;177H5[25;95H[?25h[?25l[91me[m[49;177H6[25;96H[?25h[?25l[91mr[m[49;177H7[25;97H[?25h[?25l[91mm[m[49;177H8[25;98H[?25h[?25l[91mi[m[49;177H9[25;99H[?25h[?25l[91mn[m[49;176H100[25;100H[?25h[?25l[91ma[m[49;178H1[25;101H[?25h[?25l[91mt[m[49;178H2[25;102H[?25h[?25l[91mi[m[49;178H3[25;103H[?25h[?25l[91mn[m[49;178H4[25;104H[?25h[?25l[91mg[m[49;178H5[25;105H[?25h[?25l[91m [m[49;178H6[25;106H[?25h[?25l[91mn[m[49;178H7[25;107H[?25h[?25l[91mu[m[49;178H8[25;108H[?25h[?25l[91ml[m[49;178H9[25;109H[?25h[?25l[91ml[m[49;177H10[25;110H[?25h[?25l[91m [m[49;178H1[25;111H[?25h[?25l[91mc[m[49;178H2[25;112H[?25h[?25l[91mh[m[49;178H3[25;113H[?25h[?25l[91ma[m[49;178H4[25;114H[?25h[?25l[91mr[m[49;178H5[25;115H[?25h[?25l[49;174H6,35 [26;35H[?25h[?25l[49;174H7,1 [27;1H[?25h[?25l[49;174H8,66[28;66H[?25h[?25l[49;174H9,62[29;62H[?25h[?25l[49;173H30,13[30;13H[?25h[?25l[28;32H[106m{[31;3H}[m[49;174H1,4 [31;4H[?25h[?25l[28;32H{[31;3H}[49;174H2,77[32;77H[?25h[?25l[49;174H3,1 [33;1H[?25h[?25l[49;174H4,30[34;30H[?25h[?25l[49;174H5,15[35;15H[?25h[?25l[49;174H6,17[36;17H[?25h[?25l[49;174H7,24[37;24H[?25h[?25l[49;174H8,1 [38;1H[?25h[?25l[49;174H9,13[39;13H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40,2 [40;2H[?25h[?25l[19;1H{[40;1H}[49;174H1,1[41;1H[?25h[?25l[49;174H2,46[42;46H[?25h[?25l[49;174H3,12[43;12H[?25h[?25l[44;16H[106m([23C)[m[49;174H4,41[44;41H[?25h[?25l[44;16H([23C)[49;174H5,2 [45;2H[?25h[?25l[49;174H6,31[46;31H[?25h[?25l[49;174H7,62[47;62H[?25h[?25l[49;174H8,36[48;36H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H49,4[11C3%[46;61H[106m{

[m  [106m}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;1H}[49;173H[K[49;173H50,2[11C6%[43;1H[106m{[m[45;61H{

  }
[106m}[?25h[?25l[1;48r[m[48;1H
[1;49r[49;173H[K[49;173H51,1[11C9%[42;1H{[47;1H}
[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H52,70[9C12%[48;70H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H53,56[9C15%[48;56H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H54,4[10C18%[48;4H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H55,22[9C21%[48;22H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H56,24[9C25%[48;24H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H57,25[9C28%[48;25H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H58,56[9C31%[48;56H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H59,57[9C34%[48;57H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H60,48[9C37%[48;48H[?25h[?25l[49;173H59,57[47;57H[?25h[?25l[49;174H8,56[46;56H[?25h[?25l[49;174H7,25[45;25H[?25h[?25l[49;174H6,24[44;24H[?25h[?25l[49;174H5,22[43;22H[?25h[?25l[49;174H4,4 [42;4H[?25h[?25l[49;174H3,56[41;56H[?25h[?25l[49;174H2,70[40;70H[?25h[?25l[49;174H1,1 [39;1H[?25h[?25l[33;1H[106m{[38;1H}[m[49;174H0,2[38;2H[?25h[?25l[33;1H{[35;61H[106m{

[m  [106m}[m
}[49;173H49,4[37;4H[?25h[?25l[35;61H{

  }[49;174H8,36[36;36H[?25h[?25l[35;61H[106m{

[m  [106m}[m[49;174H7,62[35;62H[?25h[?25l{

  }[49;174H6,31[34;31H[?25h[?25l[35;48r[35;1H[L[1;49r[49;173H[K[49;173H47,1[10C36%[35;1H[?25h[?25l[49;176H2-9[35;9H[?25h[?25l[49;176H1  [35;1H[?25h[?25l[34;48r[48;1H
[1;49r[34;3H[91m//go thru chain of keyValues[m[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H46,31[9C37%[34;31H[?25h[?25l[35;48r[35;1H[L[1;49r[49;173H[K[49;173H47,1[10C36%[35;1H[?25h[?25l[49;176H2[35;2H[?25h[?25l[49;176H3[35;3H[?25h[?25l/[49;176H4[35;4H[?25h[?25l[91m//[m[49;176H5[35;5H[?25h[?25l[91mB[m[49;176H6[35;6H[?25h[?25l[91mU[m[49;176H7[35;7H[?25h[?25l[91mG[m[49;176H8[35;8H[?25h[?25l[91m [m[49;176H9[35;9H[?25h[?25l[91m3[m[49;176H10[35;10H[?25h[?25l[91m:[m[49;177H1[35;11H[?25h[?25l[91m [m[49;177H2[35;12H[?25h[?25l[91mW[m[49;177H3[35;13H[?25h[?25l[91me[m[49;177H4[35;14H[?25h[?25l[91m [m[49;177H5[35;15H[?25h[?25l[91mm[m[49;177H6[35;16H[?25h[?25l[91mu[m[49;177H7[35;17H[?25h[?25l[91ms[m[49;177H8[35;18H[?25h[?25l[91mt[m[49;177H9[35;19H[?25h[?25l[91m [m[49;176H20[35;20H[?25h[?25l[91mf[m[49;177H1[35;21H[?25h[?25l[91mi[m[49;177H2[35;22H[?25h[?25l[91mr[m[49;177H3[35;23H[?25h[?25l[91ms[m[49;177H4[35;24H[?25h[?25l[91mt[m[49;177H5[35;25H[?25h[?25l[91m [m[49;177H6[35;26H[?25h[?25l[91mf[m[49;177H7[35;27H[?25h[?25l[91mr[m[49;177H8[35;28H[?25h[?25l[91me[m[49;177H9[35;29H[?25h[?25l[91me[m[49;176H30[35;30H[?25h[?25l[91m [m[49;177H1[35;31H[?25h[?25l[35;30H[K[49;177H0[35;30H[?25h[?25l[35;29H[K[49;176H29[35;29H[?25h[?25l[35;28H[K[49;177H8[35;28H[?25h[?25l[35;27H[K[49;177H7[35;27H[?25h[?25l[35;26H[K[49;177H6[35;26H[?25h[?25l[35;25H[K[49;177H5[35;25H[?25h[?25l[35;24H[K[49;177H4[35;24H[?25h[?25l[35;23H[K[49;177H3[35;23H[?25h[?25l[35;22H[K[49;177H2[35;22H[?25h[?25l[35;21H[K[49;177H1[35;21H[?25h[?25l[35;20H[K[49;177H0[35;20H[?25h[?25l[35;19H[K[49;176H19[35;19H[?25h[?25l[35;18H[K[49;177H8[35;18H[?25h[?25l[35;17H[K[49;177H7[35;17H[?25h[?25l[35;16H[K[49;177H6[35;16H[?25h[?25l[35;15H[K[49;177H5[35;15H[?25h[?25l[35;14H[K[49;177H4[35;14H[?25h[?25l[35;13H[K[49;177H3[35;13H[?25h[?25l[35;12H[K[49;177H2[35;12H[?25h[?25l[35;11H[K[49;177H1[35;11H[?25h[?25l[35;10H[K[49;177H0[35;10H[?25h[?25l[35;9H[K[49;176H9 [35;9H[?25h[?25l[91m3[m[49;176H10[35;10H[?25h[?25l[91m [m[49;177H1[35;11H[?25h[?25l[91ma[m[49;177H2[35;12H[?25h[?25l[91mn[m[49;177H3[35;13H[?25h[?25l[91md[m[49;177H4[35;14H[?25h[?25l[91m [m[49;177H5[35;15H[?25h[?25l[91m4[m[49;177H6[35;16H[?25h[?25l[91m [m[49;177H7[35;17H[?25h[?25l[91mw[m[49;177H8[35;18H[?25h[?25l[91mh[m[49;177H9[35;19H[?25h[?25l[91me[m[49;176H20[35;20H[?25h[?25l[91mn[m[49;177H1[35;21H[?25h[?25l[91m [m[49;177H2[35;22H[?25h[?25l[91mf[m[49;177H3[35;23H[?25h[?25l[91mr[m[49;177H4[35;24H[?25h[?25l[91me[m[49;177H5[35;25H[?25h[?25l[91me[m[49;177H6[35;26H[?25h[?25l[91mi[m[49;177H7[35;27H[?25h[?25l[91mn[m[49;177H8[35;28H[?25h[?25l[91mg[m[49;177H9[35;29H[?25h[?25l[91m [m[49;176H30[35;30H[?25h[?25l[35;29H[K[49;176H29[35;29H[?25h[?25l[35;28H[K[49;177H8[35;28H[?25h[?25l[35;27H[K[49;177H7[35;27H[?25h[?25l[91mn[m[49;177H8[35;28H[?25h[?25l[91mg[m[49;177H9[35;29H[?25h[?25l[91m [m[49;176H30[35;30H[?25h[?25l[91mw[m[49;177H1[35;31H[?25h[?25l[91me[m[49;177H2[35;32H[?25h[?25l[91m [m[49;177H3[35;33H[?25h[?25l[91mm[m[49;177H4[35;34H[?25h[?25l[91mu[m[49;177H5[35;35H[?25h[?25l[91ms[m[49;177H6[35;36H[?25h[?25l[91mt[m[49;177H7[35;37H[?25h[?25l[91m [m[49;177H8[35;38H[?25h[?25l[91ma[m[49;177H9[35;39H[?25h[?25l[91ml[m[49;176H40[35;40H[?25h[?25l[91ms[m[49;177H1[35;41H[?25h[?25l[91mo[m[49;177H2[35;42H[?25h[?25l[91m [m[49;177H3[35;43H[?25h[?25l[91mf[m[49;177H4[35;44H[?25h[?25l[91mr[m[49;177H5[35;45H[?25h[?25l[91me[m[49;177H6[35;46H[?25h[?25l[91me[m[49;177H7[35;47H[?25h[?25l[91m [m[49;177H8[35;48H[?25h[?25l[91mt[m[49;177H9[35;49H[?25h[?25l[91mh[m[49;176H50[35;50H[?25h[?25l[91me[m[49;177H1[35;51H[?25h[?25l[91m [m[49;177H2[35;52H[?25h[?25l[91ma[m[49;177H3[35;53H[?25h[?25l[91mc[m[49;177H4[35;54H[?25h[?25l[91mt[m[49;177H5[35;55H[?25h[?25l[91mu[m[49;177H6[35;56H[?25h[?25l[91ma[m[49;177H7[35;57H[?25h[?25l[91ml[m[49;177H8[35;58H[?25h[?25l[91m [m[49;177H9[35;59H[?25h[?25l[91ms[m[49;176H60[35;60H[?25h[?25l[91mt[m[49;177H1[35;61H[?25h[?25l[91mr[m[49;177H2[35;62H[?25h[?25l[91mi[m[49;177H3[35;63H[?25h[?25l[91mn[m[49;177H4[35;64H[?25h[?25l[91mg[m[49;177H5[35;65H[?25h[?25l[91m,[m[49;177H6[35;66H[?25h[?25l[91m [m[49;177H7[35;67H[?25h[?25l[91mf[m[49;177H8[35;68H[?25h[?25l[91mr[m[49;177H9[35;69H[?25h[?25l[91me[m[49;176H70[35;70H[?25h[?25l[91me[m[49;177H1[35;71H[?25h[?25l[91m([m[49;177H2[35;72H[?25h[?25l[91m)[m[91m[106m()[m[49;177H3[35;73H[?25h[?25l[49;177H2[35;72H[?25h[?25l[91m[106mp[m[91m)p[m[91m[106m)[m[49;177H3[35;73H[?25h[?25l[49;177H4[35;74H[?25h[?25l[91m (p)[m[49;177H5[35;75H[?25h[?25l[91mw[m[49;177H6[35;76H[?25h[?25l[91mi[m[49;177H7[35;77H[?25h[?25l[91ml[m[49;177H8[35;78H[?25h[?25l[91ml[m[49;177H9[35;79H[?25h[?25l[91m [m[49;176H80[35;80H[?25h[?25l[91mj[m[49;177H1[35;81H[?25h[?25l[91mu[m[49;177H2[35;82H[?25h[?25l[91ms[m[49;177H3[35;83H[?25h[?25l[91mt[m[49;177H4[35;84H[?25h[?25l[91m [m[49;177H5[35;85H[?25h[?25l[91mg[m[49;177H6[35;86H[?25h[?25l[91me[m[49;177H7[35;87H[?25h[?25l[91mt[m[49;177H8[35;88H[?25h[?25l[91m [m[49;177H9[35;89H[?25h[?25l[91mr[m[49;176H90[35;90H[?25h[?25l[91mi[m[49;177H1[35;91H[?25h[?25l[91md[m[49;177H2[35;92H[?25h[?25l[91m [m[49;177H3[35;93H[?25h[?25l[91mo[m[49;177H4[35;94H[?25h[?25l[91mf[m[49;177H5[35;95H[?25h[?25l[91m [m[49;177H6[35;96H[?25h[?25l[91mt[m[49;177H7[35;97H[?25h[?25l[91mh[m[49;177H8[35;98H[?25h[?25l[91me[m[49;177H9[35;99H[?25h[?25l[91m [m[49;176H100[35;100H[?25h[?25l[91mp[m[49;178H1[35;101H[?25h[?25l[91mo[m[49;178H2[35;102H[?25h[?25l[91mi[m[49;178H3[35;103H[?25h[?25l[91mn[m[49;178H4[35;104H[?25h[?25l[91mt[m[49;178H5[35;105H[?25h[?25l[91me[m[49;178H6[35;106H[?25h[?25l[91mr[m[49;178H7[35;107H[?25h[?25l[91m [m[49;178H8[35;108H[?25h[?25l[49;174H6,31 [34;31H[?25h[?25l[33;1H[106m{[39;1H}[m[49;174H5,2 [33;2H[?25h[?25l[32;16H[106m([23C)[m
{[39;1H}[49;174H4,41[32;41H[?25h[?25l[32;16H([23C)[49;174H3,12[31;12H[?25h[?25l[49;174H2,46[30;46H[?25h[?25l[49;174H1,1 [29;1H[?25h[?25l[7;1H[106m{[28;1H}[m[49;174H0,2[28;2H[?25h[?25l[7;1H{[28;1H}[49;173H39,13[27;13H[?25h[?25l[49;174H8,1 [26;1H[?25h[?25l[49;174H7,24[25;24H[?25h[?25l[49;174H6,17[24;17H[?25h[?25l[49;174H5,15[23;15H[?25h[?25l[49;174H4,30[22;30H[?25h[?25l[49;174H3,1 [21;1H[?25h[?25l[49;174H2,77[20;77H[?25h[?25l[16;32H[106m{[19;3H}[m[49;174H1,4 [19;4H[?25h[?25l[16;32H{[19;3H}[49;174H0,13[18;13H[?25h[?25l[49;173H29,62[17;62H[?25h[?25l[49;174H8,66[16;66H[?25h[?25l[49;174H7,1 [15;1H[?25h[?25l[49;174H6,35[14;35H[?25h[?25l[49;174H5,108[13;108H[?25h[?25l[49;174H4,48 [12;48H[?25h[?25l[49;174H3,1 [11;1H[?25h[?25l[49;174H2,52[10;52H[?25h[?25l[49;174H1,64[9;64H[?25h[?25l[49;174H0,45[8;45H[?25h[?25l[7;1H[106m{[28;1H}[m[49;173H19,2 [7;2H[?25h[?25l[6;14H[106m([45C)[m
{[28;1H}[49;174H8,61[6;61H[?25h[?25l[6;14H([45C)[49;174H7,22[5;22H[?25h[?25l[49;174H6,4 [4;4H[?25h[?25l[49;174H5,21[3;21H[?25h[?25l[49;174H4,63[2;63H[?25h[?25l[49;174H3,62[1;62H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H12,1[10C33%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H} KeyValueNode;[49;173H[K[49;173H11,16[9C30%[1;16H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m[49;173H[K[49;173H10,62[9C27%[1;62H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mint[m value;[13C[91m/** integer value */[m[49;173H[K[49;173H9,46[10C24%[1;46H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mconst[m [94mchar[m *key;[7C[91m/** string key */[m[49;173H[K[49;173H8,43[10C21%[1;43H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mtypedef[m [94mstruct[m KeyValueStruct {[49;173H[K[49;173H7,32[10C18%[1;31H[106m{[5;1H}[1;32H[?25h[?25l[1;48r[m[1;1H[L[1;49r[1;1H[91m/** A struct used to form a linear chain of key-value pairs. */[m[49;173H[K[49;173H6,64[10C15%[2;31H{[6;1H}[1;64H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H5,1[11C12%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<string.h>[m[49;173H[K[49;173H4,20[11C9%[1;20H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdlib.h>[m[49;173H[K[49;173H3,20[11C6%[1;20H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdio.h>[m[49;173H[K[49;173H2,19[11C3%[1;19H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<errno.h>[m[49;173H[K[49;173H1,19[10CTop[1;19H[?25h[?25l[49;173H2[2;19H[?25h[?25l[49;173H3,20[3;20H[?25h[?25l[49;173H4[4;20H[?25h[?25l[49;173H5,1 [5;1H[?25h[?25l[49;173H6,64[6;64H[?25h[?25l[7;31H[106m{[11;1H}[m[49;173H7,32[7;32H[?25h[?25l{[11;1H}[49;173H8,43[8;43H[?25h[?25l[49;173H9,46[9;46H[?25h[?25l[49;173H10,62[10;62H[?25h[?25l[49;174H1,16[11;16H[?25h[?25l[49;174H2,1 [12;1H[?25h[?25l[49;174H3,62[13;62H[?25h[?25l[49;174H4,63[14;63H[?25h[?25l[49;174H5,21[15;21H[?25h[?25l[49;174H6,4 [16;4H[?25h[?25l[49;174H7,22[17;22H[?25h[?25l[18;14H[106m([45C)[m[49;174H8,61[18;61H[?25h[?25l[18;14H([45C)
[106m{[40;1H}[m[49;174H9,2 [19;2H[?25h[?25l{[40;1H}[49;173H20,45[20;45H[?25h[?25l[49;174H1,64[21;64H[?25h[?25l[49;174H2,52[22;52H[?25h[?25l[49;174H3,1 [23;1H[?25h[?25l[49;174H4,48[24;48H[?25h[?25l[49;174H5,108[25;108H[?25h[?25l[49;174H6,35 [26;35H[?25h[?25l[49;174H7,1 [27;1H[?25h[?25l[49;174H8,66[28;66H[?25h[?25l[49;174H9,62[29;62H[?25h[?25l[49;173H30,13[30;13H[?25h[?25l[28;32H[106m{[31;3H}[m[49;174H1,4 [31;4H[?25h[?25l[28;32H{[31;3H}[49;174H2,77[32;77H[?25h[?25l[49;174H3,1 [33;1H[?25h[?25l[49;174H4,30[34;30H[?25h[?25l[49;174H5,15[35;15H[?25h[?25l[49;174H6,17[36;17H[?25h[?25l[49;174H7,24[37;24H[?25h[?25l[49;174H8,1 [38;1H[?25h[?25l[49;174H9,13[39;13H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40,2 [40;2H[?25h[?25l[19;1H{[40;1H}[49;174H1,1[41;1H[?25h[?25l[49;174H2,46[42;46H[?25h[?25l[49;174H3,12[43;12H[?25h[?25l[44;16H[106m([23C)[m[49;174H4,41[44;41H[?25h[?25l[44;16H([23C)[49;174H5,2 [45;2H[?25h[?25l[49;174H6,31[46;31H[?25h[?25l[49;174H7,108[47;108H[?25h[?25l[47;107H[K[49;178H7[47;107H[?25h[?25l[91m.[m[49;178H8[47;108H[?25h[?25l[47;107H[K[49;178H7[47;107H[?25h[?25l[91m,[m[49;178H8[47;108H[?25h[?25l[91m [m[49;178H9[47;109H[?25h[?25l[91mi[m[49;177H10[47;110H[?25h[?25l[91mt[m[49;178H1[47;111H[?25h[?25l[91m [m[49;178H2[47;112H[?25h[?25l[91mw[m[49;178H3[47;113H[?25h[?25l[91mi[m[49;178H4[47;114H[?25h[?25l[91ml[m[49;178H5[47;115H[?25h[?25l[91ml[m[49;178H6[47;116H[?25h[?25l[91m [m[49;178H7[47;117H[?25h[?25l[91ma[m[49;178H8[47;118H[?25h[?25l[91ml[m[49;178H9[47;119H[?25h[?25l[91ms[m[49;177H20[47;120H[?25h[?25l[91mo[m[49;178H1[47;121H[?25h[?25l[91m [m[49;178H2[47;122H[?25h[?25l[91mg[m[49;178H3[47;123H[?25h[?25l[91me[m[49;178H4[47;124H[?25h[?25l[91mt[m[49;178H5[47;125H[?25h[?25l[91m [m[49;178H6[47;126H[?25h[?25l[91mr[m[49;178H7[47;127H[?25h[?25l[91mi[m[49;178H8[47;128H[?25h[?25l[91md[m[49;178H9[47;129H[?25h[?25l[91me[m[49;177H30[47;130H[?25h[?25l[47;129H[K[49;177H29[47;129H[?25h[?25l[91m [m[49;177H30[47;130H[?25h[?25l[91mo[m[49;178H1[47;131H[?25h[?25l[91mf[m[49;178H2[47;132H[?25h[?25l[91m [m[49;178H3[47;133H[?25h[?25l[91mt[m[49;178H4[47;134H[?25h[?25l[91mh[m[49;178H5[47;135H[?25h[?25l[91me[m[49;178H6[47;136H[?25h[?25l[91m [m[49;178H7[47;137H[?25h[?25l[91mp[m[49;178H8[47;138H[?25h[?25l[91mo[m[49;178H9[47;139H[?25h[?25l[91mn[m[49;177H40[47;140H[?25h[?25l[47;139H[K[49;177H39[47;139H[?25h[?25l[91mi[m[49;177H40[47;140H[?25h[?25l[91mn[m[49;178H1[47;141H[?25h[?25l[91mt[m[49;178H2[47;142H[?25h[?25l[91me[m[49;178H3[47;143H[?25h[?25l[91mr[m[49;178H4[47;144H[?25h[?25l[91m [m[49;178H5[47;145H[?25h[?25l[91mt[m[49;178H6[47;146H[?25h[?25l[91mo[m[49;178H7[47;147H[?25h[?25l[91m [m[49;178H8[47;148H[?25h[?25l[91ms[m[49;178H9[47;149H[?25h[?25l[91mc[m[49;177H50[47;150H[?25h[?25l[91mu[m[49;178H1[47;151H[?25h[?25l[47;150H[K[49;178H0[47;150H[?25h[?25l[47;149H[K[49;177H49[47;149H[?25h[?25l[91mu[m[49;177H50[47;150H[?25h[?25l[91mc[m[49;178H1[47;151H[?25h[?25l[91mc[m[49;178H2[47;152H[?25h[?25l[91m [m[49;178H3[47;153H[?25h[?25l[91ms[m[49;178H4[47;154H[?25h[?25l[91mo[m[49;178H5[47;155H[?25h[?25l[91m [m[49;178H6[47;156H[?25h[?25l[91mw[m[49;178H7[47;157H[?25h[?25l[91me[m[49;178H8[47;158H[?25h[?25l[91m [m[49;178H9[47;159H[?25h[?25l[91mm[m[49;177H60[47;160H[?25h[?25l[91mu[m[49;178H1[47;161H[?25h[?25l[91ms[m[49;178H2[47;162H[?25h[?25l[91mt[m[49;178H3[47;163H[?25h[?25l[91m [m[49;178H4[47;164H[?25h[?25l[91mg[m[49;178H5[47;165H[?25h[?25l[91me[m[49;178H6[47;166H[?25h[?25l[91mt[m[49;178H7[47;167H[?25h[?25l[91m [m[49;178H8[47;168H[?25h[?25l[91mi[m[49;178H9[47;169H[?25h[?25l[91mt[m[49;177H70[47;170H[?25h[?25l[91m [m[49;178H1[47;171H[?25h[?25l[91mb[m[49;178H2[47;172H[?25h[?25l[91me[m[49;178H3[47;173H[?25h[?25l[91mf[m[49;178H4[47;174H[?25h[?25l[91mo[m[49;178H5[47;175H[?25h[?25l[91mr[m[49;178H6[47;176H[?25h[?25l[91me[m[49;178H7[47;177H[?25h[?25l[91m [m[49;178H8[47;178H[?25h[?25l[91mw[m[49;178H9[47;179H[?25h[?25l[91me[m[49;177H80[47;180H[?25h[?25l[91m [m[49;178H1[47;181H[?25h[?25l[91mf[m[49;178H2[47;182H[?25h[?25l[91mr[m[49;178H3[47;183H[?25h[?25l[91me[m[49;178H4[47;184H[?25h[?25l[91me[m[49;178H5[47;185H[?25h[?25l[91m [m[49;178H6[47;186H[?25h[?25l[91mp[m[49;178H7[47;187H[?25h[?25l[49;174H8,62 [48;62H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(p); [91m//free KeyValue struct[m[49;173H[K[49;173H49,36[10C3%[48;36H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H50,4[11C6%[46;61H[106m{

[m  [106m}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;1H}[49;173H[K[49;173H51,2[11C9%[42;1H[106m{[m[45;61H{

  }
[106m}[?25h[?25l[1;48r[m[48;1H
[1;49r[49;173H[K[49;173H52,1[10C12%[41;1H{[47;1H}
[?25h[?25l[41;1H[106m{[47;1H}[m[49;174H1,2[47;2H[?25h[?25l[41;1H{[44;61H[106m{

[m  [106m}[m
}[49;174H0,4[46;4H[?25h[?25l[44;61H{

  }[49;173H49,36[45;36H[?25h[?25l[45;35H[K[49;177H5[45;35H[?25h[?25l[45;34H[K[49;177H4[45;34H[?25h[?25l[45;33H[K[49;177H3[45;33H[?25h[?25l[45;32H[K[49;177H2[45;32H[?25h[?25l[45;31H[K[49;177H1[45;31H[?25h[?25l[45;30H[K[49;177H0[45;30H[?25h[?25l[45;29H[K[49;176H29[45;29H[?25h[?25l[45;28H[K[49;177H8[45;28H[?25h[?25l[45;27H[K[49;177H7[45;27H[?25h[?25l[45;26H[K[49;177H6[45;26H[?25h[?25l[45;25H[K[49;177H5[45;25H[?25h[?25l[45;24H[K[49;177H4[45;24H[?25h[?25l[45;23H[K[49;177H3[45;23H[?25h[?25l[45;22H[K[49;177H2[45;22H[?25h[?25l[45;21H[K[49;177H1[45;21H[?25h[?25l[45;20H[K[49;177H0[45;20H[?25h[?25l[45;19H[K[49;176H19[45;19H[?25h[?25l[45;18H[K[49;177H8[45;18H[?25h[?25l[45;17H[K[49;177H7[45;17H[?25h[?25l[45;16H[K[49;177H6[45;16H[?25h[?25l/[45;15H[K[49;177H5[45;15H[?25h[?25l[45;14H[K[49;177H4[45;14H[?25h[?25l[49;177H3[45;13H[?25h[?25l[45;12H[K[45;9H[106m([mp[106m)[m[49;177H2[45;12H[?25h[?25l[45;11H[K[45;9H([49;177H1[45;11H[?25h[?25l[45;10H[K[49;177H0[45;10H[?25h[?25lp[49;177H1[45;11H[?25h[?25l.[49;177H2[45;12H[?25h[?25l[45;11H[K[49;177H1[45;11H[?25h[?25l-[49;177H2[45;12H[?25h[?25l>[49;177H3[45;13H[?25h[?25l[49;174H8[44;13H[?25h[?25l[49;174H7[43;13H[?25h[?25l[49;174H6[42;13H[?25h[?25l[41;1H[106m{[47;1H}[m[49;174H5,2 [41;2H[?25h[?25l{[47;1H}[49;174H4,13[40;13H[?25h[?25l[49;174H3,12[39;12H[?25h[?25l[49;174H2,13[38;13H[?25h[?25l[49;174H1,1 [37;1H[?25h[?25l[15;1H[106m{[36;1H}[m[49;174H0,2[36;2H[?25h[?25l[15;1H{[36;1H}[49;173H39,13[35;13H[?25h[?25l[49;174H8,1 [34;1H[?25h[?25l[49;174H7,13[33;13H[?25h[?25l[49;174H6[32;13H[?25h[?25l[49;174H5[31;13H[?25h[?25l[49;174H4[30;13H[?25h[?25l[49;174H3,1 [29;1H[?25h[?25l[49;174H2,13[28;13H[?25h[?25l[24;32H[106m{[27;3H}[m[49;174H1,4 [27;4H[?25h[?25l[24;32H{[27;3H}[49;174H0,13[26;13H[?25h[?25l[25;12H[106m([47C)[m[49;173H29[25;13H[?25h[?25l([47C)[49;174H8[24;13H[?25h[?25l[49;174H7,1 [23;1H[?25h[?25l[49;174H6,13[22;13H[?25h[?25l[49;174H5[21;13H[?25h[?25l[49;174H4[20;13H[?25h[?25l[49;174H3,1 [19;1H[?25h[?25l[49;174H2,13[18;13H[?25h[?25l[49;174H1[17;13H[?25h[?25l[49;174H0[16;13H[?25h[?25l[15;1H[106m{[36;1H}[m[49;173H19,2 [15;2H[?25h[?25l{[36;1H}[49;174H8,13[14;13H[?25h[?25l[49;174H7[13;13H[?25h[?25l[49;174H6,4 [12;4H[?25h[?25l[49;174H5,13[11;13H[?25h[?25l[49;174H4[10;13H[?25h[?25l[49;174H3[9;13H[?25h[?25l[49;174H2,1 [8;1H[?25h[?25l[49;174H1,13[7;13H[?25h[?25l[49;174H0[6;13H[?25h[?25l[49;173H9,13 [5;13H[?25h[?25l[49;173H8[4;13H[?25h[?25l[49;173H9[5;13H[?25h[?25l[49;173H10,13[6;13H[?25h[?25l[49;174H1[7;13H[?25h[?25l[49;174H2,1 [8;1H[?25h[?25l[49;174H3,13[9;13H[?25h[?25l[49;174H4[10;13H[?25h[?25l[49;174H5[11;13H[?25h[?25l[49;174H6,4 [12;4H[?25h[?25l[49;174H7,13[13;13H[?25h[?25l[49;174H8[14;13H[?25h[?25l
[106m{[36;1H}[m[49;174H9,2 [15;2H[?25h[?25l{[36;1H}[49;173H20,13[16;13H[?25h[?25l[49;174H1[17;13H[?25h[?25l[49;174H2[18;13H[?25h[?25l[49;174H3,1 [19;1H[?25h[?25l[49;174H4,13[20;13H[?25h[?25l[49;174H5[21;13H[?25h[?25l[49;174H6[22;13H[?25h[?25l[49;174H7,1 [23;1H[?25h[?25l[49;174H8,13[24;13H[?25h[?25l[25;12H[106m([47C)[m[49;174H9[25;13H[?25h[?25l([47C)[49;173H30[26;13H[?25h[?25l[24;32H[106m{[27;3H}[m[49;174H1,4 [27;4H[?25h[?25l[24;32H{[27;3H}[49;174H2,13[28;13H[?25h[?25l[49;174H3,1 [29;1H[?25h[?25l[49;174H4,13[30;13H[?25h[?25l[49;174H5[31;13H[?25h[?25l[49;174H6[32;13H[?25h[?25l[49;174H7[33;13H[?25h[?25l[49;174H8,1 [34;1H[?25h[?25l[49;174H9,13[35;13H[?25h[?25l[15;1H[106m{[36;1H}[m[49;173H40,2 [36;2H[?25h[?25l[15;1H{[36;1H}[49;174H1,1[37;1H[?25h[?25l[49;174H2,13[38;13H[?25h[?25l[49;174H3,12[39;12H[?25h[?25l[49;174H4,13[40;13H[?25h[?25l
[106m{[47;1H}[m[49;174H5,2 [41;2H[?25h[?25l{[47;1H}[49;174H6,13[42;13H[?25h[?25l[49;174H7[43;13H[?25h[?25l[49;174H8[44;13H[?25h[?25l[49;174H9[45;13H[?25h[?25ls[49;177H4[45;14H[?25h[?25lu[49;177H5[45;15H[?25h[?25lc[49;177H6[45;16H[?25h[?25lc[49;177H7[45;17H[?25h[?25l)[45;9H[106m([7C)[m[49;177H8[45;18H[?25h[?25l[45;9H([7C)[49;177H9[45;19H[?25h[?25l[45;9H[106m([7C)[m[49;177H8[45;18H[?25h[?25l;[45;9H([7C)[49;177H9[45;19H[?25h[?25l[46;48r[46;1H[L[1;49r[49;173H[K[49;173H50,1[10C11%[46;1H[?25h[?25l[49;176H2-9[46;9H[?25h[?25l[49;176H1  [46;1H[?25h[?25l[49;176H2[46;2H[?25h[?25l[49;176H3[46;3H[?25h[?25l[49;176H4[46;4H[?25h[?25l[49;176H5[46;5H[?25h[?25lp[49;176H6[46;6H[?25h[?25l[49;173H49[45;6H[?25h[?25l[49;176H7[45;7H[?25h[?25l[49;176H8[45;8H[?25h[?25le[106m([7C)[m[49;176H9[45;9H[?25h[?25l[49;176H10[45;10H[?25h[?25l([7C)[49;177H1[45;11H[?25h[?25l[49;177H2[45;12H[?25h[?25l[49;177H3[45;13H[?25h[?25l[49;177H4[45;14H[?25h[?25l[49;177H5[45;15H[?25h[?25l[49;177H6[45;16H[?25h[?25l[45;9H[106m([7C)[m[49;177H7[45;17H[?25h[?25l)[106m;[m[45;18H[K[45;16H[106m)[m;[49;177H6[45;16H[?25h[?25l)[106m;[m[45;17H[K[45;15H[106m)[m;[49;177H5[45;15H[?25h[?25l)[106m;[m[45;16H[K[45;14H[106m)[m;[49;177H4[45;14H[?25h[?25l)[106m;[m[45;15H[K[45;13H[106m)[m;[49;177H3[45;13H[?25h[?25l[106mk[m);k[106m)[m[49;177H4[45;14H[?25h[?25l[106me[m);e[106m)[m[49;177H5[45;15H[?25h[?25l[106my[m);y[106m)[m[49;177H6[45;16H[?25h[?25l[45;9H(p->key)[49;173H50,6 [46;6H[?25h[?25l[49;176H7[46;7H[?25h[?25l=[49;176H8[46;8H[?25h[?25l[49;176H9[46;9H[?25h[?25lp[49;176H10[46;10H[?25h[?25l-[49;177H1[46;11H[?25h[?25l>[49;177H2[46;12H[?25h[?25ls[49;177H3[46;13H[?25h[?25lu[49;177H4[46;14H[?25h[?25lc[49;177H5[46;15H[?25h[?25lc[49;177H6[46;16H[?25h[?25l[45;9H[106m([mp->key[106m)[m[49;173H49[45;16H[?25h[?25l[45;9H(p->key)[49;174H8[44;16H[?25h[?25l[49;177H5[44;15H[?25h[?25l[49;174H9[45;15H[?25h[?25l[49;177H4[45;14H[?25h[?25l[49;177H3[45;13H[?25h[?25l[49;177H2[45;12H[?25h[?25l[49;177H1[45;11H[?25h[?25l[106m([mp->key[106m)[m[49;177H0[45;10H[?25h[?25l[49;176H9 [45;9H[?25h[?25l(p->key)[49;176H8[45;8H[?25h[?25l[49;176H7[45;7H[?25h[?25l[49;176H6[45;6H[?25h[?25l[49;176H5[45;5H[?25h[?25l[46;48r[46;1H[L[1;49r[45;5H[K[46;1Hfree(p->key);[49;173H[K[49;173H50,1[10C11%[46;1H[?25h[?25l[49;173H49[45;1H[?25h[?25l[49;173H50[46;1H[?25h[?25l free(p->key);[49;176H2[46;2H[?25h[?25l free(p->key);[49;176H3[46;3H[?25h[?25l free(p->key);[49;176H4[46;4H[?25h[?25l free(p->key);[49;176H5[46;5H[?25h[?25l[49;173H49[45;5H[?25h[?25lK[49;176H6[45;6H[?25h[?25le[49;176H7[45;7H[?25h[?25ly[49;176H8[45;8H[?25h[?25lV[49;176H9[45;9H[?25h[?25la[49;176H10[45;10H[?25h[?25ll[49;177H1[45;11H[?25h[?25lu[49;177H2[45;12H[?25h[?25le[49;177H3[45;13H[?25h[?25lN[49;177H4[45;14H[?25h[?25lo[49;177H5[45;15H[?25h[?25ld[49;177H6[45;16H[?25h[?25le[49;177H7[45;17H[?25h[?25l[49;177H8[45;18H[?25h[?25l*[49;177H9[45;19H[?25h[?25lc[49;176H20[45;20H[?25h[?25lu[49;177H1[45;21H[?25h[?25lr[49;177H2[45;22H[?25h[?25lr[49;177H3[45;23H[?25h[?25l[49;177H4[45;24H[?25h[?25l=[49;177H5[45;25H[?25h[?25l[49;177H6[45;26H[?25h[?25lp[49;177H7[45;27H[?25h[?25l;[49;177H8[45;28H[?25h[?25l[49;173H50,1[46;18H[?25h[?25l[49;174H1,16[47;16H[?25h[?25l;[49;177H7[47;17H[?25h[?25l[49;177H6[47;16H[?25h[?25l[46;9H[106m([mp->key[106m)[m[49;174H0[46;16H[?25h[?25l[46;9H(p->key)[49;177H5[46;15H[?25h[?25l[49;177H4[46;14H[?25h[?25l[49;177H3[46;13H[?25h[?25l[49;177H2[46;12H[?25h[?25l[49;177H1[46;11H[?25h[?25l[106m([mp->key[106m)[m[49;177H0[46;10H[?25h[?25l[49;176H9 [46;9H[?25h[?25l(p->key)[49;176H8[46;8H[?25h[?25l[49;176H7[46;7H[?25h[?25l[49;176H6[46;6H[?25h[?25l[49;176H5[46;5H[?25h[?25l[46;5H[K[47;1Hfree(p->key);[47;14H[K[48;3H  p = p->succ;[49;174H1,1[47;1H[?25h[?25l free(p->key);[49;176H2[47;2H[?25h[?25l free(p->key);[49;176H3[47;3H[?25h[?25l free(p->key);[49;176H4[47;4H[?25h[?25l free(p->key);[49;176H5[47;5H[?25h[?25l[49;174H2[48;5H[?25h[?25l[49;176H6[48;6H[?25h[?25l[49;176H7[48;7H[?25h[?25l[49;176H8[48;8H[?25h[?25l[49;176H9[48;9H[?25h[?25l[49;176H10[48;10H[?25h[?25l[49;177H1[48;11H[?25h[?25l[49;177H2[48;12H[?25h[?25l[49;177H3[48;13H[?25h[?25l[49;177H4[48;14H[?25h[?25l[49;177H5[48;15H[?25h[?25l[49;177H6[48;16H[?25h[?25l[49;177H7[48;17H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H53,1[10C13%[48;1H[?25h[?25l[49;176H2-9[48;9H[?25h[?25l[49;176H1  [48;1H[?25h[?25l  }[49;174H2,17[47;17H[?25h[?25l[48;3H[K[49;174H3,1 [48;1H[?25h[?25l[49;176H2[48;2H[?25h[?25l[49;176H3[48;3H[?25h[?25l[49;176H4[48;4H[?25h[?25l[49;176H5[48;5H[?25h[?25lf[49;176H6[48;6H[?25h[?25lr[49;176H7[48;7H[?25h[?25le[49;176H8[48;8H[?25h[?25le[49;176H9[48;9H[?25h[?25l([49;176H10[48;10H[?25h[?25l)[106m()[m[49;177H1[48;11H[?25h[?25l[49;177H0[48;10H[?25h[?25l[106mc[m)c[106m)[m[49;177H1[48;11H[?25h[?25l[106mu[m)u[106m)[m[49;177H2[48;12H[?25h[?25l[106mr[m)r[106m)[m[49;177H3[48;13H[?25h[?25l[106mr[m)r[106m)[m[49;177H4[48;14H[?25h[?25l[49;177H5[48;15H[?25h[?25l;[48;9H(curr)[49;177H6[48;16H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,1[10C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H}[49;173H[K[49;173H56,1[10C21%[37;1H[106m{[48;1H}[?25h[?25l[1;48r[m[48;1H
[1;49r[49;173H[K[49;173H57,1[10C23%[36;1H{[47;1H}
[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,1[10C28%[48;1H[?25h[49;1H[K[48;1H[?25l[49;173H59,1[10C28%[48;1H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 86L, 2624C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[3P./bug-programmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
[01m[Kbug-program.c:[m[K In function â€˜[01m[Kfree_key_values[m[Kâ€™:
[01m[Kbug-program.c:51:11:[m[K [01;35m[Kwarning: [m[Kpassing argument 1 of â€˜[01m[Kfree[m[Kâ€™ discards â€˜[01m[Kconst[m[Kâ€™ qualifier from pointer target type [[01;35m[K-Wdiscarded-qualifiers[m[K]
     free([01;35m[Kp->key[m[K);
          [01;35m[K~^~~~~[m[K
In file included from [01m[Kbug-program.c:3[m[K:
[01m[K/usr/include/stdlib.h:563:25:[m[K [01;36m[Knote: [m[Kexpected â€˜[01m[Kvoid *[m[Kâ€™ but argument is of type â€˜[01m[Kconst char *[m[Kâ€™
 extern void free ([01;36m[Kvoid *__ptr[m[K) __THROW;
                   [01;36m[K~~~~~~^~~~~[m[K
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 86L, 2624C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H50,1[11C5%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(p->key);[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,0-1[8C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[37;1H[106m{[48;1H}[m[49;173H[K[49;173H56,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H{[47;1H}[49;173H[K[49;173H57,0-1[8C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,1[10C28%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H60,1[10C31%[48;1H[?25h[?25l[49;173H59[47;1H[?25h[?25l[49;174H8[46;1H[?25h[?25l[49;174H7,0-1[45;1H[?25h[?25l[33;1H[106m{[44;1H}[m[49;174H6,1  [44;1H[?25h[?25l[33;1H{[44;1H}[49;174H5[43;1H[?25h[?25l[49;174H4,0-1[42;1H[?25h[?25l[49;174H3,1  [41;1H[?25h[?25l[49;174H2[40;1H[?25h[?25l[49;174H1[39;1H[?25h[?25l[49;176H2[39;2H[?25h[?25l[49;176H3[39;3H[?25h[?25l[49;176H4[39;4H[?25h[?25l[49;176H5[39;5H[?25h[?25l[49;176H6[39;6H[?25h[?25l[49;176H7[39;7H[?25h[?25l[49;176H8[39;8H[?25h[?25le[106m([mp->key[106m)[m[49;176H9[39;9H[?25h[?25l(p->key)[49;176H10[39;10H[?25h[?25l[49;177H1[39;11H[?25h[?25l[49;177H2[39;12H[?25h[?25l[49;177H3[39;13H[?25h[?25l[49;177H2[39;12H[?25h[?25l[49;177H1[39;11H[?25h[?25l[49;177H0[39;10H[?25h[?25l[49;173H42,44[30;44H[?25h[?25l[49;173H54,0-1[42;1H[?25h[?25l[49;174H3,1  [41;1H[?25h[?25l[49;174H2[40;1H[?25h[?25l[49;174H1[39;1H[?25h[?25l[49;176H2[39;2H[?25h[?25l[49;176H3[39;3H[?25h[?25l[49;176H4[39;4H[?25h[?25l[49;176H5[39;5H[?25h[?25l[49;176H6[39;6H[?25h[?25l[49;176H7[39;7H[?25h[?25l[49;176H8[39;8H[?25h[?25le[106m([mp->key[106m)[m[49;176H9[39;9H[?25h[?25l(p->key)[49;176H10[39;10H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H51,10[9C31%[39;10H[?25h[?25l(p->key);[39;10H[106m([mp->key[106m)[m[49;177H1]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[39;11H[?25h[?25l)p->ke[106my[m);[39;11H[106m)[mp->key[49;177H2[39;12H[?25h[?25l[49;177H1[39;11H[?25h[?25l()[49;174H2[40;11H[?25h[?25l[39;10H[106m()[m[49;174H1[39;11H[?25h[?25l[49;177H0[39;10H[?25h[?25l[106mv([m)p->key);[39;10Hv[1C[106m)[m[49;177H1[39;11H[?25h[?25l[106mo([m)p->key);[39;11Ho[1C[106m)[m[49;177H2[39;12H[?25h[?25l[106mi([m)p->key);[39;12Hi[1C[106m)[m[49;177H3[39;13H[?25h[?25l[94mvoi[m[94m[106md[m[106m([m)p->key);[39;13H[94md[m[1C[106m)[m[49;177H4[39;14H[?25h[?25l[106m ([m)p->key);[39;14H [1C[106m)[m[49;177H5[39;15H[?25h[?25l([106m)p[m->key);[39;24H[K[39;14H[106m([m[1Cp[49;177H4[39;14H[?25h[?25lvoi([106m)p[m->key);[39;23H[K[39;13H[106m([m[1Cp[49;177H3[39;13H[?25h[?25l([106m)p[m->key);[39;22H[K[39;12H[106m([m[1Cp[49;177H2[39;12H[?25h[?25l([106m)p[m->key);[39;21H[K[39;11H[106m([m[1Cp[49;177H1[39;11H[?25h[?25l([106m)p[m->key);[39;20H[K[39;10H[106m([m[1Cp[49;177H0[39;10H[?25h[?25l[49;177H1[39;11H[?25h[?25l[106mv[m)p->key);[39;11Hv[106m)[m[49;177H2[39;12H[?25h[?25l[106mo[m)p->key);[39;12Ho[106m)[m[49;177H3[39;13H[?25h[?25l[106mi[m)p->key);[39;13Hi[106m)[m[49;177H4[39;14H[?25h[?25l[94mvoi[m[94m[106md[m)p->key);[39;14H[94md[m[106m)[m[49;177H5[39;15H[?25h[?25l[106m [m)p->key);[39;15H [106m)[m[49;177H6[39;16H[?25h[?25l[106m([m)p->key);[39;10H([6C[106m)[m[49;177H7[39;17H[?25h[?25l[106m)p[m->key);[39;25H[K[39;10H[106m([m[6Cp[49;177H6[39;16H[?25h[?25l[106m*[m)p->key);[39;16H*[106m)[m[49;177H7[39;17H[?25h[?25l[49;177H8[39;18H[?25h[?25l[39;10H([6C)[49;177H9[39;19H[?25h[?25l[49;176H20[39;20H[?25h[?25l[49;177H1[39;21H[?25h[?25l[49;174H2,17[40;17H[?25h[?25l[49;174H3,16[41;16H[?25h[49;1H[K[41;15H[?25l[49;173H53,15[9C31%[41;15H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 86L, 2632C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.cmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ bu[K[K/bug-program
bash: /bug-program: No such file or directory
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./buyg[K[Kg-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Segmentation fault
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ :wq
bash: :wq: command not found
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ "[K:wq./bug-program [2P/bug-programmake -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 86L, 2632C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H50,1[11C5%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m *)p->key);[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,0-1[8C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[37;1H[106m{[48;1H}[m[49;173H[K[49;173H56,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H{[47;1H}[49;173H[K[49;173H57,0-1[8C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,1[10C28%[48;1H[?25h[?25l[49;174H8[47;1H[?25h[?25l[49;174H7,0-1[46;1H[?25h[?25l[34;1H[106m{[45;1H}[m[49;174H6,1  [45;1H[?25h[?25l[34;1H{[45;1H}[49;174H5[44;1H[?25h[?25l[49;174H4,0-1[43;1H[?25h[?25l[49;174H3,1  [42;1H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H53,1[10C28%[42;1H[?25h[?25l[49;174H2[41;1H[?25h[?25l[49;176H2[41;2H[?25h[?25l[49;174H1[40;2H[?25h[?25l[49;176H3[40;3H[?25h[?25l[49;176H4[40;4H[?25h[?25l[49;174H0[39;4H[?25h[?25l[49;176H5[39;5H[?25h[?25l[49;176H4]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[39;4H[?25h[?25l[49;176H3[39;3H[?25h[?25l[49;176H2[39;2H[?25h[?25l[49;176H1[39;1H[?25h[?25l[38;48r[48;1H
[1;49r[38;5HKeyValueNode *curr = p;[48;1H[91m */[m[49;173H[K[49;173H49,28[9C29%[38;28H[?25h[?25l[49;177H7[38;27H[?25h[?25l[49;174H8[37;27H[?25h[?25l[49;177H6[37;26H[?25h[?25l[49;177H5[37;25H[?25h[?25l[49;177H4[37;24H[?25h[?25l[49;177H3[37;23H[?25h[?25l[49;177H2[37;22H[?25h[?25l[49;174H9[38;22H[?25h[?25l[49;177H1[38;21H[?25h[?25l[49;177H0[38;20H[?25h[?25l[49;176H19[38;19H[?25h[?25l[49;177H8[38;18H[?25h[?25l[49;177H7[38;17H[?25h[?25l[49;177H6[38;16H[?25h[?25l[49;177H5[38;15H[?25h[?25l[49;177H4[38;14H[?25h[?25l[49;177H3[38;13H[?25h[?25l[49;177H2[38;12H[?25h[?25l[49;177H1[38;11H[?25h[?25l[49;177H0[38;10H[?25h[?25l[49;176H9 [38;9H[?25h[?25l[49;176H8[38;8H[?25h[?25l[49;176H7[38;7H[?25h[?25l[49;176H6[38;6H[?25h[?25l[49;176H5[38;5H[?25h[?25l[39;48r[39;1H[L[1;49r[38;5H[K[39;1HKeyValueNode *curr = p;[49;173H[K[49;173H50,1[10C28%[39;1H[?25h[?25l KeyValueNode *curr = p;[49;176H2[39;2H[?25h[?25l KeyValueNode *curr = p;[49;176H3[39;3H[?25h[?25l KeyValueNode *curr = p;[49;176H4[39;4H[?25h[?25l KeyValueNode *curr = p;[49;176H5[39;5H[?25h[?25l[49;173H49[38;5H[?25h[?25lp[49;176H6[38;6H[?25h[?25lr[49;176H7[38;7H[?25h[?25li[49;176H8[38;8H[?25h[?25ln[49;176H9[38;9H[?25h[?25lt[49;176H10[38;10H[?25h[?25lf[49;177H1[38;11H[?25h[?25l9[49;177H2[38;12H[?25h[?25l[97m[101m)[m[49;177H3[38;13H[?25h[?25l[38;12H[K[49;177H2[38;12H[?25h[?25l[38;11H[K[49;177H1[38;11H[?25h[?25l([49;177H2[38;12H[?25h[?25l)[106m()[m[49;177H3[38;13H[?25h[?25l[49;177H2[38;12H[?25h[?25l[95m[106m"[m[95m)
    KeyValueNode *curr = p;
    free((void *)p->key);
    p = p->succ;
    free(curr);

  }
}

/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.[38;12H"[m[95m[106m)[m[49;177H3[38;13H[?25h[?25l[95m[106mF[m[95m)F[m[95m[106m)[m[49;177H4[38;14H[?25h[?25l[95m[106mR[m[95m)R[m[95m[106m)[m[49;177H5[38;15H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H6[38;16H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H7[38;17H[?25h[?25l[95m)[m[38;17H[K[38;16H[95m[106m)[m[49;177H6[38;16H[?25h[?25l[95m)[m[38;16H[K[38;15H[95m[106m)[m[49;177H5[38;15H[?25h[?25l[95m)[m[38;15H[K[38;14H[95m[106m)[m[49;177H4[38;14H[?25h[?25l[95m[106mr[m[95m)r[m[95m[106m)[m[49;177H5[38;15H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H6[38;16H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H7[38;17H[?25h[?25l[95m[106mi[m[95m)i[m[95m[106m)[m[49;177H8[38;18H[?25h[?25l[95m[106mn[m[95m)n[m[95m[106m)[m[49;177H9[38;19H[?25h[?25l[95m[106mg[m[95m)g[m[95m[106m)[m[49;176H20[38;20H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;177H1[38;21H[?25h[?25l[95m)[m[38;21H[K[38;20H[95m[106m)[m[49;177H0[38;20H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;177H1[38;21H[?25h[?25l[95m[106mI[m[95m)I[m[95m[106m)[m[49;177H2[38;22H[?25h[?25l[95m[106mn[m[95m)n[m[95m[106m)[m[49;177H3[38;23H[?25h[?25l[95m[106md[m[95m)d[m[95m[106m)[m[49;177H4[38;24H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H5[38;25H[?25h[?25l[95m[106mx[m[95m)x[m[95m[106m)[m[49;177H6[38;26H[?25h[?25l[95m[106m"[m)
    KeyValueNode *curr = p;
    free(([94mvoid[m *)p->key);
    p = p->succ;
    free(curr);

  }
}

[91m/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.[m[38;26H[95m"[m[106m)[m[49;177H7[38;27H[?25h[?25l[106m [m) [106m)[m[49;177H8[38;28H[?25h[?25l[106m,[m),[106m)[m[49;177H9[38;29H[?25h[?25l[106m [m) [106m)[m[49;176H30[38;30H[?25h[?25l[106mp[m)p[106m)[m[49;177H1[38;31H[?25h[?25l)[38;31H[K[38;30H[106m)[m[49;177H0[38;30H[?25h[?25l)[38;30H[K[38;29H[106m)[m[49;176H29[38;29H[?25h[?25l)[38;29H[K[38;28H[106m)[m[49;177H8[38;28H[?25h[?25l)[38;28H[K[38;27H[106m)[m[49;177H7[38;27H[?25h[?25l[95m)[m[38;27H[K[39;1H[95m    KeyValueNode *curr = p;
    free((void *)p->key);
    p = p->succ;
    free(curr);

  }
}

/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.[m[38;26H[95m[106m)[m[49;177H6[38;26H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;177H7[38;27H[?25h[?25l[95m[106m%[m[95m)%[m[95m[106m)[m[49;177H8[38;28H[?25h[?25l[95m[106md[m[95m)d[m[95m[106m)[m[49;177H9[38;29H[?25h[?25l[95m[106m"[m)
    KeyValueNode *curr = p;
    free(([94mvoid[m *)p->key);
    p = p->succ;
    free(curr);

  }
}

[91m/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.[m[38;29H[95m"[m[106m)[m[49;176H30[38;30H[?25h[?25l[106m,[m),[106m)[m[49;177H1[38;31H[?25h[?25l[106m [m) [106m)[m[49;177H2[38;32H[?25h[?25l[106mp[m)p[106m)[m[49;177H3[38;33H[?25h[?25l[106m-[m)-[106m)[m[49;177H4[38;34H[?25h[?25l[106m>[m)>[106m)[m[49;177H5[38;35H[?25h[?25l[106mi[m)i[106m)[m[49;177H6[38;36H[?25h[?25l[106mn[m)n[106m)[m[49;177H7[38;37H[?25h[?25l[106md[m)d[106m)[m[49;177H8[38;38H[?25h[?25l[106me[m)e[106m)[m[49;177H9[38;39H[?25h[?25l[106mx[m)x[106m)[m[49;176H40[38;40H[?25h[?25l[38;11H([28C)[49;174H8[37;40H[?25h[?25l[49;174H7[36;40H[?25h[?25l[49;174H6,31[35;31H[?25h[?25l[34;1H[106m{[45;1H}[m[49;174H5,2 [34;2H[?25h[?25l[33;16H[106m([23C)[m
{[45;1H}[49;174H4,40[33;40H[?25h[?25l[33;16H([23C)[49;174H3,12[32;12H[?25h[?25l[49;174H2,40[31;40H[?25h[?25l[49;174H1,1 [30;1H[?25h[?25l[8;1H[106m{[29;1H}[m[49;174H0,2[29;2H[?25h[?25l[8;1H{[29;1H}[49;173H39,13[28;13H[?25h[?25l[49;174H8,1 [27;1H[?25h[?25l[49;174H7,24[26;24H[?25h[?25l[49;174H6,17[25;17H[?25h[?25l[49;174H5,15[24;15H[?25h[?25l[49;174H4,30[23;30H[?25h[?25l[49;174H3,1 [22;1H[?25h[?25l[49;174H2,40[21;40H[?25h[?25l[17;32H[106m{[20;3H}[m[49;174H1,4 [20;4H[?25h[?25l[17;32H{[20;3H}[49;174H0,13[19;13H[?25h[?25l[49;173H29,40[18;40H[?25h[?25l[49;174H8[17;40H[?25h[?25l[49;174H7,1 [16;1H[?25h[?25l[49;174H6,35[15;35H[?25h[?25l[49;174H5,40[14;40H[?25h[?25l[49;174H4[13;40H[?25h[?25l[49;174H3,1 [12;1H[?25h[?25l[49;174H2,40[11;40H[?25h[?25l[49;174H1[10;40H[?25h[?25l[49;174H0[9;40H[?25h[?25l[8;1H[106m{[29;1H}[m[49;173H19,2 [8;2H[?25h[?25l{[29;1H}[49;174H8,40[7;40H[?25h[?25l[49;174H7,22[6;22H[?25h[?25l[49;174H6,4 [5;4H[?25h[?25l[49;174H5,21[4;21H[?25h[?25l[49;174H4,40[3;40H[?25h[?25l[49;174H3[2;40H[?25h[?25l[49;174H2,1 [1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H} KeyValueNode;[49;173H[K[49;173H11,16[9C26%[1;16H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m[49;173H[K[49;173H10,40[9C23%[1;40H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mint[m value;[13C[91m/** integer value */[m[49;173H[K[49;173H9,40[10C21%[1;40H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mconst[m [94mchar[m *key;[7C[91m/** string key */[m[49;173H[K[49;173H8,40[10C18%[1;40H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[94mtypedef[m [94mstruct[m KeyValueStruct {[49;173H[K[49;173H7,32[10C15%[1;31H[106m{[5;1H}[1;32H[?25h[?25l[1;48r[m[1;1H[L[1;49r[1;1H[91m/** A struct used to form a linear chain of key-value pairs. */[m[49;173H[K[49;173H6,40[10C13%[2;31H{[6;1H}[1;40H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H5,1[11C10%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<string.h>[m[49;173H[K[49;173H4,20[11C7%[1;20H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdlib.h>[m[49;173H[K[49;173H3,20[11C5%[1;20H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<stdio.h>[m[49;173H[K[49;173H2,19[11C2%[1;19H[?25h[?25l[1;48r[1;1H[L[1;49r[1;1H[95m#include [m[95m<errno.h>[m[49;173H[K[49;173H1,19[10CTop[1;19H[?25h[?25l[49;173H2[2;19H[?25h[?25l[49;173H3,20[3;20H[?25h[?25l[49;173H4[4;20H[?25h[?25l[49;173H5,1 [5;1H[?25h[?25l[49;173H6,40[6;40H[?25h[?25l[7;31H[106m{[11;1H}[m[49;173H7,32[7;32H[?25h[?25l{[11;1H}[49;173H8,40[8;40H[?25h[?25l[49;173H9[9;40H[?25h[?25l[49;173H10,40[10;40H[?25h[?25l[49;174H1,16[11;16H[?25h[?25l[49;174H2,1 [12;1H[?25h[?25l[49;174H3,40[13;40H[?25h[?25l[49;174H4[14;40H[?25h[?25l[49;174H5,21[15;21H[?25h[?25l[49;174H6,4 [16;4H[?25h[?25l[49;174H7,22[17;22H[?25h[?25l[49;174H8,40[18;40H[?25h[?25l
[106m{[40;1H}[m[49;174H9,2 [19;2H[?25h[?25l{[40;1H}[49;173H20,40[20;40H[?25h[?25l[49;174H1[21;40H[?25h[?25l[49;174H2[22;40H[?25h[?25l[49;174H3,1 [23;1H[?25h[?25l[49;174H4,40[24;40H[?25h[?25l[49;174H5[25;40H[?25h[?25l[49;174H6,35[26;35H[?25h[?25l[49;174H7,1 [27;1H[?25h[?25l[49;174H8,40[28;40H[?25h[?25l[49;174H9[29;40H[?25h[?25l[49;173H30,13[30;13H[?25h[?25l[28;32H[106m{[31;3H}[m[49;174H1,4 [31;4H[?25h[?25l[28;32H{[31;3H}[49;174H2,40[32;40H[?25h[?25l[49;174H3,1 [33;1H[?25h[?25l[49;174H4,30[34;30H[?25h[?25l[49;174H5,15[35;15H[?25h[?25l[49;174H6,17[36;17H[?25h[?25l[49;174H7,24[37;24H[?25h[?25l[49;174H8,1 [38;1H[?25h[?25l[49;174H9,13[39;13H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40,2 [40;2H[?25h[?25l[19;1H{[40;1H}[49;174H1,1[41;1H[?25h[?25l[49;174H2,40[42;40H[?25h[?25l[49;174H3,12[43;12H[?25h[?25l[44;16H[106m([23C)[m[49;174H4,40[44;40H[?25h[?25l[44;16H([23C)[49;174H5,2 [45;2H[?25h[?25l[49;174H6,31[46;31H[?25h[?25l[49;174H7,40[47;40H[?25h[?25l[49;174H8[48;40H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"Freeing Index %d"[m, p->index)[49;173H[K[49;173H49,40[10C2%[48;11H[106m([28C)[?25h[?25l[1;48r[m[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;173H[K[49;173H50,28[10C5%[47;11H([28C)[48;28H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m *)p->key);[49;173H[K[49;173H51,26[10C7%[48;26H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,17[9C10%[48;17H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,16[9C13%[48;16H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,1[10C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,4[10C18%[41;61H[106m{[48;3H}[?25h[?25l[1;48r[m[48;1H
[1;49r[48;1H}[49;173H[K[49;173H56,2[10C21%[37;1H[106m{[m[40;61H{[47;3H}
[106m}[?25h[?25l[1;48r[m[48;1H
[1;49r[49;173H[K[49;173H57,1[10C23%[36;1H{[47;1H}
[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,40[9C26%[48;40H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,40[9C28%[48;40H[?25h[?25l[49;174H8[47;40H[?25h[?25l[49;174H7,1 [46;1H[?25h[?25l[34;1H[106m{[45;1H}[m[49;174H6,2[45;2H[?25h[?25l[34;1H{[37;61H[106m{[44;3H}[m
}[49;174H5,4[44;4H[?25h[?25l[37;61H{[44;3H}[49;174H4,1[43;1H[?25h[?25l[49;174H3,16[42;16H[?25h[?25l[49;174H2,17[41;17H[?25h[?25l[49;174H1,26[40;26H[?25h[?25l[49;174H0,28[39;28H[?25h[?25l[38;11H[106m([28C)[m[49;173H49,40[38;40H[?25h[?25l[38;11H([28C)[49;174H8[37;40H[?25h[?25l[38;11H[106m([28C)[m[49;174H9[38;40H[?25h[?25l)[38;40H[K[38;39H[106m)[m[49;176H39[38;39H[?25h[?25l)[38;39H[K[38;38H[106m)[m[49;177H8[38;38H[?25h[?25l)[38;38H[K[38;37H[106m)[m[49;177H7[38;37H[?25h[?25l)[38;37H[K[38;36H[106m)[m[49;177H6[38;36H[?25h[?25l)[38;36H[K[38;35H[106m)[m[49;177H5[38;35H[?25h[?25l[106mv[m)v[106m)[m[49;177H6[38;36H[?25h[?25l[106ma[m)a[106m)[m[49;177H7[38;37H[?25h[?25l[106ml[m)l[106m)[m[49;177H8[38;38H[?25h[?25l[106mu[m)u[106m)[m[49;177H9[38;39H[?25h[?25l[106me[m)e[106m)[m[49;176H40[38;40H[?25h[?25l[106m`[m)`[106m)[m[49;177H1[38;41H[?25h[?25l)[38;41H[K[38;40H[106m)[m[49;177H0[38;40H[?25h[?25l[106m`[m)`[106m)[m[49;177H1[38;41H[?25h[?25l)[38;41H[K[38;40H[106m)[m[49;177H0[38;40H[?25h[49;1H[K[38;39H[?25l[38;11H([28C)[49;173H49,39[9C28%[38;39H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 86L, 2668C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c:wq[K./bug-program [2P/bug-programmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
[01m[Kbug-program.c:[m[K In function â€˜[01m[Kfree_key_values[m[Kâ€™:
[01m[Kbug-program.c:49:41:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[KKeyValueNode[m[Kâ€™
     printf("Freeing Index %d", p->value)
                                         [01;31m[K^[m[K
                                         [32m[K;[m[K
     [32m[KKeyValueNode[m[K *curr = p;
     [32m[K~~~~~~~~~~~~[m[K                         
[01m[Kbug-program.c:53:10:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kcurr[m[Kâ€™ undeclared (first use in this function); did you mean â€˜[01m[Kchar[m[Kâ€™?
     free([01;31m[Kcurr[m[K);
          [01;31m[K^~~~[m[K
          [32m[Kchar[m[K
[01m[Kbug-program.c:53:10:[m[K [01;36m[Knote: [m[Keach undeclared identifier is reported only once for each function it appears in
make: *** [<builtin>: bug-program] Error 1
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 86L, 2668C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"Freeing Index %d"[m, p->value)[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;173H[K[49;173H50,1[11C5%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m *)p->key);[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,0-1[8C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[37;1H[106m{[48;1H}[m[49;173H[K[49;173H56,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H{[47;1H}[49;173H[K[49;173H57,0-1[8C23%[48;1H[?25h[?25l[36;1H[106m{[47;1H}[m[49;174H6,1  [47;1H[?25h[?25l[36;1H{[47;1H}[49;174H5[46;1H[?25h[?25l[49;174H4,0-1[45;1H[?25h[?25l[49;174H3,1  [44;1H[?25h[?25l[49;174H2[43;1H[?25h[?25l[49;174H1[42;1H[?25h[?25l[49;174H0[41;1H[?25h[?25l[49;173H49[40;1H[?25h[?25l[49;176H2[40;2H[?25h[?25l[49;176H3[40;3H[?25h[?25l[49;176H4[40;4H[?25h[?25l[49;176H5[40;5H[?25h[?25l[49;176H6[40;6H[?25h[?25l[49;176H7[40;7H[?25h[?25l[49;176H8[40;8H[?25h[?25l[49;176H9[40;9H[?25h[?25l[49;176H10[40;10H[?25h[?25lf[106m([28C)[m[49;177H1[40;11H[?25h[?25l([28C)[49;177H2[40;12H[?25h[?25l[49;177H3[40;13H[?25h[?25l[49;177H4[40;14H[?25h[?25l[49;177H5[40;15H[?25h[?25l[49;177H6[40;16H[?25h[?25l[49;177H7[40;17H[?25h[?25l[49;177H8[40;18H[?25h[?25l[49;177H9[40;19H[?25h[?25l[49;176H20[40;20H[?25h[?25l[49;177H1[40;21H[?25h[?25l[49;177H2[40;22H[?25h[?25l[49;177H3[40;23H[?25h[?25l[49;177H4[40;24H[?25h[?25l[49;177H5[40;25H[?25h[?25l[49;177H6[40;26H[?25h[?25l[49;177H7[40;27H[?25h[?25l[49;177H8[40;28H[?25h[?25l[49;177H9[40;29H[?25h[?25l[49;176H30[40;30H[?25h[?25l[49;177H1[40;31H[?25h[?25l[49;177H2[40;32H[?25h[?25l[49;177H3[40;33H[?25h[?25l[49;177H4[40;34H[?25h[?25l[49;177H5[40;35H[?25h[?25l[49;177H6[40;36H[?25h[?25l[49;177H7[40;37H[?25h[?25l[49;177H8[40;38H[?25h[?25l[49;177H9[40;39H[?25h[?25l[40;11H[106m([28C)[m[49;176H40[40;40H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H49,40[9C23%[40;40H[?25h[?25l[49;177H1[40;41H[?25h[?25l;[40;11H([28C)[49;177H2]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[40;42H[?25h[49;1H[K[40;41H[?25l[49;173H49,41[9C23%[40;41H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 86L, 2669C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.cmake -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile[3Pvi bug-program.c:wq[K./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Segmentation fault
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 86L, 2669C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;175H2[1;2H[?25h[?25l[49;173H2[2;2H[?25h[?25l[49;173H3[3;2H[?25h[?25l[49;173H4[4;2H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,2  [6;2H[?25h[?25l[49;173H7[7;2H[?25h[?25l[49;173H8[8;2H[?25h[?25l[49;173H9[9;2H[?25h[?25l[49;173H10,2[10;2H[?25h[?25l[49;174H1[11;2H[?25h[?25l[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,2  [13;2H[?25h[?25l[49;174H4[14;2H[?25h[?25l[49;174H5[15;2H[?25h[?25l[49;174H6[16;2H[?25h[?25l[49;174H7[17;2H[?25h[?25l[49;174H8[18;2H[?25h[?25l
[106m{[40;1H}[m[49;174H9,1[19;1H[?25h[?25l{[40;1H}[49;173H20,2[20;2H[?25h[?25l[49;174H1[21;2H[?25h[?25l[49;174H2[22;2H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,2  [24;2H[?25h[?25l[49;174H5[25;2H[?25h[?25l[49;174H6[26;2H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,2  [28;2H[?25h[?25l[49;174H9[29;2H[?25h[?25l[49;173H30[30;2H[?25h[?25l[49;174H1[31;2H[?25h[?25l[49;174H2[32;2H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,2  [34;2H[?25h[?25l[49;174H5[35;2H[?25h[?25l[49;174H6[36;2H[?25h[?25l[49;174H7[37;2H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,2  [39;2H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40,1[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,2  [42;2H[?25h[?25l[49;174H3[43;2H[?25h[?25l[49;174H4[44;2H[?25h[?25l[49;174H5,1[45;1H[?25h[?25l[49;174H6,2[46;2H[?25h[?25l[49;174H7[47;2H[?25h[?25l[49;174H8[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"Freeing Index %d"[m, p->value);[49;1H[K[49;173H49,2[11C2%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;173H[K[49;173H50,2[11C5%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m *)p->key);[49;173H[K[49;173H51,2[11C7%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,2[10C10%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,2[10C13%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,0-1[8C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,2[10C18%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[37;1H[106m{[48;1H}[m[49;173H[K[49;173H56,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H{[47;1H}[49;173H[K[49;173H57,0-1[8C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,2[10C26%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,2[10C28%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H60,2[10C31%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H61,2[10C34%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H62,2[10C36%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H63,2[10C39%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H64,2[10C42%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H65,2[10C44%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H66,2[10C47%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H67,2[10C50%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H68,2[10C52%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H69,2[10C55%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H70,2[10C57%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H71,2[10C60%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H72,2[10C63%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H73,2[10C65%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H74,1[10C68%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H75,0-1[8C71%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H76,2[10C73%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H77,2[10C76%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H78,2[10C78%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H79,2[10C81%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H80,2[10C84%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H81,2[10C86%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H82,2[10C89%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H83,2[10C92%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H84,2[10C94%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H85,2[10C97%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[41;12H[106m{[48;1H}[m[49;173H[K[49;173H86,1[10CBot[48;1H[?25h[?25l[41;12H{[48;1H}[49;174H5,2[47;2H[?25h[?25l[49;174H4[46;2H[?25h[?25l[49;174H3[45;2H[?25h[?25l[49;174H2[44;2H[?25h[?25l[49;174H3[45;2H[?25h[?25l[49;174H4[46;2H[?25h[?25l[49;174H3[45;2H[?25h[?25l[43;61H[106m{

[m  [106m}[m[49;176H3[45;3H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H83,3[10CBot[45;3H[?25h[?25l[49;176H4[45;4H[?25h[?25l[46;48r[46;1H[L[1;49r[49;173H[K[49;173H84,1[10C97%[43;61H{

  }]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c
[?25h[?25l[49;176H2-9[46;9H[?25h[?25l[49;176H1  [46;1H[?25h[?25l[45;48r[48;1H
[1;49r[45;3H}


}[49;173H[K[49;173H83,4[10CBot[43;61H[106m{

[m  [106m}[?25h[?25l[46;48r[m[46;1H[L[1;49r[49;173H[K[49;173H84,1[10C97%[43;61H{

  }
[?25h[?25l[49;176H2[46;2H[?25h[?25l[49;176H3[46;3H[?25h[?25lp[49;176H4[46;4H[?25h[?25lr[49;176H5[46;5H[?25h[?25li[49;176H6[46;6H[?25h[?25ln[49;176H7[46;7H[?25h[?25lt[49;176H8[46;8H[?25h[?25lf[49;176H9[46;9H[?25h[?25l([49;176H10[46;10H[?25h[?25l)[106m()[m[49;177H1[46;11H[?25h[?25l[49;177H0[46;10H[?25h[?25l[95m[106m"[m[95m)
  free_key_values(keyValues);
  return 0;[46;10H"[m[95m[106m)[m[49;177H1[46;11H[?25h[?25l[95m[106mG[m[95m)G[m[95m[106m)[m[49;177H2[46;12H[?25h[?25l[95m[106mo[m[95m)o[m[95m[106m)[m[49;177H3[46;13H[?25h[?25l[95m[106mi[m[95m)i[m[95m[106m)[m[49;177H4[46;14H[?25h[?25l[95m[106mn[m[95m)n[m[95m[106m)[m[49;177H5[46;15H[?25h[?25l[95m[106mg[m[95m)g[m[95m[106m)[m[49;177H6[46;16H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;177H7[46;17H[?25h[?25l[95m[106mt[m[95m)t[m[95m[106m)[m[49;177H8[46;18H[?25h[?25l[95m[106mo[m[95m)o[m[95m[106m)[m[49;177H9[46;19H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;176H20[46;20H[?25h[?25l[95m[106mf[m[95m)f[m[95m[106m)[m[49;177H1[46;21H[?25h[?25l[95m[106mr[m[95m)r[m[95m[106m)[m[49;177H2[46;22H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H3[46;23H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;177H4[46;24H[?25h[?25l[95m[106m [m[95m) [m[95m[106m)[m[49;177H5[46;25H[?25h[?25l[95m[106mV[m[95m)V[m[95m[106m)[m[49;177H6[46;26H[?25h[?25l[95m[106ma[m[95m)a[m[95m[106m)[m[49;177H7[46;27H[?25h[?25l[95m[106ml[m[95m)l[m[95m[106m)[m[49;177H8[46;28H[?25h[?25l[95m[106mu[m[95m)u[m[95m[106m)[m[49;177H9[46;29H[?25h[?25l[95m[106me[m[95m)e[m[95m[106m)[m[49;176H30[46;30H[?25h[?25l[95m[106ms[m[95m)s[m[95m[106m)[m[49;177H1[46;31H[?25h[?25l[95m[106m"[m)
  free_key_values(keyValues);
  [31mreturn[m [1C;[46;31H[95m"[m[106m)[m[49;177H2[46;32H[?25h[?25l[49;177H3[46;33H[?25h[?25l;[46;9H([22C)[49;177H4[46;34H[?25h[49;1H[K[46;33H[?25l[49;173H84,33[9C97%[46;33H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 87L, 2703C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[2P./bug-program make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 87L, 2703C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 87L, 2703C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.cmake -f ../Makefile[3Pvi bug-program.c[2P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Segmentation fault
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program vi bug-program.cmake -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 87L, 2703C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H4[34;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H2,1  [32;1H[?25h[?25l[49;176H2[32;2H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,2  [34;2H[?25h[?25l[49;174H5[35;2H[?25h[?25l[49;174H6[36;2H[?25h[?25l[49;174H7[37;2H[?25h[?25l[49;1H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[49;3H[K[49;3H[?25h[?25l[49;2H[K[49;2H[?25h [?25l[171C37,2[10CTop[37;2H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,2  [39;2H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40,1[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,2  [42;2H[?25h[?25l[49;174H3[43;2H[?25h[?25l[49;174H4[44;2H[?25h[?25l[49;174H5,1[45;1H[?25h[?25l[49;174H6,2[46;2H[?25h[?25l[49;174H7[47;2H[?25h[?25l[49;174H8[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"Freeing Index %d"[m, p->value);[49;173H[K[49;173H49,2[11C2%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5HKeyValueNode *curr = p;[49;173H[K[49;173H50,2[11C5%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m *)p->key);[49;173H[K[49;173H51,2[11C7%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = p->succ;[49;173H[K[49;173H52,2[10C10%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(curr);[49;173H[K[49;173H53,2[10C12%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H54,0-1[8C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H55,2[10C17%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[37;1H[106m{[48;1H}[m[49;173H[K[49;173H56,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H{[47;1H}[49;173H[K[49;173H57,0-1[8C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H58,2[10C25%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H59,2[10C28%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H60,2[10C30%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H61,2[10C33%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H62,2[10C35%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H63,2[10C38%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H64,2[10C41%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H65,2[10C43%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H66,2[10C46%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H67,2[10C48%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H68,2[10C51%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H69,2[10C53%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H70,2[10C56%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H71,2[10C58%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H72,2[10C61%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H73,2[10C64%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H74,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H75,0-1[8C69%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H76,2[10C71%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H77,2[10C74%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H78,2[10C76%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H79,2[10C79%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H80,2[10C82%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H81,2[10C84%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H82,2[10C87%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H83,2[10C89%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hprintf([95m"Going to free Values"[m);[49;173H[K[49;173H84,2[10C92%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H85,2[10C94%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H86,2[10C97%[48;2H[?25h[?25l[1;48r[48;1H
[1;49r[40;12H[106m{[48;1H}[m[49;173H[K[49;173H87,1[10CBot[48;1H[?25h[?25l[40;12H{[48;1H}[49;174H6,2[47;2H[?25h[?25l[49;174H5[46;2H[?25h[?25l[49;174H4[45;2H[?25h[?25l[49;174H3[44;2H[?25h[?25l[49;174H2[43;2H[?25h[?25l[49;174H1[42;2H[?25h[?25l[49;174H0[41;2H[?25h[?25l[49;173H79[40;2H[?25h[?25l[49;174H8[39;2H[?25h[?25l[49;174H7[38;2H[?25h[?25l[49;174H6[37;2H[?25h[?25l[49;174H5,0-1[36;1H[?25h[?25l[23;23H[106m{[35;1H}[m[49;174H4,1  [35;1H[?25h[?25l[23;23H{[35;1H}[49;174H3,2[34;2H[?25h[?25l[49;174H2[33;2H[?25h[?25l[49;174H1[32;2H[?25h[?25l[49;174H0[31;2H[?25h[?25l[49;173H69[30;2H[?25h[?25l[49;174H8[29;2H[?25h[?25l[49;174H7[28;2H[?25h[?25l[49;174H6[27;2H[?25h[?25l[49;174H5[26;2H[?25h[?25l[49;174H4[25;2H[?25h[?25l[49;174H3[24;2H[?25h[?25l[49;174H2[23;2H[?25h[?25l[49;174H1[22;2H[?25h[?25l[49;174H0[21;2H[?25h[?25l[49;173H59[20;2H[?25h[?25l[49;174H8[19;2H[?25h[?25l[49;174H7,0-1[18;1H[?25h[?25l[6;1H[106m{[17;1H}[m[49;174H6,1  [17;1H[?25h[?25l[6;1H{[17;1H}[49;174H5,2[16;2H[?25h[?25l[49;174H4,0-1[15;1H[?25h[?25l[49;174H3,2  [14;2H[?25h[?25l[49;174H2[13;2H[?25h[?25l[49;174H1[12;2H[?25h[?25l[49;174H0[11;2H[?25h[?25l[49;173H49[10;2H[?25h[?25l[49;174H8[9;2H[?25h[?25l[49;174H7[8;2H[?25h[?25l[49;174H8[9;2H[?25h[?25l[49;174H9[10;2H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H49,2[10CBot[10;2H[?25h[?25l[11;48r[11;1H[L[1;49r[10;5H[K[11;4Hprintf([95m"Freeing Index %d"[m, p->value);[49;173H[K[49;173H50,1[10C97%]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[11;1H[?25h[?25l[12;48r[12;1H[L[1;49r[11;4H[K[12;4Hprintf([95m"Freeing Index %d"[m, p->value);[49;173H[K[49;173H51,1[10C95%[12;1H[?25h[?25l    printf([95m"Freeing Index %d"[m, p->value);[49;176H2[12;2H[?25h[?25l[49;174H0,1[11;1H[?25h[?25l/[49;176H2[11;2H[?25h[?25l[91m/*
    printf("Freeing Index %d", p->value);
    KeyValueNode *curr = p;
    free((void *)p->key);
    p = p->succ;
    free(curr);

  }
}[m

[97m[101m/[m[49;176H3[11;3H[?25h[?25l[49;174H1[12;3H[?25h[?25l[49;174H2[13;3H[?25h[?25l[49;174H3[14;3H[?25h[?25l[49;174H4[15;3H[?25h[?25l[49;174H5[16;3H[?25h[?25l[49;174H6,1[17;1H[?25h[?25l[91m*[m[49;176H2[17;2H[?25h[?25l[91m/[m
  }
}

[91m/[m[49;176H3[17;3H[?25h[?25l[18;48r[18;1H[L[1;49r[49;173H[K[49;173H57,1[10C92%[18;1H[?25h[?25l[49;176H2[18;2H[?25h[?25l[49;176H3[18;3H[?25h[?25lf[49;176H4[18;4H[?25h[?25lr[49;176H5[18;5H[?25h[?25le[49;176H6[18;6H[?25h[?25le[49;176H7[18;7H[?25h[?25l([49;176H8[18;8H[?25h[?25l)[106m()[m[49;176H9[18;9H[?25h[?25l[49;176H8[18;8H[?25h[?25l[106mo[mp)op[106m)[m[49;176H10[18;10H[?25h[?25l)[18;10H[K[18;9H[106m)[m[49;176H9 [18;9H[?25h[?25l)[18;9H[K[18;8H[106m)[m[49;176H8[18;8H[?25h[?25l[106mp[m)p[106m)[m[49;176H9[18;9H[?25h[?25l[9;61H[106m{[m[18;7H(p)
  [106m}[m[49;174H8,4[19;4H[?25h[?25l[6;1H[106m{[m[9;61H{[19;3H}
[106m}[m[49;174H9,2[20;2H[?25h[?25l[49;176H1[20;1H[?25h[?25l[6;1H{[20;1H}[49;173H60[21;1H[?25h[?25l[6;1H[106m{[20;1H}[m[49;173H59[20;1H[?25h[?25l[6;1H{[20;1H}[49;174H8[19;1H[?25h[?25l[49;174H7[18;1H[?25h[?25l[49;176H2[18;2H[?25h[?25l[49;176H3[18;3H[?25h[?25l[49;176H4[18;4H[?25h[?25l[49;176H5[18;5H[?25h[?25l[49;176H6[18;6H[?25h[?25le[106m([mp[106m)[m[49;176H7[18;7H[?25h[?25l[49;176H8[18;8H[?25h[?25l[49;176H9[18;9H[?25h[?25l[49;176H10[18;10H[?25h[?25l;(p)[49;177H1[18;11H[?25h[49;1H[K[18;10H[?25l[49;173H57,10[9C92%[18;10H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 90L, 2721C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[2P./bug-program vi bug-program.cmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 90L, 2721C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;1H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 90L, 2721C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.cmake -f ../Makefile[3Pvi bug-program.c[2P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Going to free Valuesdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program vi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 90L, 2721C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/*[m[49;173H[K[49;173H50,1[11C4%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m    printf("Freeing Index %d", p->value);[m[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m    KeyValueNode *curr = p;[m[49;173H[K[49;173H52,1[11C9%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m    free((void *)p->key);[m[49;173H[K[49;173H53,1[10C11%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m    p = p->succ;[m[49;173H[K[49;173H54,1[10C14%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m    free(curr);[m[49;173H[K[49;173H55,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m*/[m[49;173H[K[49;173H56,1[10C19%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(p);[49;173H[K[49;173H57,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H58,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[34;1H[106m{[48;1H}[m[49;173H[K[49;173H59,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[33;1H{[47;1H}[49;173H[K[49;173H60,0-1[8C28%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H61,1[10C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H62,1[10C33%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H63,1[10C35%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H64,1[10C38%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H65,1[10C40%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H66,1[10C42%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H67,1[10C45%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H68,1[10C47%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H69,1[10C50%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H70,1[10C52%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H71,1[10C54%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H72,1[10C57%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H73,1[10C59%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H74,1[10C61%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H75,1[10C64%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H76,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H77,1[10C69%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H78,0-1[8C71%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H79,1[10C73%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H80,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H81,1[10C78%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H82,1[10C80%[48;1H[?25h[?25l[49;174H1[47;1H[?25h[?25l[49;174H2[48;1H[?25h[?25l[49;174H1[47;1H[?25h[?25l[49;174H0[46;1H[?25h[?25l[49;173H79[45;1H[?25h[?25l[49;174H8,0-1[44;1H[?25h[?25l[31;23H[106m{[43;1H}[m[49;174H7,1  [43;1H[?25h[?25l[31;23H{[43;1H}[49;174H6[42;1H[?25h[?25l[49;174H5[41;1H[?25h[?25l[49;174H4[40;1H[?25h[?25l[49;174H3[39;1H[?25h[?25l[49;174H2[38;1H[?25h[?25l[49;174H1[37;1H[?25h[?25l[49;174H0[36;1H[?25h[?25l[49;173H69[35;1H[?25h[?25l[49;174H8[34;1H[?25h[?25l[49;174H7[33;1H[?25h[?25l[49;174H6[32;1H[?25h[?25l[49;174H5[31;1H[?25h[?25l[49;174H4[30;1H[?25h[?25l[49;174H3[29;1H[?25h[?25l[49;174H2[28;1H[?25h[?25l[49;174H1[27;1H[?25h[?25l[49;174H0,0-1[26;1H[?25h[?25l[11;1H[106m{[25;1H}[m[49;173H59,1  [25;1H[?25h[?25l[11;1H{[25;1H}[49;174H8[24;1H[?25h[?25l[49;174H7[23;1H[?25h[?25l[49;174H6[22;1H[?25h[?25l[49;174H5[21;1H[?25h[?25l[49;174H4[20;1H[?25h[?25l[49;174H3[19;1H[?25h[?25l[49;174H2[18;1H[?25h[?25l[49;174H1[17;1H[?25h[?25l[49;174H0[16;1H[?25h[?25l[49;176H2[16;2H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H50,2[10C80%[16;2H[?25h[?25l[49;176H3[16;3H[?25h[?25l/[16;2H[K[17;1H    printf([95m"Freeing Index %d"[m, p->value);
    KeyValueNode *curr = p;
    free(([94mvoid[m *)p->key);
    p = p->succ;
    free(curr);
[97m[101m*/[m[49;176H2]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[16;2H[?25h[?25l[16;1H[K[49;176H1[16;1H[?25h[?25l[49;174H1[17;1H[?25h[?25l[49;174H2[18;1H[?25h[?25l[49;174H3[19;1H[?25h[?25l[49;174H4[20;1H[?25h[?25l[49;174H5[21;1H[?25h[?25l[49;174H6[22;1H[?25h[?25l[49;176H2[22;2H[?25h[?25l[49;176H3[22;3H[?25h[?25l*[22;2H[K[49;176H2[22;2H[?25h[?25l[22;1H[K[49;176H1[22;1H[?25h[?25l[21;48r[48;1H
[1;49r[21;5Hfree(curr);[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H55,16[9C82%[21;16H[?25h[?25l[49;174H4[20;16H[?25h[?25l[49;174H3[19;16H[?25h[?25l[49;174H2[18;16H[?25h[?25l[49;174H1[17;16H[?25h[?25l[49;174H0,1 [16;1H[?25h[?25l[49;173H49,2[15;2H[?25h[?25l[49;174H8,16[14;16H[?25h[?25l[49;177H5[14;15H[?25h[?25l[49;177H4[14;14H[?25h[?25l[49;177H3[14;13H[?25h[?25l[49;177H2[14;12H[?25h[?25l[49;177H1[14;11H[?25h[?25l[49;177H0[14;10H[?25h[?25l[49;176H9 [14;9H[?25h[?25l[106m([51C)[m[49;176H8[14;8H[?25h[?25l[49;176H7[14;7H[?25h[?25l([51C)[49;176H6[14;6H[?25h[?25l[49;176H5[14;5H[?25h[?25l[49;176H4[14;4H[?25h[?25l[49;176H3[14;3H[?25h[?25lifor (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H4[14;4H[?25h[?25l[31mfor[m (KeyValueNode *p = keyValues; p != [95mNUL[m[1C; p = p->succ) {[14;62H[K[49;176H3[14;3H[?25h[?25l[15;48r[15;1H[L[1;49r[14;3H[K[15;1H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H49,1[10C80%[15;1H[?25h[?25l [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H2[15;2H[?25h[?25l [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H3[15;3H[?25h[?25l [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H4[15;4H[?25h[?25l[49;174H8,3[14;3H[?25h[?25l[49;174H9,4[15;4H[?25h[?25l[31mfor[m (KeyValueNode *p = keyValues; p != [95mNUL[m[1C; p = p->succ) {[15;62H[K[49;176H3[15;3H[?25h[?25l[31mfor[m (KeyValueNode *p = keyValues; p != [95mNUL[m[1C; p = p->succ) {[15;61H[K[49;176H2[15;2H[?25h[?25l[49;174H8[14;2H[?25h[?25l[49;174H9[15;2H[?25h[?25l[49;174H8[14;2H[?25h[?25l[49;174H9[15;2H[?25h[?25l[31mfor[m (KeyValueNode *p = keyValues; p != [95mNUL[m[1C; p = p->succ) {[15;60H[K[49;176H1[15;1H[?25h[?25l [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H2[15;2H[?25h[?25l [31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;176H3[15;3H[?25h[?25l[49;174H8[14;3H[?25h[?25lp[49;176H4[14;4H[?25h[?25lr[49;176H5[14;5H[?25h[?25le[49;176H6[14;6H[?25h[?25l[14;5H[K[49;176H5[14;5H[?25h[?25l[14;4H[K[49;176H4[14;4H[?25h[?25l[14;3H[K[49;176H3[14;3H[?25h[?25l=[49;176H4[14;4H[?25h[?25l[14;3H[K[49;176H3[14;3H[?25h[?25lK[49;176H4[14;4H[?25h[?25l[14;3H[K[49;176H3[14;3H[?25h[?25lk[49;176H4[14;4H[?25h[?25l[14;3H[K[49;176H3[14;3H[?25h[?25lK[49;176H4[14;4H[?25h[?25le[49;176H5[14;5H[?25h[?25ly[49;176H6[14;6H[?25h[?25lV[49;176H7[14;7H[?25h[?25la[49;176H8[14;8H[?25h[?25ll[49;176H9[14;9H[?25h[?25lu[49;176H10[14;10H[?25h[?25le[49;177H1[14;11H[?25h[?25lN[49;177H2[14;12H[?25h[?25lo[49;177H3[14;13H[?25h[?25ld[49;177H4[14;14H[?25h[?25le[49;177H5[14;15H[?25h[?25l[49;177H6[14;16H[?25h[?25l*[49;177H7[14;17H[?25h[?25lp[49;177H8[14;18H[?25h[?25lr[49;177H9[14;19H[?25h[?25le[49;176H20[14;20H[?25h[?25lc[49;177H1[14;21H[?25h[?25l[14;20H[K[49;177H0[14;20H[?25h[?25lv[49;177H1[14;21H[?25h[?25l[49;177H2[14;22H[?25h[?25l=[49;177H3[14;23H[?25h[?25l[49;177H4[14;24H[?25h[?25l*[49;177H5[14;25H[?25h[?25l[14;24H[K[49;177H4[14;24H[?25h[?25lk[49;177H5[14;25H[?25h[?25le[49;177H6[14;26H[?25h[?25ly[49;177H7[14;27H[?25h[?25lv[49;177H8[14;28H[?25h[?25la[49;177H9[14;29H[?25h[?25ll[49;176H30[14;30H[?25h[?25lu[49;177H1[14;31H[?25h[?25l[14;30H[K[49;177H0[14;30H[?25h[?25lu[49;177H1[14;31H[?25h[?25le[49;177H2[14;32H[?25h[?25ls[49;177H3[14;33H[?25h[?25l[49;174H9[15;33H[?25h[?25l[49;177H4[15;34H[?25h[?25l[49;177H5[15;35H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;61H[K[49;177H4[15;34H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;60H[K[49;177H3[15;33H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;59H[K[49;177H2[15;32H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;58H[K[49;177H1[15;31H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;57H[K[49;177H0[15;30H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;56H[K[49;176H29[15;29H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;55H[K[49;177H8[15;28H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;54H[K[49;177H7[15;27H[?25h[?25l; p != [95mNUL[m[1C; p = p->succ) {[15;53H[K[49;177H6[15;26H[?25h[?25lp; p != [95mNULL[m; p = p->succ) {[49;177H7[15;27H[?25h[?25lr; p != [95mNULL[m; p = p->succ) {[49;177H8[15;28H[?25h[?25le; p != [95mNULL[m; p = p->succ) {[49;177H9[15;29H[?25h[?25lv; p != [95mNULL[m; p = p->succ) {[49;176H30[15;30H[?25h[?25l-; p != [95mNULL[m; p = p->succ) {[49;177H1[15;31H[?25h[?25l>; p != [95mNULL[m; p = p->succ) {[49;177H2[15;32H[?25h[?25ls; p != [95mNULL[m; p = p->succ) {[49;177H3[15;33H[?25h[?25lu; p != [95mNULL[m; p = p->succ) {[49;177H4[15;34H[?25h[?25lc; p != [95mNULL[m; p = p->succ) {[49;177H5[15;35H[?25h[?25lc; p != [95mNULL[m; p = p->succ) {[49;177H6[15;36H[?25h[?25l[49;173H50,2 [16;2H[?25h[?25l[49;174H1,1[17;1H[?25h[?25l[49;176H2[17;2H[?25h[?25l[49;176H3[17;3H[?25h[?25l[49;176H4[17;4H[?25h[?25l[49;176H5[17;5H[?25h[?25l[49;174H2[18;5H[?25h[?25l[49;176H6[18;6H[?25h[?25l[49;176H7[18;7H[?25h[?25l[49;176H8[18;8H[?25h[?25l[49;176H9[18;9H[?25h[?25l[49;176H10[18;10H[?25h[?25lf[106m([28C)[m[49;177H1[18;11H[?25h[?25l[49;177H2[18;12H[?25h[?25l([28C)[49;177H3[18;13H[?25h[?25l[49;177H4[18;14H[?25h[?25l[49;177H5[18;15H[?25h[?25l[49;177H6[18;16H[?25h[?25l[49;177H7[18;17H[?25h[?25l[49;177H8[18;18H[?25h[?25l[49;177H9[18;19H[?25h[?25l[49;176H20[18;20H[?25h[?25l[49;177H1[18;21H[?25h[?25l[49;177H2[18;22H[?25h[?25l[49;177H3[18;23H[?25h[?25l[49;177H4[18;24H[?25h[?25l[49;177H5[18;25H[?25h[?25l[49;177H6[18;26H[?25h[?25l[49;177H7[18;27H[?25h[?25l[49;177H8[18;28H[?25h[?25l[49;177H9[18;29H[?25h[?25l[49;176H30[18;30H[?25h[?25l[49;177H1[18;31H[?25h[?25l[49;177H2[18;32H[?25h[?25l[49;177H3[18;33H[?25h[?25l[49;177H4[18;34H[?25h[?25l[49;177H5[18;35H[?25h[?25l[49;177H6[18;36H[?25h[?25l[49;177H7[18;37H[?25h[?25l[49;177H8[18;38H[?25h[?25l[49;177H9[18;39H[?25h[?25l[18;11H[106m([28C)[m[49;176H40[18;40H[?25h[?25l[49;177H1[18;41H[?25h[?25l[18;11H([28C)[49;177H2[18;42H[?25h[?25l[18;41H[K[18;11H[106m([28C)[m[49;177H1[18;41H[?25h[?25l[18;40H[K[18;11H([49;177H0[18;40H[?25h[?25l[18;39H[K[49;176H39[18;39H[?25h[?25l[18;38H[K[49;177H8[18;38H[?25h[?25l[18;37H[K[49;177H7[18;37H[?25h[?25l[18;36H[K[49;177H6[18;36H[?25h[?25l[18;35H[K[49;177H5[18;35H[?25h[?25l[18;34H[K[49;177H4[18;34H[?25h[?25l[18;33H[K[49;177H3[18;33H[?25h[?25l[18;32H[K[49;177H2[18;32H[?25h[?25l[49;177H1[18;31H[?25h[?25l[18;30H[K[49;177H0[18;30H[?25h[?25l[18;29H[K[19;1H[95m    KeyValueNode *curr = p;
    free((void *)p->key);
    p = p->succ;
    free(curr);
  free(p);
  }
}

/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.
 */
static KeyValueNode *
make_key_values(void) {
  const char *keys[] = {
    [m[1Ctwas[1C[95m, [m[1Cbrillig[1C[95m, [m[1Cand[1C[95m, [m[1Cthe[1C[95m, [m[1Cslithy[1C[95m, [m[1Ctoves[1C[95m,
    [m[1Cdid[1C[95m, [m[1Cgyre[1C[95m, [m[1Cand[1C[95m, [m[1Cgimble[1C[95m, [m[1Cin[1C[95m, [m[1Cthe[1C[95m, [m[1Cwabe[1C[95m,
    [m[1Call[1C[95m, [m[1Cmimsy[1C[95m, [m[1Cwere[1C[95m, [m[1Cthe[1C[95m, [m[1Cborogoves[1C[95m,
    [m[1Cand[1C[95m, [m[1Cthe[1C[95m, [m[1Cmome[1C[95m, [m[1Craths[1C[95m, [m[1Coutgrabe[1C[95m,
  };
  KeyValueNode *p = NULL;
  for (int i = 0; i < sizeof(keys)/sizeof(keys[0]); i++) {
    p = add_key_value(p, keys[i], i);
  }
  return p;
}

/** Print out all the words in the first verse of Carroll's Jabberwocky
 *  paired with their index in the verse.
 */
int main() {[m[49;176H29[18;29H[?25h[?25l[18;28H[K[49;177H8[18;28H[?25h[?25l[18;27H[K[49;177H7[18;27H[?25h[?25l[18;26H[K[49;177H6[18;26H[?25h[?25l[18;25H[K[49;177H5[18;25H[?25h[?25l[18;24H[K[49;177H4[18;24H[?25h[?25l[18;23H[K[49;177H3[18;23H[?25h[?25l[18;22H[K[49;177H2[18;22H[?25h[?25l[18;21H[K[49;177H1[18;21H[?25h[?25l[18;20H[K[49;177H0[18;20H[?25h[?25l[18;19H[K[49;176H19[18;19H[?25h[?25l[18;18H[K[49;177H8[18;18H[?25h[?25l[18;17H[K[49;177H7[18;17H[?25h[?25l[18;16H[K[49;177H6[18;16H[?25h[?25l[18;15H[K[49;177H5[18;15H[?25h[?25l[18;14H[K[49;177H4[18;14H[?25h[?25l[18;13H[K[49;177H3[18;13H[?25h[?25l[18;12H[K[19;1H    KeyValueNode *curr = p;
    free(([94mvoid[m *)p->key);
    p = p->succ;
    free(curr);
  free(p);
  }
}

[91m/** Make key-values for all the words in the first verse of Carroll's
 *  Jabberwocky with value being the index of the word.
 */[m
[94mstatic[m KeyValueNode *
make_key_values([94mvoid[m) {
  [94mconst[m [94mchar[m *keys[] = {
    [1C[95mtwas[m[1C, [1C[95mbrillig[m[1C, [1C[95mand[m[1C, [1C[95mthe[m[1C, [1C[95mslithy[m[1C, [1C[95mtoves[m[1C,
    [1C[95mdid[m[1C, [1C[95mgyre[m[1C, [1C[95mand[m[1C, [1C[95mgimble[m[1C, [1C[95min[m[1C, [1C[95mthe[m[1C, [1C[95mwabe[m[1C,
    [1C[95mall[m[1C, [1C[95mmimsy[m[1C, [1C[95mwere[m[1C, [1C[95mthe[m[1C, [1C[95mborogoves[m[1C,
    [1C[95mand[m[1C, [1C[95mthe[m[1C, [1C[95mmome[m[1C, [1C[95mraths[m[1C, [1C[95moutgrabe[m[1C,
  };
  KeyValueNode *p = [4C;
  [31mfor[m ([94mint[m i = [1C; i < [31msizeof[m(keys)/[31msizeof[m(keys[[1C]); i++) {
    p = add_key_value(p, keys[i], i);
  }
  [31mreturn[m p;
}

[91m/** Print out all the words in the first verse of Carroll's Jabberwocky
 *  paired with their index in the verse.
 */[m
[94mint[m main() {[49;177H2[18;12H[?25h[?25l[18;11H[K[49;177H1[18;11H[?25h[?25l[18;10H[K[49;177H0[18;10H[?25h[?25l[18;9H[K[49;176H9 [18;9H[?25h[?25l[18;8H[K[49;176H8[18;8H[?25h[?25l[18;7H[K[49;176H7[18;7H[?25h[?25l[18;6H[K[49;176H6[18;6H[?25h[?25l[18;5H[K[49;176H5[18;5H[?25h[?25l[49;174H3[19;5H[?25h[?25l[49;176H6[19;6H[?25h[?25l[49;176H7[19;7H[?25h[?25l[49;176H8[19;8H[?25h[?25l[49;176H9[19;9H[?25h[?25l[49;176H10[19;10H[?25h[?25l[49;177H1[19;11H[?25h[?25l[49;177H2[19;12H[?25h[?25l[49;177H3[19;13H[?25h[?25l[49;177H4[19;14H[?25h[?25l[49;177H5[19;15H[?25h[?25l[49;177H6[19;16H[?25h[?25l[49;177H7[19;17H[?25h[?25l[49;177H8[19;18H[?25h[?25l[49;177H9[19;19H[?25h[?25l[49;176H20[19;20H[?25h[?25l[49;177H1[19;21H[?25h[?25l[49;177H2[19;22H[?25h[?25l[49;177H3[19;23H[?25h[?25l[49;177H4[19;24H[?25h[?25l[49;177H5[19;25H[?25h[?25l[49;177H6[19;26H[?25h[?25l[49;177H7[19;27H[?25h[?25l;[19;27H[K[49;177H6[19;26H[?25h[?25l;[19;26H[K[49;177H5[19;25H[?25h[?25l;[19;25H[K[49;177H4[19;24H[?25h[?25l;[19;24H[K[49;177H3[19;23H[?25h[?25l;[19;23H[K[49;177H2[19;22H[?25h[?25l;[19;22H[K[49;177H1[19;21H[?25h[?25l;[19;21H[K[49;177H0[19;20H[?25h[?25l;[19;20H[K[49;176H19[19;19H[?25h[?25l;[19;19H[K[49;177H8[19;18H[?25h[?25l;[19;18H[K[49;177H7[19;17H[?25h[?25l;[19;17H[K[49;177H6[19;16H[?25h[?25l;[19;16H[K[49;177H5[19;15H[?25h[?25l;[19;15H[K[49;177H4[19;14H[?25h[?25l;[19;14H[K[49;177H3[19;13H[?25h[?25l;[19;13H[K[49;177H2[19;12H[?25h[?25l;[19;12H[K[49;177H1[19;11H[?25h[?25l;[19;11H[K[49;177H0[19;10H[?25h[?25l;[19;10H[K[49;176H9 [19;9H[?25h[?25l;[19;9H[K[49;176H8[19;8H[?25h[?25l;[19;8H[K[49;176H7[19;7H[?25h[?25l;[19;7H[K[49;176H6[19;6H[?25h[?25l;[19;6H[K[49;176H5[19;5H[?25h[?25l[49;176H6[19;6H[?25h[?25l[19;5H[K[49;176H5[19;5H[?25h[?25lf[49;176H6[19;6H[?25h[?25lr[49;176H7[19;7H[?25h[?25le[49;176H8[19;8H[?25h[?25le[49;176H9[19;9H[?25h[?25l([49;176H10[19;10H[?25h[?25l)[106m()[m[49;177H1[19;11H[?25h[?25l[49;177H0[19;10H[?25h[?25l[106mv[m)v[106m)[m[49;177H1[19;11H[?25h[?25l[106mo[m)o[106m)[m[49;177H2[19;12H[?25h[?25l[106mi[m)i[106m)[m[49;177H3[19;13H[?25h[?25l[94mvoi[m[94m[106md[m)[94md[m[106m)[m[49;177H4[19;14H[?25h[?25l[49;177H5[19;15H[?25h[?25l[19;14H[K[19;9H([49;177H4[19;14H[?25h[?25l[49;177H5[19;15H[?25h[?25l[49;177H4[19;14H[?25h[?25lvoi[19;13H[K[49;177H3[19;13H[?25h[?25l[19;12H[K[49;177H2[19;12H[?25h[?25l[19;11H[K[49;177H1[19;11H[?25h[?25l[19;10H[K[49;177H0[19;10H[?25h[?25l([49;177H1[19;11H[?25h[?25l)[106m()[m[49;177H2[19;12H[?25h[?25l[49;177H1[19;11H[?25h[?25l[106mv[m)v[106m)[m[49;177H2[19;12H[?25h[?25l[106mo[m)o[106m)[m[49;177H3[19;13H[?25h[?25l[106mi[m)i[106m)[m[49;177H4[19;14H[?25h[?25l[94mvoi[m[94m[106md[m)[94md[m[106m)[m[49;177H5[19;15H[?25h[?25l[106m [m) [106m)[m[49;177H6[19;16H[?25h[?25l[106m*[m)*[106m)[m[49;177H7[19;17H[?25h[?25l[106m [m) [106m)[m[49;177H8[19;18H[?25h[?25l[49;177H9[19;19H[?25h[?25l[19;10H([7C)[49;176H20[19;20H[?25h[?25lp[49;177H1[19;21H[?25h[?25l-[49;177H2[19;22H[?25h[?25l>[49;177H3[19;23H[?25h[?25l[49;177H4[19;24H[?25h[?25lk[49;177H5[19;25H[?25h[?25le[49;177H6[19;26H[?25h[?25ly[49;177H7[19;27H[?25h[?25l[49;174H2,5 [18;5H[?25h[?25l[49;174H1[17;5H[?25h[?25l[49;174H0,2[16;2H[?25h[?25l[49;173H49,27[15;27H[?25h[?25l[49;174H8[14;27H[?25h[?25l[49;174H7[13;27H[?25h[?25l[49;174H6[12;27H[?25h[?25l[11;1H[106m{[25;1H}[m[49;174H5,2 [11;2H[?25h[?25l{[25;1H}[49;174H4,27[10;27H[?25h[?25l[49;174H3,12[9;12H[?25h[?25l[49;174H2,27[8;27H[?25h[?25l[49;174H1,1 [7;1H[?25h[?25l[49;174H0,2[6;2H[?25h[?25l[49;173H39,13[5;13H[?25h[?25l[49;174H8,1 [4;1H[?25h[?25l[49;174H7,24[3;24H[?25h[?25l[49;174H6,17[2;17H[?25h[?25l[49;174H5,15[1;15H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//initialize fields of *kv.[m[49;173H[K[49;173H34,27[9C78%[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H33,1[10C76%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3Hstrcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s[m[49;173H[K[49;173H32,27[9C73%[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H}[49;173H[K[49;173H31,4[10C71%[1;4H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hexit([95m1[m);[49;173H[K[49;173H30,13[9C69%[1;13H[?25h[?25l[1;48r[1;1H[L[1;49r[1;5Hfprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));[49;173H[K[49;173H29,27[9C66%[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m[49;173H[K[49;173H28,27[9C64%[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H27,1[10C61%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[94mchar[m *s = malloc(strlen(k) + [95m1[m);[49;173H[K[49;173H26,27[9C59%[1;26H[106m([mk[106m)[?25h[?25l[1;48r[m[1;1H[L[1;49r[1;3H[91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m[49;173H[K[49;173H25,27[9C57%[2;26H(k)[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3H[91m//allocate storage for string pointed to by k[m[49;173H[K[49;173H24,27[9C54%[1;27H[?25h[?25l[1;48r[1;1H[L[1;49r[49;173H[K[49;173H23,1[10C52%[1;1H[?25h[?25l[1;48r[1;1H[L[1;49r[1;3HKeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));[49;173H[K[49;173H22,27[9C50%[1;27H[?25h[?25l[49;174H3,1 [2;1H[?25h[?25l[49;174H4,27[3;27H[?25h[?25l[49;174H5[4;27H[?25h[?25l[5;26H[106m([mk[106m)[m[49;174H6[5;27H[?25h[?25l(k)[49;174H7,1 [6;1H[?25h[?25l[49;174H8,27[7;27H[?25h[?25l[49;174H9[8;27H[?25h[?25l[49;173H30,13[9;13H[?25h[?25l[7;32H[106m{[10;3H}[m[49;174H1,4 [10;4H[?25h[?25l[7;32H{[10;3H}[49;174H2,27[11;27H[?25h[?25l[49;174H3,1 [12;1H[?25h[?25l[49;174H4,27[13;27H[?25h[?25l[49;174H5,15[14;15H[?25h[?25l[49;174H6,17[15;17H[?25h[?25l[49;174H7,24[16;24H[?25h[?25l[49;174H8,1 [17;1H[?25h[?25l[49;174H9,13[18;13H[?25h[?25l[49;173H40,2 [19;2H[?25h[?25l[49;174H1,1[20;1H[?25h[?25l[49;174H2,27[21;27H[?25h[?25l[49;174H3,12[22;12H[?25h[?25l[49;174H4,27[23;27H[?25h[?25l
[106m{[38;1H}[m[49;174H5,2 [24;2H[?25h[?25l{[38;1H}[49;174H6,27[25;27H[?25h[?25l[49;174H7[26;27H[?25h[?25l[49;174H8[27;27H[?25h[?25l[49;174H9[28;27H[?25h[?25l[49;173H50,2 [29;2H[?25h[?25l[49;174H1,5[30;5H[?25h[?25l[49;174H2[31;5H[?25h[?25l[49;174H3,27[32;27H[?25h[?25l)[32;9H[106m([17C)[m[49;177H8[32;28H[?25h[?25l;[32;9H([17C)[49;177H9[32;29H[?25h[?25l[33;48r[33;1H[L[1;49r[49;173H[K[49;173H54,1[10C48%[33;1H[?25h[?25l[49;174H3[32;1H[?25h[?25l[49;174H2[31;1H[?25h[?25l[49;174H3[32;1H[?25h[?25l[49;176H2[32;2H[?25h[?25l[49;176H3[32;3H[?25h[?25l[49;174H4,1[33;1H[?25h[?25l[49;174H3,3[32;3H[?25h[?25l[49;176H4[32;4H[?25h[?25l[49;176H5[32;5H[?25h[?25l[49;176H6[32;6H[?25h[?25l[49;176H7[32;7H[?25h[?25l[49;176H8[32;8H[?25h[?25le[106m([17C)[m[49;176H9[32;9H[?25h[?25l([106m([7C)[m[8C)[49;176H10[32;10H[?25h[?25l[49;177H1[32;11H[?25h[?25l([7C)[49;177H2[32;12H[?25h[?25l[49;177H3[32;13H[?25h[?25l[49;177H4[32;14H[?25h[?25l[49;177H5[32;15H[?25h[?25l[49;177H6[32;16H[?25h[?25l[49;177H7[32;17H[?25h[?25l[32;10H[106m([7C)[m[49;177H8[32;18H[?25h[?25l[49;177H9[32;19H[?25h[?25l[32;10H([7C)[49;176H20[32;20H[?25h[?25l[49;177H1[32;21H[?25h[?25lr-> key);[49;177H2[32;22H[?25h[?25le-> key);[49;177H3[32;23H[?25h[?25lv-> key);[49;177H4[32;24H[?25h[?25l[49;174H4,1 [33;1H[?25h[?25l[49;176H2[33;2H[?25h[?25l[49;176H3[33;3H[?25h[?25l[49;176H4[33;4H[?25h[?25l[49;176H5[33;5H[?25h[?25lf[49;176H6[33;6H[?25h[?25lr[49;176H7[33;7H[?25h[?25le[49;176H8[33;8H[?25h[?25le[49;176H9[33;9H[?25h[?25l[97m[101m)[m[49;176H10[33;10H[?25h[?25l_[49;177H1[33;11H[?25h[?25l[33;10H[K[49;177H0[33;10H[?25h[?25l[33;9H[K[49;176H9 [33;9H[?25h[?25l([49;176H10[33;10H[?25h[?25l)[106m()[m[49;177H1[33;11H[?25h[?25l[49;177H0[33;10H[?25h[?25l[106mp[m)p[106m)[m[49;177H1[33;11H[?25h[?25l[106mr[m)r[106m)[m[49;177H2[33;12H[?25h[?25l[106me[m)e[106m)[m[49;177H3[33;13H[?25h[?25l[106mv[m)v[106m)[m[49;177H4[33;14H[?25h[?25l[49;177H5[33;15H[?25h[?25l;[33;9H(prev)[49;177H6[33;16H[?25h[?25l[34;48r[34;1H[L[1;49r[49;173H[K[49;173H55,1[10C47%[34;1H[?25h[?25l[49;176H2[34;2H[?25h[?25l[49;176H3[34;3H[?25h[?25l[49;176H4[34;4H[?25h[?25l[49;176H5[34;5H[?25h[?25lp[49;176H6[34;6H[?25h[?25lr[49;176H7[34;7H[?25h[?25le[49;176H8[34;8H[?25h[?25lv[49;176H9[34;9H[?25h[?25l[49;176H10[34;10H[?25h[?25l=[49;177H1[34;11H[?25h[?25l[49;177H2[34;12H[?25h[?25lp[49;177H3[34;13H[?25h[?25l[49;177H4[34;14H[?25h[?25l[49;174H6[35;14H[?25h[?25l[49;174H7[36;14H[?25h[?25l[37;9H[106m([mcurr[106m)[m[49;174H8[37;14H[?25h[?25l(curr)[49;174H9,11[38;11H[?25h[?25l[37;9H[106m([mcurr[106m)[m[49;174H8,14[37;14H[?25h[?25l[49;177H5[37;15H[?25h[?25l(curr)[49;177H6[37;16H[?25h[?25l[49;4H[1mREPLACE --[m[49;173H[K[49;173H58,16[9C47%[37;16H[?25h[?25l[49;4H[1mINSERTE -[m[49;13H[K[49;173H58,16[9C47%[37;16H[?25h[?25l[49;4H[1mREPLACE --[m[49;173H[K[49;173H58,16[9C47%[37;16H[?25h[?25l[49;4H[1mINSERTE -[m[49;13H[K[49;173H58,16[9C47%[37;16H[?25h[?25l[37;15H[K[37;9H[106m([mcurr[106m)[m[49;177H5[37;15H[?25h[?25l[37;14H[K[37;9H([49;177H4[37;14H[?25h[?25l[37;13H[K[49;177H3[37;13H[?25h[?25l[37;12H[K[49;177H2[37;12H[?25h[?25l[37;11H[K[49;177H1[37;11H[?25h[?25l[37;10H[K[49;177H0[37;10H[?25h[?25l[37;9H[K[49;176H9 [37;9H[?25h[?25l[37;8H[K[49;176H8[37;8H[?25h[?25l[37;7H[K[49;176H7[37;7H[?25h[?25l[37;6H[K[49;176H6[37;6H[?25h[?25l[37;5H[K[49;176H5[37;5H[?25h[?25l[49;176H4[37;4H[?25h[?25l[49;176H3[37;3H[?25h[?25l[49;176H2[37;2H[?25h[?25l[49;176H1[37;1H[?25h[?25l[36;48r[48;1H
[1;49r[36;5Hp = p->succ;[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H57,17[9C48%[36;17H[?25h[?25l[36;16H[K[49;177H6[36;16H[?25h[?25l[36;15H[K[49;177H5[36;15H[?25h[?25l[36;14H[K[49;177H4[36;14H[?25h[?25l[36;13H[K[49;177H3[36;13H[?25h[?25l[36;12H[K[49;177H2[36;12H[?25h[?25l[36;11H[K[49;177H1[36;11H[?25h[?25l[36;10H[K[49;177H0[36;10H[?25h[?25l[36;9H[K[49;176H9 [36;9H[?25h[?25l[49;176H8[36;8H[?25h[?25l[36;7H[K[49;176H7[36;7H[?25h[?25l[49;176H6[36;6H[?25h[?25l[36;5H[K[49;176H5[36;5H[?25h[?25l[49;176H4[36;4H[?25h[?25l[49;176H3[36;3H[?25h[?25l[49;176H2[36;2H[?25h[?25l[49;176H1[36;1H[?25h[?25l[35;48r[48;1H
[1;49r[35;5Hfree(([94mvoid[m *)p->key);[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H56,26[9C50%[35;26H[?25h[?25l[35;25H[K[35;9H[106m([14C)[m[49;177H5[35;25H[?25h[?25l[35;24H[K[35;9H([49;177H4[35;24H[?25h[?25l[35;23H[K[49;177H3[35;23H[?25h[?25l[35;22H[K[49;177H2[35;22H[?25h[?25l[35;21H[K[49;177H1[35;21H[?25h[?25l[35;20H[K[49;177H0[35;20H[?25h[?25l[35;19H[K[49;176H19[35;19H[?25h[?25l[35;18H[K[35;10H[106m([6C)[m[49;177H8[35;18H[?25h[?25l[35;17H[K[35;10H([49;177H7[35;17H[?25h[?25l[35;16H[K[49;177H6[35;16H[?25h[?25l[49;177H5[35;15H[?25h[?25lvoi[35;14H[K[49;177H4[35;14H[?25h[?25l[35;13H[K[49;177H3[35;13H[?25h[?25l[35;12H[K[49;177H2[35;12H[?25h[?25l[35;11H[K[49;177H1[35;11H[?25h[?25l[35;10H[K[49;177H0[35;10H[?25h[?25l[35;9H[K[49;176H9 [35;9H[?25h[?25l[35;8H[K[49;176H8[35;8H[?25h[?25l[35;7H[K[49;176H7[35;7H[?25h[?25l[35;6H[K[49;176H6[35;6H[?25h[?25l[35;5H[K[49;176H5[35;5H[?25h[?25l[49;176H4[35;4H[?25h[?25l[49;176H3[35;3H[?25h[?25l[49;176H2[35;2H[?25h[?25l[49;176H1[35;1H[?25h[?25l[34;48r[48;1H
[1;49r[34;5Hprev = p[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H55,14[9C51%[34;14H[?25h[?25l[49;177H3[34;13H[?25h[?25l;[49;177H4[34;14H[?25h[?25l[49;174H6,11[35;11H[?25h[?25l[35;10H[K[35;7H[106m([mp[106m)[m[49;177H0[35;10H[?25h[?25l[35;9H[K[35;7H([49;176H9 [35;9H[?25h[?25l[35;8H[K[49;176H8[35;8H[?25h[?25l[35;7H[K[49;176H7[35;7H[?25h[?25l[35;6H[K[49;176H6[35;6H[?25h[?25l[35;5H[K[49;176H5[35;5H[?25h[?25l[35;4H[K[49;176H4[35;4H[?25h[?25l[35;3H[K[49;176H3[35;3H[?25h[?25l[49;176H2[35;2H[?25h[?25l[49;176H1[35;1H[?25h[?25l[34;48r[48;1H
[1;49r[34;5Hprev = p;[48;3H};[49;173H[K[49;173H55,14[9C52%[34;14H[?25h[?25l[28;62H[106m{[35;3H}[m[49;174H6,4 [35;4H[?25h[49;1H[K[35;3H[?25l[49;173H56,3[10C52%[35;3H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 88L, 2681C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[2P./bug-program vi bug-program.cmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
[01m[Kbug-program.c:[m[K In function â€˜[01m[Kfree_key_values[m[Kâ€™:
[01m[Kbug-program.c:48:24:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kkeyvalues[m[Kâ€™ undeclared (first use in this function); did you mean â€˜[01m[KkeyValues[m[Kâ€™?
   KeyValueNode *prev = [01;31m[Kkeyvalues[m[K
                        [01;31m[K^~~~~~~~~[m[K
                        [32m[KkeyValues[m[K
[01m[Kbug-program.c:48:24:[m[K [01;36m[Knote: [m[Keach undeclared identifier is reported only once for each function it appears in
[01m[Kbug-program.c:49:3:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K,[m[Kâ€™ or â€˜[01m[K;[m[Kâ€™ before â€˜[01m[Kfor[m[Kâ€™
   [01;31m[Kfor[m[K (KeyValueNode *p = prev->succ; p != NULL; p = p->succ) {
   [01;31m[K^~~[m[K
[01m[Kbug-program.c:49:38:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kp[m[Kâ€™ undeclared (first use in this function)
   for (KeyValueNode *p = prev->succ; [01;31m[Kp[m[K != NULL; p = p->succ) {
                                      [01;31m[K^[m[K
[01m[Kbug-program.c:49:60:[m[K [01;31m[Kerror: [m[Kexpected â€˜[01m[K;[m[Kâ€™ before â€˜[01m[K)[m[Kâ€™ token
   for (KeyValueNode *p = prev->succ; p != NULL; p = p->succ[01;31m[K)[m[K {
                                                            [01;31m[K^[m[K
                                                            [32m[K;[m[K
[01m[Kbug-program.c:49:60:[m[K [01;31m[Kerror: [m[Kexpected statement before â€˜[01m[K)[m[Kâ€™ token
make: *** [<builtin>: bug-program] Error 1
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c[2P./bug-program vi bug-program.c\
> 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 88L, 2681C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyvalues[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H50,1[11C5%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[49;174H0[47;1H[?25h[?25l[49;173H49[46;1H[?25h[?25l[49;174H8[45;1H[?25h[?25l[49;176H2[45;2H[?25h[?25l[49;176H3[45;3H[?25h[?25l[49;176H4[45;4H[?25h[?25l[49;176H5[45;5H[?25h[?25l[49;176H6[45;6H[?25h[?25l[49;176H7[45;7H[?25h[?25l[49;176H8[45;8H[?25h[?25l[49;176H9[45;9H[?25h[?25l[49;176H10[45;10H[?25h[?25l[49;177H1[45;11H[?25h[?25l[49;177H2[45;12H[?25h[?25l[49;177H3[45;13H[?25h[?25l[49;177H4[45;14H[?25h[?25l[49;177H5[45;15H[?25h[?25l[49;177H6[45;16H[?25h[?25l[49;177H7[45;17H[?25h[?25l[49;177H8[45;18H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H48,18[10C7%[45;18H[?25h[?25l[49;177H9[45;19H[?25h[?25l[49;176H20[45;20H[?25h[?25l[49;177H1[45;21H[?25h[?25l[49;177H2[45;22H[?25h[?25l[49;177H3[45;23H[?25h[?25l[49;177H4[45;24H[?25h[?25l[49;177H5[45;25H[?25h[?25l[49;177H6[45;26H[?25h[?25l[49;177H7[45;27H[?25h[?25l[49;177H8[45;28H[?25h[?25lalues[45;32H[K[49;177H7]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[45;27H[?25h[?25lValues[49;177H8[45;28H[?25h[?25l[49;174H9[46;28H[?25h[?25l[49;173H50,2 [47;2H[?25h[?25l[49;173H49,28[46;28H[?25h[?25l[49;174H8[45;28H[?25h[?25l[49;177H9[45;29H[?25h[?25l[49;176H30[45;30H[?25h[?25l[49;177H1[45;31H[?25h[?25l[49;177H2[45;32H[?25h[?25l[49;177H3[45;33H[?25h[?25l;[49;177H4[45;34H[?25h[49;1H[K[45;33H[?25l[49;173H48,33[10C7%[45;33H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 88L, 2682C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c\make -f ../Makefile[3Pvi bug-program.cmake -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[2Pvi bug-program.c\make -f ../Makefile[3Pvi bug-program.c[2P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Going to free Valuesdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program make -f ../Makefile[2Pvi bug-program.c\
> 
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 88L, 2682C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyValues;[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H50,1[11C5%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H52,1[10C10%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m * ) prev-> key);[49;173H[K[49;173H53,1[10C12%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(prev);[49;173H[K[49;173H54,1[10C15%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprev = p;[49;173H[K[49;173H55,1[10C17%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H56,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;1H[106m{[48;1H}[m[49;173H[K[49;173H57,1[10C22%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;1H{[47;1H}[49;173H[K[49;173H58,0-1[8C25%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H59,1[10C27%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H60,1[10C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H61,1[10C32%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H62,1[10C35%[48;1H[?25h[?25l[49;174H1[47;1H[?25h[?25l[49;174H0[46;1H[?25h[?25l[49;173H59[45;1H[?25h[?25l[49;174H8,0-1[44;1H[?25h[?25l[31;1H[106m{[43;1H}[m[49;174H7,1  [43;1H[?25h[?25l[31;1H{[43;1H}[49;174H6[42;1H[?25h[?25l[49;174H5[41;1H[?25h[?25l[49;174H4[40;1H[?25h[?25l[49;174H3[39;1H[?25h[?25l[49;174H2[38;1H[?25h[?25l[49;174H3[39;1H[?25h[?25l[49;174H4[40;1H[?25h[?25l[49;174H5[41;1H[?25h[?25l[49;174H6[42;1H[?25h[?25l[31;1H[106m{[43;1H}[m[49;174H7[43;1H[?25h[?25l[31;1H{[43;1H}[49;174H6[42;1H[?25h[?25l[49;176H2[42;2H[?25h[?25l[35;62H[106m{[42;3H}[m[49;176H3[42;3H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H56,3[10C35%[42;3H[?25h[?25l[49;176H4[42;4H[?25h[?25l[43;48r[43;1H[L[1;49r[49;173H[K[49;173H57,1[10C34%[35;62H{[42;3H}]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c
[?25h[?25l[49;176H2[43;2H[?25h[?25l[49;176H3[43;3H[?25h[?25lf[49;176H4[43;4H[?25h[?25lr[49;176H5[43;5H[?25h[?25le[49;176H6[43;6H[?25h[?25le[49;176H7[43;7H[?25h[?25l[97m[101m)[m[49;176H8[43;8H[?25h[?25l_[49;176H9[43;9H[?25h[?25l[43;8H[K[49;176H8[43;8H[?25h[?25l[43;7H[K[49;176H7[43;7H[?25h[?25l([49;176H8[43;8H[?25h[?25l)[106m()[m[49;176H9[43;9H[?25h[?25l[49;176H8[43;8H[?25h[?25l[106mp[m)p[106m)[m[49;176H9[43;9H[?25h[?25l)[43;9H[K[43;8H[106m)[m[49;176H8[43;8H[?25h[?25l[106m*[m)*[106m)[m[49;176H9[43;9H[?25h[?25l)[43;9H[K[43;8H[106m)[m[49;176H8[43;8H[?25h[?25l[106m([m)([1C[106m)[m[49;176H9[43;9H[?25h[?25l[1C)[106m([m()[106m)[m[49;176H10[43;10H[?25h[?25l([106m()[m)[49;176H9 [43;9H[?25h[?25l[106mv[m))v[106m)[m[49;176H10[43;10H[?25h[?25l[106mo[m))o[106m)[m[49;177H1[43;11H[?25h[?25l[106mi[m))i[106m)[m[49;177H2[43;12H[?25h[?25l[94mvoi[m[94m[106md[m))[94md[m[106m)[m[49;177H3[43;13H[?25h[?25l[106m [m)) [106m)[m[49;177H4[43;14H[?25h[?25l[106m*[m))*[106m)[m[49;177H5[43;15H[?25h[?25l[43;7H[106m([m([6C)[106m)[m[49;177H6[43;16H[?25h[?25l[106m [m) [106m)[m[49;177H7[43;17H[?25h[?25l[106mp[m)p[106m)[m[49;177H8[43;18H[?25h[?25l[106m [m) [106m)[m[49;177H9[43;19H[?25h[?25l[106m-[m)-[106m)[m[49;176H20[43;20H[?25h[?25l)[43;20H[K[43;19H[106m)[m[49;176H19[43;19H[?25h[?25l)[43;19H[K[43;18H[106m)[m[49;177H8[43;18H[?25h[?25l[106m-[m)-[106m)[m[49;177H9[43;19H[?25h[?25l[106m>[m)>[106m)[m[49;176H20[43;20H[?25h[?25l[106mk[m)k[106m)[m[49;177H1[43;21H[?25h[?25l[106me[m)e[106m)[m[49;177H2[43;22H[?25h[?25l[106my[m)y[106m)[m[49;177H3[43;23H[?25h[?25l[49;177H4[43;24H[?25h[?25l;[43;7H([15C)[49;177H5[43;25H[?25h[?25l[44;48r[44;1H[L[1;49r[49;173H[K[49;173H58,1[10C33%[44;1H[?25h[?25l[49;176H2[44;2H[?25h[?25l[49;176H3[44;3H[?25h[?25lf[49;176H4[44;4H[?25h[?25lr[49;176H5[44;5H[?25h[?25le[49;176H6[44;6H[?25h[?25le[49;176H7[44;7H[?25h[?25l([49;176H8[44;8H[?25h[?25l)[106m()[m[49;176H9[44;9H[?25h[?25l[49;176H8[44;8H[?25h[?25l[106mp[m)p[106m)[m[49;176H9[44;9H[?25h[?25l[49;176H10[44;10H[?25h[?25l;(p)[49;177H1[44;11H[?25h[49;1H[K[44;10H[?25l[49;173H58,10[9C33%[44;10H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 90L, 2718C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c\[3P./bug-program make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
^[[A^[[D        
^[[A^Cmake: *** [<builtin>: bug-program] Interrupt

dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[2Pvi bug-program.c\make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
[01m[Kbug-program.c:[m[K In function â€˜[01m[Kfree_key_values[m[Kâ€™:
[01m[Kbug-program.c:57:17:[m[K [01;31m[Kerror: [m[Kâ€˜[01m[Kp[m[Kâ€™ undeclared (first use in this function)
   free((void *) [01;31m[Kp[m[K->key);
                 [01;31m[K^[m[K
[01m[Kbug-program.c:57:17:[m[K [01;36m[Knote: [m[Keach undeclared identifier is reported only once for each function it appears in
make: *** [<builtin>: bug-program] Error 1
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[2Pvi bug-program.c\[3P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Going to free Valuesdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program make -f ../Makefile[2Pvi bug-program.c\
> 
^C
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c\[K
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 90L, 2718C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyValues;[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H50,1[11C4%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H52,1[11C9%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m * ) prev-> key);[49;173H[K[49;173H53,1[10C11%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(prev);[49;173H[K[49;173H54,1[10C14%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprev = p;[49;173H[K[49;173H55,1[10C16%[48;1H[?25h[?25l[49;174H4[47;1H[?25h[?25l[49;174H3[46;1H[?25h[?25l[49;174H2[45;1H[?25h[?25l[49;174H1[44;1H[?25h[?25l[49;174H0[43;1H[?25h[?25l[49;173H49[42;1H[?25h[?25l[49;174H8[41;1H[?25h[?25l[49;176H2[41;2H[?25h[?25l[49;176H3[41;3H[?25h[?25l[49;176H4[41;4H[?25h[?25l[49;176H5[41;5H[?25h[?25l[49;176H6[41;6H[?25h[?25l[49;176H7[41;7H[?25h[?25l[49;176H8[41;8H[?25h[?25l[49;176H9[41;9H[?25h[?25l[49;176H10[41;10H[?25h[?25l[49;177H1[41;11H[?25h[?25l[49;177H2[41;12H[?25h[?25l[49;177H3[41;13H[?25h[?25l[49;177H4[41;14H[?25h[?25l[49;177H5[41;15H[?25h[?25l[49;177H6[41;16H[?25h[?25l[49;177H7[41;17H[?25h[?25l[49;177H8[41;18H[?25h[?25l[49;177H9[41;19H[?25h[?25l[49;176H20[41;20H[?25h[?25l[49;177H1[41;21H[?25h[?25l[49;177H2[41;22H[?25h[?25l[49;177H3[41;23H[?25h[?25l[49;177H4[41;24H[?25h[?25l[49;177H5[41;25H[?25h[?25l[49;177H6[41;26H[?25h[?25l[49;177H7[41;27H[?25h[?25l[49;177H8[41;28H[?25h[?25l[49;177H9[41;29H[?25h[?25l[49;176H30[41;30H[?25h[?25l[49;177H1[41;31H[?25h[?25l[49;177H2[41;32H[?25h[?25l[49;177H3[41;33H[?25h[?25l[49;1H[1m-- INSERT --[m[49;173H[K[49;173H48,33[9C16%[41;33H[?25h[?25l[49;177H4[41;34H[?25h[?25l[42;48r[42;1H[L[1;49r[49;173H[K[49;173H49,1[10C16%]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[42;1H[?25h[?25l[49;176H2[42;2H[?25h[?25l[49;176H3[42;3H[?25h[?25lK[49;176H4[42;4H[?25h[?25le[49;176H5[42;5H[?25h[?25ly[49;176H6[42;6H[?25h[?25lV[49;176H7[42;7H[?25h[?25la[49;176H8[42;8H[?25h[?25ll[49;176H9[42;9H[?25h[?25ly[49;176H10[42;10H[?25h[?25le[49;177H1[42;11H[?25h[?25l[42;10H[K[49;177H0[42;10H[?25h[?25l[42;9H[K[49;176H9 [42;9H[?25h[?25lu[49;176H10[42;10H[?25h[?25ly[49;177H1[42;11H[?25h[?25le[49;177H2[42;12H[?25h[?25l[42;11H[K[49;177H1[42;11H[?25h[?25l[42;10H[K[49;177H0[42;10H[?25h[?25le[49;177H1[42;11H[?25h[?25lN[49;177H2[42;12H[?25h[?25lo[49;177H3[42;13H[?25h[?25ld[49;177H4[42;14H[?25h[?25le[49;177H5[42;15H[?25h[?25l[49;177H6[42;16H[?25h[?25l*[49;177H7[42;17H[?25h[?25lp[49;177H8[42;18H[?25h[?25l;[49;177H9[42;19H[?25h[?25l[49;173H50[43;19H[?25h[?25l[49;176H20[43;20H[?25h[?25l[49;177H1[43;21H[?25h[?25l[49;177H2[43;22H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;62H[K[49;177H1[43;21H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;61H[K[49;177H0[43;20H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;60H[K[49;176H19[43;19H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;59H[K[49;177H8[43;18H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;58H[K[49;177H7[43;17H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;57H[K[49;177H6[43;16H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;56H[K[49;177H5[43;15H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;55H[K[49;177H4[43;14H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;54H[K[49;177H3[43;13H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;53H[K[49;177H2[43;12H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;52H[K[49;177H1[43;11H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;51H[K[49;177H0[43;10H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;50H[K[49;176H9 [43;9H[?25h[?25lp = prev->succ; p != [95mNUL[m[1C; p = p->succ) {[43;49H[K[43;7H[106m([38C)[m[49;176H8[43;8H[?25h[49;1H[K[43;7H[?25l[49;173H50,7[10C16%[43;7H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 91L, 2723C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c\[3P./bug-program make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c\[3P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Segmentation fault
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ ./bug-program make -f ../Makefile[5P./bug-program [K./bug-program make -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 91L, 2723C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyValues;[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p;[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H50,1[11C4%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C6%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H52,1[11C9%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H53,1[10C11%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m * ) prev-> key);[49;173H[K[49;173H54,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(prev);[49;173H[K[49;173H55,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprev = p;[49;173H[K[49;173H56,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H57,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(([94mvoid[m *) p->key);[49;173H[K[49;173H58,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(p);[49;173H[K[49;173H59,1[10C25%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[33;1H[106m{[48;1H}[m[49;173H[K[49;173H60,1[10C27%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[32;1H{[47;1H}[49;173H[K[49;173H61,0-1[8C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H62,1[10C32%[48;1H[?25h[?25l
[1m-- INSERT --[m[49;173H[K[49;173H62,1[10C32%[48;1H[?25h[?25l[49;174H1[47;1H[?25h[?25l[31;1H[106m{[46;1H}[m[49;174H0[46;1H[?25h[?25l[31;1H{[46;1H}[49;173H59[45;1H[?25h[?25l[49;174H8[44;1H[?25h[?25l[49;176H2[44;2H[?25h[?25l[49;176H3[44;3H[?25h[?25l[49;176H4[44;4H[?25h[?25l[49;176H5[44;5H[?25h[?25l[49;176H6[44;6H[?25h[?25le[106m([15C)[m[49;176H7[44;7H[?25h[?25l([106m([6C)[m[7C)[49;176H8[44;8H[?25h[?25l[49;176H9[44;9H[?25h[?25l([6C)[49;176H10[44;10H[?25h[?25l[49;177H1[44;11H[?25h[?25l[49;177H2[44;12H[?25h[?25l[49;177H3[44;13H[?25h[?25l[49;177H4[44;14H[?25h[?25l[106m([6C)[m[49;177H5[44;15H[?25h[?25l[49;177H6[44;16H[?25h[?25l[44;8H([6C)[49;177H7[44;17H[?25h[?25l[49;177H8[44;18H[?25h[?25lr->key);[49;177H9]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[44;19H[?25h[?25le->key);[49;176H20[44;20H[?25h[?25lv->key);[49;177H1[44;21H[?25h[?25l[49;174H9,1[45;11H[?25h[?25l[106m([mp[106m)[m[49;177H0[45;10H[?25h[?25lr;(p)[49;177H1[45;11H[?25h[?25l;[45;11H[K[45;7H[106m([mp[106m)[m[49;177H0[45;10H[?25h[?25l[49;176H9 [45;9H[?25h[?25l[106mr[m);r[106m)[m[49;176H10[45;10H[?25h[?25l[106me[m);e[106m)[m[49;177H1[45;11H[?25h[?25l[106mv[m);v[106m)[m[49;177H2[45;12H[?25h[49;1H[K[45;11H[?25l(prev)[49;173H59,11[9C32%[45;11H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 91L, 2729C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[2P./bug-program make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c[2P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
Going to free Valuesdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi [11@./bug-program[Cmake -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 91L, 2729C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyValues;[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p;[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H50,1[11C4%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C6%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H52,1[11C9%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H53,1[10C11%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m * ) prev-> key);[49;173H[K[49;173H54,1[10C13%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(prev);[49;173H[K[49;173H55,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprev = p;[49;173H[K[49;173H56,1[10C18%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H57,1[10C20%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(([94mvoid[m *) prev->key);[49;173H[K[49;173H58,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(prev);[49;173H[K[49;173H59,1[10C25%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[33;1H[106m{[48;1H}[m[49;173H[K[49;173H60,1[10C27%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[32;1H{[47;1H}[49;173H[K[49;173H61,0-1[8C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H62,1[10C32%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H63,1[10C34%[48;1H[?25h[?25l[49;174H2[47;1H[?25h[?25l[49;174H1,0-1[46;1H[?25h[?25l[30;1H[106m{[45;1H}[m[49;174H0,1  [45;1H[?25h[?25l[30;1H{[45;1H}[49;173H59[44;1H[?25h[?25l[30;1H[106m{[45;1H}[m[49;173H60[45;1H[?25h[?25l[30;1H{[45;1H}[49;174H1,0-1[46;1H[?25h[?25l[49;174H2,1  [47;1H[?25h[?25l[49;174H3[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H64,1[10C37%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H65,1[10C39%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H66,1[10C41%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H67,1[10C44%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H68,1[10C46%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H69,1[10C48%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H70,1[10C51%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H71,1[10C53%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H72,1[10C55%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H73,1[10C58%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H74,1[10C60%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H75,1[10C62%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H76,1[10C65%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H77,1[10C67%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H78,1[10C69%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H79,0-1[8C72%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H80,1[10C74%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H81,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H82,1[10C79%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H83,1[10C81%[48;1H[?25h[?25l[49;174H2[47;1H[?25h[?25l[49;174H1[46;1H[?25h[?25l[49;174H2[47;1H[?25h[?25l[49;174H3[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *keyValues = make_key_values();[49;173H[K[49;173H84,1[10C83%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (KeyValueNode *p = keyValues; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H85,1[10C86%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprintf([95m"%s: %d\n"[m, p->key, p->value);[49;173H[K[49;173H86,1[10C88%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H87,1[10C90%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hprintf([95m"Going to free Values"[m);[49;173H[K[49;173H88,1[10C93%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree_key_values(keyValues);[49;173H[K[49;173H89,1[10C95%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m [95m0[m;[49;173H[K[49;173H90,1[10C97%[48;1H[?25h[?25l[49;173H89[47;1H[?25h[?25l[49;174H8[46;1H[?25h[?25l


[1m-- INSERT --[m[49;173H[K[49;173H88,1[10C97%[46;1H[?25h[?25l[49;176H2[46;2H[?25h[?25l[49;176H3[46;3H[?25h[?25l[49;176H4[46;4H[?25h[?25l[49;176H5[46;5H[?25h[?25l[49;176H6[46;6H[?25h[?25l[49;176H7[46;7H[?25h[?25l[49;176H8[46;8H[?25h[?25lf[106m([22C)[m[49;176H9[46;9H[?25h[?25l[49;176H10[46;10H[?25h[?25l([22C)[49;177H1[46;11H[?25h[?25l[49;177H2[46;12H[?25h[?25l[49;177H3[46;13H[?25h[?25l[49;177H4[46;14H[?25h[?25l[49;177H5[46;15H[?25h[?25l[49;177H6[46;16H[?25h[?25l[49;177H7[46;17H[?25h[?25l[49;177H8[46;18H[?25h[?25l[49;177H9[46;19H[?25h[?25l[49;176H20[46;20H[?25h[?25l[49;177H1[46;21H[?25h[?25l[49;177H2[46;22H[?25h[?25l[49;177H3[46;23H[?25h[?25l[49;177H4[46;24H[?25h[?25l[49;177H5[46;25H[?25h[?25l[49;177H6[46;26H[?25h[?25l[49;177H7[46;27H[?25h[?25l[49;177H8[46;28H[?25h[?25l[49;177H9[46;29H[?25h[?25l[49;176H30[46;30H[?25h[?25l[49;177H1[46;31H[?25h[?25l[46;9H[106m([22C)[m[49;177H2[46;32H[?25h[?25l[49;177H3[46;33H[?25h[?25l[46;9H([22C)[49;177H4[46;34H[?25h[?25l[46;33H[K[46;9H[106m([22C)[m[49;177H3]2;bug-program.c + (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[46;33H[?25h[?25l[46;32H[K[46;9H([49;177H2[46;32H[?25h[?25l[46;31H[K[47;1H[95m  free_key_values(keyValues);
  return 0;[m[49;177H1[46;31H[?25h[?25l[46;30H[K[49;177H0[46;30H[?25h[?25l[46;29H[K[49;176H29[46;29H[?25h[?25l[46;28H[K[49;177H8[46;28H[?25h[?25l[46;27H[K[49;177H7[46;27H[?25h[?25l[46;26H[K[49;177H6[46;26H[?25h[?25l[46;25H[K[49;177H5[46;25H[?25h[?25l[46;24H[K[49;177H4[46;24H[?25h[?25l[46;23H[K[49;177H3[46;23H[?25h[?25l[46;22H[K[49;177H2[46;22H[?25h[?25l[46;21H[K[49;177H1[46;21H[?25h[?25l[46;20H[K[49;177H0[46;20H[?25h[?25l[46;19H[K[49;176H19[46;19H[?25h[?25l[46;18H[K[49;177H8[46;18H[?25h[?25l[46;17H[K[49;177H7[46;17H[?25h[?25l[46;16H[K[49;177H6[46;16H[?25h[?25l[46;15H[K[49;177H5[46;15H[?25h[?25l[46;14H[K[49;177H4[46;14H[?25h[?25l[46;13H[K[49;177H3[46;13H[?25h[?25l[46;12H[K[49;177H2[46;12H[?25h[?25l[46;11H[K[49;177H1[46;11H[?25h[?25l[46;10H[K[47;1H  free_key_values(keyValues);
  [31mreturn[m [1C;[49;177H0[46;10H[?25h[?25l[46;9H[K[49;176H9 [46;9H[?25h[?25l[46;8H[K[49;176H8[46;8H[?25h[?25l[46;7H[K[49;176H7[46;7H[?25h[?25l[46;6H[K[49;176H6[46;6H[?25h[?25l[46;5H[K[49;176H5[46;5H[?25h[?25l[46;4H[K[49;176H4[46;4H[?25h[?25l[46;3H[K[49;176H3[46;3H[?25h[?25l[49;176H2[46;2H[?25h[?25l[49;176H1[46;1H[?25h[?25l[45;48r[48;1H
[1;49r[45;3H}


}[49;173H[K[49;173H87,4[10CBot[43;61H[106m{

[m  [106m}[?25h[m[49;1H[K[45;3H[?25l[49;173H87,3[10CBot[45;3H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 90L, 2695C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi bug-program.c[2P./bug-program make -f ../Makefile
gcc  -g -Wall -Wno-unused-parameter -std=c18 -lm  bug-program.c   -o bug-program
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ make -f ../Makefile[3Pvi bug-program.c[2P./bug-program 
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ val[K[K[K^V[K valgrind -v --leak-check=yes ./bug-program 2>bug-program.valgrind
outgrabe: 22
raths: 21
mome: 20
the: 19
and: 18
borogoves: 17
the: 16
were: 15
mimsy: 14
all: 13
wabe: 12
the: 11
in: 10
gimble: 9
and: 8
gyre: 7
did: 6
toves: 5
slithy: 4
the: 3
and: 2
brillig: 1
twas: 0
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ more bug-program.valgrind 
==740982== Memcheck, a memory error detector
==740982== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==740982== Using Valgrind-3.14.0-353a3587bb-20181007X and LibVEX; rerun with -h for copyright info
==740982== Command: ./bug-program
==740982== 
--740982-- Valgrind options:
--740982--    -v
--740982--    --leak-check=yes
--740982-- Contents of /proc/version:
--740982--   Linux version 5.7.0-0.bpo.2-amd64 (debian-kernel@lists.debian.org) (gcc version 8.3.0 (Debian 8.3.0-6), GNU ld (GNU Binutils for Debian) 2.31.1) #1 SMP Debian 5.7.10-1~bpo10+1 (
2020-07-30)
--740982-- 
--740982-- Arch and hwcaps: AMD64, LittleEndian, amd64-cx16-rdtscp-sse3-avx
--740982-- Page sizes: currently 4096, max supported 4096
--740982-- Valgrind library directory: /usr/lib/x86_64-linux-gnu/valgrind
--740982-- Reading syms from /import/linux/home1/dorbach1/projects/i220a/submit/lab4/exercises/bug-program/bug-program
--740982-- Reading syms from /lib/x86_64-linux-gnu/ld-2.28.so
--740982--   Considering /usr/lib/debug/.build-id/f2/5dfd7b95be4ba386fd71080accae8c0732b711.debug ..
--740982--   .. build-id is valid
--740982-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/memcheck-amd64-linux
--740982--   Considering /usr/lib/debug/.build-id/32/2e77af97f403c3d34ff09edf60b089e72ec889.debug ..
--740982--   .. build-id is valid
--740982--    object doesn't have a dynamic symbol table
--740982-- Scheduler: using generic scheduler lock implementation.
--740982-- Reading suppressions file: /usr/lib/x86_64-linux-gnu/valgrind/default.supp
==740982== embedded gdbserver: reading from /tmp/vgdb-pipe-from-vgdb-to-740982-by-dorbach1-on-???
==740982== embedded gdbserver: writing to   /tmp/vgdb-pipe-to-vgdb-from-740982-by-dorbach1-on-???
==740982== embedded gdbserver: shared mem   /tmp/vgdb-pipe-shared-mem-vgdb-740982-by-dorbach1-on-???
==740982== 
==740982== TO CONTROL THIS PROCESS USING vgdb (which you probably
==740982== don't want to do, unless you know exactly what you're doing,
==740982== or are doing some strange experiment):
==740982==   /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=740982 ...command...
==740982== 
==740982== TO DEBUG THIS PROCESS USING GDB: start GDB like this
==740982==   /path/to/gdb ./bug-program
==740982== and then give GDB the following command
==740982==   target remote | /usr/lib/x86_64-linux-gnu/valgrind/../../bin/vgdb --pid=740982
==740982== --pid is optional if only one valgrind process is running
==740982== 
--740982-- REDIR: 0x401e2f0 (ld-linux-x86-64.so.2:strlen) redirected to 0x580c9ce2 (vgPlain_amd64_linux_REDIR_FOR_strlen)
--740982-- REDIR: 0x401e0d0 (ld-linux-x86-64.so.2:index) redirected to 0x580c9cfc (vgPlain_amd64_linux_REDIR_FOR_index)
--740982-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_core-amd64-linux.so
--740982--   Considering /usr/lib/debug/.build-id/34/fbc4cdfbfce1bfc3d2e522a01a050bf724c930.debug ..
--740982--   .. build-id is valid
--740982-- Reading syms from /usr/lib/x86_64-linux-gnu/valgrind/vgpreload_memcheck-amd64-linux.so
--740982--   Considering /usr/lib/debug/.build-id/ca/bb7898ea982d936cbfadd70ae831c6eb63623f.debug ..
--740982--   .. build-id is valid
[7m--More--(39%)[27m==740982== WARNING: new redirection conflicts with existing -- ignoring it
[7m--More--(40%)[27m--740982--     old: 0x0401e2f0 (strlen              ) R-> (0000.0) 0x580c9ce2 vgPlain_amd64_linux_REDIR_FOR_strlen
[7m--More--(41%)[27m--740982--     new: 0x0401e2f0 (strlen              ) R-> (2007.0) 0x04838d80 strlen
[7m--More--(42%)[27m--740982-- REDIR: 0x401ab10 (ld-linux-x86-64.so.2:strcmp) redirected to 0x4839e40 (strcmp)
[7m--More--(43%)[27m--740982-- REDIR: 0x401e830 (ld-linux-x86-64.so.2:mempcpy) redirected to 0x483d860 (mempcpy)
[7m--More--(44%)[27m--740982-- Reading syms from /lib/x86_64-linux-gnu/libm-2.28.so
[7m--More--(45%)[27m--740982--   Considering /usr/lib/debug/.build-id/88/5dda4b4a5cea600e7b5b98c1ad86996c8d2299.debug ..
[7m--More--(46%)[27m--740982--   .. build-id is valid
[7m--More--(47%)[27m--740982-- Reading syms from /lib/x86_64-linux-gnu/libc-2.28.so
[7m--More--(48%)[27m--740982--   Considering /usr/lib/debug/.build-id/18/b9a9a8c523e5cfe5b5d946d605d09242f09798.debug ..
[7m--More--(49%)[27m--740982--   .. build-id is valid
[7m--More--(49%)[27m--740982-- REDIR: 0x4a88f70 (libc.so.6:memmove) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(51%)[27m--740982-- REDIR: 0x4a88160 (libc.so.6:strncpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(52%)[27m--740982-- REDIR: 0x4a89250 (libc.so.6:strcasecmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(53%)[27m--740982-- REDIR: 0x4a87b70 (libc.so.6:strcat) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(54%)[27m--740982-- REDIR: 0x4a88190 (libc.so.6:rindex) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(55%)[27m--740982-- REDIR: 0x4a8a890 (libc.so.6:rawmemchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(56%)[27m--740982-- REDIR: 0x4aa3230 (libc.so.6:wmemchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(58%)[27m--740982-- REDIR: 0x4aa2cd0 (libc.so.6:wcscmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(59%)[27m--740982-- REDIR: 0x4a890e0 (libc.so.6:mempcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(60%)[27m--740982-- REDIR: 0x4a88f10 (libc.so.6:bcmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(61%)[27m--740982-- REDIR: 0x4a88100 (libc.so.6:strncmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(62%)[27m--740982-- REDIR: 0x4a87be0 (libc.so.6:strcmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(63%)[27m--740982-- REDIR: 0x4a89040 (libc.so.6:memset) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(64%)[27m--740982-- REDIR: 0x4aa2ca0 (libc.so.6:wcschr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(66%)[27m--740982-- REDIR: 0x4a880a0 (libc.so.6:strnlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(67%)[27m--740982-- REDIR: 0x4a87c70 (libc.so.6:strcspn) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(68%)[27m--740982-- REDIR: 0x4a892a0 (libc.so.6:strncasecmp) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(69%)[27m--740982-- REDIR: 0x4a87c40 (libc.so.6:strcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(70%)[27m--740982-- REDIR: 0x4a893e0 (libc.so.6:memcpy@@GLIBC_2.14) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(72%)[27m--740982-- REDIR: 0x4aa44d0 (libc.so.6:wcsnlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(73%)[27m--740982-- REDIR: 0x4a881c0 (libc.so.6:strpbrk) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(74%)[27m--740982-- REDIR: 0x4a87ba0 (libc.so.6:index) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(75%)[27m--740982-- REDIR: 0x4a88070 (libc.so.6:strlen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(76%)[27m--740982-- REDIR: 0x4a8f280 (libc.so.6:memrchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(77%)[27m--740982-- REDIR: 0x4a892f0 (libc.so.6:strcasecmp_l) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(79%)[27m--740982-- REDIR: 0x4a88ee0 (libc.so.6:memchr) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(80%)[27m--740982-- REDIR: 0x4aa2db0 (libc.so.6:wcslen) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(81%)[27m--740982-- REDIR: 0x4a88460 (libc.so.6:strspn) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(82%)[27m--740982-- REDIR: 0x4a89220 (libc.so.6:stpncpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(83%)[27m--740982-- REDIR: 0x4a891f0 (libc.so.6:stpcpy) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(84%)[27m--740982-- REDIR: 0x4a8a8c0 (libc.so.6:strchrnul) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(86%)[27m--740982-- REDIR: 0x4a89340 (libc.so.6:strncasecmp_l) redirected to 0x482b1b0 (_vgnU_ifunc_wrapper)
[7m--More--(87%)[27m--740982-- REDIR: 0x4a97ef0 (libc.so.6:__strrchr_sse2) redirected to 0x48387d0 (__strrchr_sse2)
[7m--More--(88%)[27m--740982-- REDIR: 0x4a84350 (libc.so.6:malloc) redirected to 0x4835710 (malloc)
[7m--More--(89%)[27m--740982-- REDIR: 0x4a981e0 (libc.so.6:__strlen_sse2) redirected to 0x4838cc0 (__strlen_sse2)
[7m--More--(90%)[27m--740982-- REDIR: 0x4a9d100 (libc.so.6:__strcpy_sse2_unaligned) redirected to 0x4838db0 (strcpy)
[7m--More--(91%)[27m--740982-- REDIR: 0x4a97ce0 (libc.so.6:__strchrnul_sse2) redirected to 0x483d390 (strchrnul)
[7m--More--(92%)[27m--740982-- REDIR: 0x4aa2000 (libc.so.6:__mempcpy_sse2_unaligned) redirected to 0x483d4a0 (mempcpy)
[7m--More--(94%)[27m--740982-- REDIR: 0x4a849a0 (libc.so.6:free) redirected to 0x4836940 (free)
[7m--More--(95%)[27m==740982== [K
[7m--More--(95%)[27m==740982== HEAP SUMMARY:
[7m--More--(95%)[27m==740982==     in use at exit: 0 bytes in 0 blocks
[7m--More--(96%)[27m==740982==   total heap usage: 47 allocs, 47 frees, 1,699 bytes allocated
[7m--More--(97%)[27m==740982== [K
[7m--More--(97%)[27m==740982== All heap blocks were freed -- no leaks are possible
[7m--More--(98%)[27m==740982== [K
[7m--More--(98%)[27m==740982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
[7m--More--(99%)[27m==740982== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ 
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vui[K[Ki m[K[23@more bug-program.valgrind[C valgrind -v --leak-check=yes ./bug-program 2>bug-program.valgrind./bug-program [Kmake -f ../Makefile[3Pvi bug-program.c
[?2004h[?1049h[22;0;0t[?1h=[?2004h[1;49r[?12h[?12l[22;2t[22;1t[27m[23m[29m[m[H[2J[?25l[49;1H"bug-program.c" 90L, 2695C[2;1Hâ–½[6n[2;1H  [1;1H[>c]10;?]11;?[1;1H[95m#include [m[95m<errno.h>[m
[95m#include [m[95m<stdio.h>[m
[95m#include [m[95m<stdlib.h>[m
[95m#include [m[95m<string.h>[m

[91m/** A struct used to form a linear chain of key-value pairs. */[m
[94mtypedef[m [94mstruct[m KeyValueStruct {
  [94mconst[m [94mchar[m *key;[7C[91m/** string key */[m
  [94mint[m value;[13C[91m/** integer value */[m
  [94mstruct[m KeyValueStruct *succ; [91m/** next key-value in chain */[m
} KeyValueNode;

[91m/** Given some chain keyValues of key-value struct's, add the
 *  key-value (k, v) at head of chain keyValues and return the
 *  resulting chain.
 */[m
[94mstatic[m KeyValueNode *
add_key_value(KeyValueNode *keyValues, [94mconst[m [94mchar[m *k, [94mint[m v)
{
  [91m//allocate storage for new KeyValue struct
[m  [91m//BUG 1 : sizeof(KeyValueNode * ) gives the size of a pointer[m
  KeyValueNode *kv = malloc([31msizeof[m(KeyValueNode ));

  [91m//allocate storage for string pointed to by k
[m  [91m//BUG 2 : strln(k) is not enough space to fit a string as it doesn't include space for the terminating null char[m
  [94mchar[m *s = malloc(strlen(k) + [95m1[m);

  [31mif[m (kv == [95mNULL[m || s == [95mNULL[m) { [91m//check if allocations succeeded[m
    fprintf([95mstderr[m, [95m"malloc failure: %s\n"[m, strerror(errno));
    exit([95m1[m);
  }
  strcpy(s, k);  [91m//copy string k into newly allocated memory pointed to by s

[m  [91m//initialize fields of *kv.[m
  kv->key = s;
  kv->value = v;
  kv->succ = keyValues;

  [31mreturn[m kv;
}

[91m/** Free all the key-value's in keyValues. */[m
[94mstatic[m [94mvoid[m
free_key_values(KeyValueNode *keyValues)
{
  [91m//go thru chain of keyValues
[m  [91m//BUG 3 and 4 when freeing we must also free the actual string, free(p) will just get rid of the pointer, it will also get rid of the pointer to succ so we must get it before we free p[m
  KeyValueNode *prev = keyValues;[49;173H1,1[11CTop]2;bug-program.c (~/projects/i220a/submit/lab4/exercises/bug-program) - VIM]1;bug-program.c[1;1H[?25hP+q436f\P+q6b75\P+q6b64\P+q6b72\P+q6b6c\P+q2332\P+q2334\P+q2569\P+q2a37\P+q6b31\[?25l[49;173H2[2;1H[?25h[?25l[49;173H3[3;1H[?25h[?25l[49;173H4[4;1H[?25h[?25l[49;173H5,0-1[5;1H[?25h[?25l[49;173H6,1  [6;1H[?25h[?25l[49;173H7[7;1H[?25h[?25l[49;173H8[8;1H[?25h[?25l[49;173H9[9;1H[?25h[?25l[49;173H10,1[10;1H[?25h[?25l[7;31H[106m{[11;1H}[m[49;174H1[11;1H[?25h[?25l[7;31H{[11;1H}[49;174H2,0-1[12;1H[?25h[?25l[49;174H3,1  [13;1H[?25h[?25l[49;174H4[14;1H[?25h[?25l[49;174H5[15;1H[?25h[?25l[49;174H6[16;1H[?25h[?25l[49;174H7[17;1H[?25h[?25l[49;174H8[18;1H[?25h[?25l
[106m{[40;1H}[m[49;174H9[19;1H[?25h[?25l{[40;1H}[49;173H20[20;1H[?25h[?25l[49;174H1[21;1H[?25h[?25l[49;174H2[22;1H[?25h[?25l[49;174H3,0-1[23;1H[?25h[?25l[49;174H4,1  [24;1H[?25h[?25l[49;174H5[25;1H[?25h[?25l[49;174H6[26;1H[?25h[?25l[49;174H7,0-1[27;1H[?25h[?25l[49;174H8,1  [28;1H[?25h[?25l[49;174H9[29;1H[?25h[?25l[49;173H30[30;1H[?25h[?25l[49;174H1[31;1H[?25h[?25l[49;174H2[32;1H[?25h[?25l[49;174H3,0-1[33;1H[?25h[?25l[49;174H4,1  [34;1H[?25h[?25l[49;174H5[35;1H[?25h[?25l[49;174H6[36;1H[?25h[?25l[49;174H7[37;1H[?25h[?25l[49;174H8,0-1[38;1H[?25h[?25l[49;174H9,1  [39;1H[?25h[?25l[19;1H[106m{[40;1H}[m[49;173H40[40;1H[?25h[?25l[19;1H{[40;1H}[49;174H1,0-1[41;1H[?25h[?25l[49;174H2,1  [42;1H[?25h[?25l[49;174H3[43;1H[?25h[?25l[49;174H4[44;1H[?25h[?25l[49;174H5[45;1H[?25h[?25l[49;174H6[46;1H[?25h[?25l[49;174H7[47;1H[?25h[?25l[49;174H8[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p;[49;1H[K[49;173H49,1[11C2%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m (p = prev->succ; p != [95mNULL[m; p = p->succ) {[49;173H[K[49;173H50,1[11C4%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H51,1[11C7%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H52,1[11C9%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[49;173H[K[49;173H53,1[10C11%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(([94mvoid[m * ) prev-> key);[49;173H[K[49;173H54,1[10C14%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hfree(prev);[49;173H[K[49;173H55,1[10C16%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hprev = p;[49;173H[K[49;173H56,1[10C19%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H57,1[10C21%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(([94mvoid[m *) prev->key);[49;173H[K[49;173H58,1[10C23%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3Hfree(prev);[49;173H[K[49;173H59,1[10C26%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[33;1H[106m{[48;1H}[m[49;173H[K[49;173H60,1[10C28%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[32;1H{[47;1H}[49;173H[K[49;173H61,0-1[8C30%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Make key-values for all the words in the first verse of Carroll's[m[49;173H[K[49;173H62,1[10C33%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  Jabberwocky with value being the index of the word.[m[49;173H[K[49;173H63,1[10C35%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H64,1[10C38%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mstatic[m KeyValueNode *[49;173H[K[49;173H65,1[10C40%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1Hmake_key_values([94mvoid[m) {[49;173H[K[49;173H66,1[10C42%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[94mconst[m [94mchar[m *keys[] = {[49;173H[K[49;173H67,1[10C45%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"twas"[m, [95m"brillig"[m, [95m"and"[m, [95m"the"[m, [95m"slithy"[m, [95m"toves"[m,[49;173H[K[49;173H68,1[10C47%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"did"[m, [95m"gyre"[m, [95m"and"[m, [95m"gimble"[m, [95m"in"[m, [95m"the"[m, [95m"wabe"[m,[49;173H[K[49;173H69,1[10C50%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"all"[m, [95m"mimsy"[m, [95m"were"[m, [95m"the"[m, [95m"borogoves"[m,[49;173H[K[49;173H70,1[10C52%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5H[95m"and"[m, [95m"the"[m, [95m"mome"[m, [95m"raths"[m, [95m"outgrabe"[m,[49;173H[K[49;173H71,1[10C54%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H};[49;173H[K[49;173H72,1[10C57%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3HKeyValueNode *p = [95mNULL[m;[49;173H[K[49;173H73,1[10C59%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mfor[m ([94mint[m i = [95m0[m; i < [31msizeof[m(keys)/[31msizeof[m(keys[[95m0[m]); i++) {[49;173H[K[49;173H74,1[10C61%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;5Hp = add_key_value(p, keys[i], i);[49;173H[K[49;173H75,1[10C64%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H}[49;173H[K[49;173H76,1[10C66%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;3H[31mreturn[m p;[49;173H[K[49;173H77,1[10C69%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[36;23H[106m{[48;1H}[m[49;173H[K[49;173H78,1[10C71%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[35;23H{[47;1H}[49;173H[K[49;173H79,0-1[8C73%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m/** Print out all the words in the first verse of Carroll's Jabberwocky[m[49;173H[K[49;173H80,1[10C76%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m *  paired with their index in the verse.[m[49;173H[K[49;173H81,1[10C78%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[91m */[m[49;173H[K[49;173H82,1[10C80%[48;1H[?25h[?25l[1;48r[48;1H
[1;49r[48;1H[94mint[m main() {[49;173H[K[49;173H83,1[10C83%[48;1H[?25h[?25l[49;174H2[47;1H[?25h[?25l[49;174H1[46;1H[?25h[?25l[49;174H0[45;1H[?25h[?25l[49;173H79,0-1[44;1H[?25h[?25l[31;23H[106m{[43;1H}[m[49;174H8,1  [43;1H[?25h[?25l[31;23H{[43;1H}[49;174H7[42;1H[?25h[?25l[49;174H6[41;1H[?25h[?25l[49;174H5[40;1H[?25h[?25l[49;174H4[39;1H[?25h[?25l[49;174H3[38;1H[?25h[?25l[49;174H2[37;1H[?25h[?25l[49;174H1[36;1H[?25h[?25l[49;174H0[35;1H[?25h[?25l[49;173H69[34;1H[?25h[?25l[49;174H8[33;1H[?25h[?25l[49;174H7[32;1H[?25h[?25l[49;174H6[31;1H[?25h[?25l[49;174H5[30;1H[?25h[?25l[49;174H4[29;1H[?25h[?25l[49;174H3[28;1H[?25h[?25l[49;174H2[27;1H[?25h[?25l[49;174H1,0-1[26;1H[?25h[?25l[10;1H[106m{[25;1H}[m[49;174H0,1  [25;1H[?25h[?25l[10;1H{[25;1H}[49;173H59[24;1H[?25h[?25l[49;174H8[23;1H[?25h[?25l[49;174H7[22;1H[?25h[?25l[49;174H6[21;1H[?25h[?25l[49;174H5[20;1H[?25h[?25l[49;176H2[20;2H[?25h[?25l[49;176H3[20;3H[?25h[?25l[49;176H4[20;4H[?25h[?25l[49;174H4[19;4H[?25h[?25l[49;174H5[20;4H[?25h[?25l[49;174H6[21;4H[?25h[?25l[15;48H[106m{[22;3H}[m[49;174H7,3[22;3H[?25h[?25l[15;48H{[22;3H}[49;174H8,4[23;4H[?25h[?25l[49;174H9[24;4H[?25h[?25l[10;1H[106m{[25;1H}[m[49;173H60,1[25;1H[?25h[?25l[10;1H{[25;1H}[49;173H59,4[24;4H[?25h[?25l[49;174H8[23;4H[?25h[?25l[49;174H9[24;4H[?25h[?25l[49;174H8[23;4H[?25h[?25l[15;48H[106m{[22;3H}[m[49;174H7,3[22;3H[?25h[?25l[15;48H{[22;3H}[49;174H6,4[21;4H[?25h[?25l[49;174H5[20;4H[?25h[?25l[49;174H4[19;4H[?25h[?25l[49;174H3[18;4H[?25h[?25l[49;173H[K[49;1H:[?2004h[?25hw[?25l[?25hq[?25l[?25h[?25l[?2004l"bug-program.c" 90L, 2695C written]2;Terminal - ]1;Terminal - [23;2t[23;1t[22;2t[22;1t[23;2t[23;1t
[?2004l[?1l>[?25h[?1049l[23;0;0tdorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ vi[K[Kv[Kvi[K[Kgit as[K[Kstatus
On branch lab4
Your branch is up to date with 'origin/lab4'.

Changes not staged for commit:
  (use "git add/rm <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	[31mdeleted:    ../bad-types/.bad-types.c.swp[m
	[31mmodified:   bug-program.c[m
	[31mmodified:   ../../lab4.LOG[m

no changes added to commit (use "git add" and/or "git commit -a")
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git add .
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git commit -m "Lab 4 Done"
[lab4 2eb6628] Lab 4 Done
 Committer: Daniel Orbach <dorbach1@cs.binghamton.edu>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly. Run the
following command and follow the instructions in your editor to edit
your configuration file:

    git config --global --edit

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 1 file changed, 16 insertions(+), 4 deletions(-)
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git merge main
Already up to date.
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git [K[K[K[Kgit checkout main
error: Your local changes to the following files would be overwritten by checkout:
	submit/lab4/lab4.LOG
Please commit your changes or stash them before you switch branches.
Aborting
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git merge lab4
Already up to date.
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git [K[K[K[Kgt[K[Kti[K[Kgit checkout lab4
D	submit/lab4/exercises/bad-types/.bad-types.c.swp
M	submit/lab4/lab4.LOG
Already on 'lab4'
Your branch is ahead of 'origin/lab4' by 1 commit.
  (use "git push" to publish your local commits)
dorbach1@g7-26:/import/linux/home1/dorbach1/i220a/submit/lab4/exercises/bug-program$ git[K[K[Kg[Kexit

Script done on 2021-09-30 11:30:45-04:00 [COMMAND_EXIT_CODE="0"]
